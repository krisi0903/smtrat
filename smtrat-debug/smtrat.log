INFO  smtrat   smtratSolver.cpp:139  main(): Constructing strategy.
INFO  smtrat.strategygraph Manager.h:389  setStrategy(): Strategygraph:
Module (2)
    SATModule<SATSettings1> (1)
        NewCADModule<NewCADChordal> (0)

INFO  smtrat.strategygraph Manager.h:390  setStrategy(): Branches: 1
WARN  smtrat   execute_smtlib.h:58   executeFile(): Running queued instructions.
INFO  smtrat.module  Module.cpp:89   check(): check final full with module Module (0)
INFO  smtrat.module  Module.cpp:1090 print(): 	********************************************************************************
INFO  smtrat.module  Module.cpp:1091 print(): 	 Solver Module (0)
INFO  smtrat.module  Module.cpp:1092 print(): 	
INFO  smtrat.module  Module.cpp:1105 printReceivedFormula(): 		Received formula:
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v16 < 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v13 < 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                          v19 < 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                          v14 < 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v17 < 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v14*v19 + v17^2 < 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1 + v1 < 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1 + v2 < 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1 + v7 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                            1 + -1*v2 + -1*v9 + v1*v9 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           v6 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           v8 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                          v11 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                          v12 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v3*v13 + v3*v27 + v5*v13 + -1*v5*v16 + v7*v24 + v9*v22 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v3*v14 + v3*v30 + v5*v14 + -1*v5*v17 + v7*v29 + v9*v28 + v10*v13 + -1*v10*v16 + v11*v24 + v12*v22 + v3*v4*v14 + -1*v3*v4*v17 + v3*v6*v29 + v3*v8*v28 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v13 + v16 + -1*v1*v16 + v2*v13 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v3*v14 + v3*v17 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v3*v15 + v3*v18 + v5*v15 + -2*v5*v18 + v5*v20 + -1*v7*v17 + v9*v14 + v10*v14 + -2*v10*v17 + v10*v19 + -1*v11*v16 + v12*v13 + -1*v1*v3*v18 + v1*v5*v18 + -1*v1*v5*v20 + v1*v10*v17 + -1*v1*v10*v19 + v2*v3*v15 + -1*v2*v5*v15 + v2*v5*v18 + -1*v2*v10*v14 + v2*v10*v17 + v3*v4*v15 + -2*v3*v4*v18 + v3*v4*v20 + -1*v3*v6*v17 + v3*v8*v14 + -1*v4*v5*v15 + 3*v4*v5*v18 + -3*v4*v5*v20 + v4*v5*v21 + v4*v7*v17 + -1*v4*v7*v19 + -1*v4*v9*v14 + v4*v9*v17 + v5*v6*v17 + -1*v5*v6*v19 + -1*v5*v8*v14 + v5*v8*v17 + v1*v3*v4*v18 + -1*v1*v3*v4*v20 + -1*v1*v4*v5*v18 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v21 + -1*v2*v3*v4*v15 + v2*v3*v4*v18 + v2*v4*v5*v15 + -2*v2*v4*v5*v18 + v2*v4*v5*v20 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v1 + v2 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v7 + v9 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           v3 = 0
INFO  smtrat.module  Module.cpp:1094 print(): 	
INFO  smtrat.module  Module.cpp:1118 printPassedFormula(): 		Passed formula:
INFO  smtrat.module  Module.cpp:1096 print(): 	
INFO  smtrat.module  Module.cpp:1136 printInfeasibleSubsets(): 		Infeasible subsets:
INFO  smtrat.module  Module.cpp:1098 print(): 	
INFO  smtrat.module  Module.cpp:1099 print(): 	********************************************************************************
INFO  smtrat.module  Module.cpp:89   check(): check final full with module SATModule<SATSettings1> (1)
INFO  smtrat.module  Module.cpp:1090 print(): 	********************************************************************************
INFO  smtrat.module  Module.cpp:1091 print(): 	 Solver SATModule<SATSettings1> (1)
INFO  smtrat.module  Module.cpp:1092 print(): 	
INFO  smtrat.module  Module.cpp:1105 printReceivedFormula(): 		Received formula:
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v16 < 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v13 < 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                          v19 < 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                          v14 < 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v17 < 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v14*v19 + v17^2 < 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1 + v1 < 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1 + v2 < 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1 + v7 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                            1 + -1*v2 + -1*v9 + v1*v9 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           v6 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           v8 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                          v11 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                          v12 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v3*v13 + v3*v27 + v5*v13 + -1*v5*v16 + v7*v24 + v9*v22 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v3*v14 + v3*v30 + v5*v14 + -1*v5*v17 + v7*v29 + v9*v28 + v10*v13 + -1*v10*v16 + v11*v24 + v12*v22 + v3*v4*v14 + -1*v3*v4*v17 + v3*v6*v29 + v3*v8*v28 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v13 + v16 + -1*v1*v16 + v2*v13 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v3*v14 + v3*v17 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v3*v15 + v3*v18 + v5*v15 + -2*v5*v18 + v5*v20 + -1*v7*v17 + v9*v14 + v10*v14 + -2*v10*v17 + v10*v19 + -1*v11*v16 + v12*v13 + -1*v1*v3*v18 + v1*v5*v18 + -1*v1*v5*v20 + v1*v10*v17 + -1*v1*v10*v19 + v2*v3*v15 + -1*v2*v5*v15 + v2*v5*v18 + -1*v2*v10*v14 + v2*v10*v17 + v3*v4*v15 + -2*v3*v4*v18 + v3*v4*v20 + -1*v3*v6*v17 + v3*v8*v14 + -1*v4*v5*v15 + 3*v4*v5*v18 + -3*v4*v5*v20 + v4*v5*v21 + v4*v7*v17 + -1*v4*v7*v19 + -1*v4*v9*v14 + v4*v9*v17 + v5*v6*v17 + -1*v5*v6*v19 + -1*v5*v8*v14 + v5*v8*v17 + v1*v3*v4*v18 + -1*v1*v3*v4*v20 + -1*v1*v4*v5*v18 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v21 + -1*v2*v3*v4*v15 + v2*v3*v4*v18 + v2*v4*v5*v15 + -2*v2*v4*v5*v18 + v2*v4*v5*v20 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v1 + v2 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v7 + v9 = 0
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           v3 = 0
INFO  smtrat.module  Module.cpp:1094 print(): 	
INFO  smtrat.module  Module.cpp:1118 printPassedFormula(): 		Passed formula:
INFO  smtrat.module  Module.cpp:1096 print(): 	
INFO  smtrat.module  Module.cpp:1136 printInfeasibleSubsets(): 		Infeasible subsets:
INFO  smtrat.module  Module.cpp:1098 print(): 	
INFO  smtrat.module  Module.cpp:1099 print(): 	********************************************************************************
INFO  smtrat.module  Module.cpp:89   check(): check final full with module NewCADModule<NewCADChordal> (2)
INFO  smtrat.module  Module.cpp:1090 print(): 	********************************************************************************
INFO  smtrat.module  Module.cpp:1091 print(): 	 Solver NewCADModule<NewCADChordal> (2)
INFO  smtrat.module  Module.cpp:1092 print(): 	
INFO  smtrat.module  Module.cpp:1105 printReceivedFormula(): 		Received formula:
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v16 < 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v13 < 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                          v19 < 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                          v14 < 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v17 < 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v14*v19 + v17^2 < 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1 + v1 < 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1 + v2 < 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1 + v7 = 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                            1 + -1*v2 + -1*v9 + v1*v9 = 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           v6 = 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           v8 = 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                          v11 = 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                          v12 = 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v3*v13 + v3*v27 + v5*v13 + -1*v5*v16 + v7*v24 + v9*v22 = 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v3*v14 + v3*v30 + v5*v14 + -1*v5*v17 + v7*v29 + v9*v28 + v10*v13 + -1*v10*v16 + v11*v24 + v12*v22 + v3*v4*v14 + -1*v3*v4*v17 + v3*v6*v29 + v3*v8*v28 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 = 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v13 + v16 + -1*v1*v16 + v2*v13 = 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v3*v14 + v3*v17 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 = 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v3*v15 + v3*v18 + v5*v15 + -2*v5*v18 + v5*v20 + -1*v7*v17 + v9*v14 + v10*v14 + -2*v10*v17 + v10*v19 + -1*v11*v16 + v12*v13 + -1*v1*v3*v18 + v1*v5*v18 + -1*v1*v5*v20 + v1*v10*v17 + -1*v1*v10*v19 + v2*v3*v15 + -1*v2*v5*v15 + v2*v5*v18 + -1*v2*v10*v14 + v2*v10*v17 + v3*v4*v15 + -2*v3*v4*v18 + v3*v4*v20 + -1*v3*v6*v17 + v3*v8*v14 + -1*v4*v5*v15 + 3*v4*v5*v18 + -3*v4*v5*v20 + v4*v5*v21 + v4*v7*v17 + -1*v4*v7*v19 + -1*v4*v9*v14 + v4*v9*v17 + v5*v6*v17 + -1*v5*v6*v19 + -1*v5*v8*v14 + v5*v8*v17 + v1*v3*v4*v18 + -1*v1*v3*v4*v20 + -1*v1*v4*v5*v18 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v21 + -1*v2*v3*v4*v15 + v2*v3*v4*v18 + v2*v4*v5*v15 + -2*v2*v4*v5*v18 + v2*v4*v5*v20 = 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v1 + v2 = 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           -1*v7 + v9 = 0 deducted
INFO  smtrat.module  Module.cpp:1112 printReceivedFormula(): 		                                           v3 = 0 deducted
INFO  smtrat.module  Module.cpp:1094 print(): 	
INFO  smtrat.module  Module.cpp:1118 printPassedFormula(): 		Passed formula:
INFO  smtrat.module  Module.cpp:1096 print(): 	
INFO  smtrat.module  Module.cpp:1136 printInfeasibleSubsets(): 		Infeasible subsets:
INFO  smtrat.module  Module.cpp:1098 print(): 	
INFO  smtrat.module  Module.cpp:1099 print(): 	********************************************************************************
INFO  smtrat.cad          CAD.h:231  check(): Current projection:
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [0: ]
	L: {0: }
2 / v23
	P: [0: ]
	L: {0: }
3 / v27
	P: [0: ]
	L: {0: }
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [1: v2^1 + -1 [1: (7,7)@0]]
	L: {1: 0}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [1: v1^1 + -1 [1: (6,6)@0]]
	L: {1: 0}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [1: v16^1 + 0 [1: (0,0)@0]]
	L: {1: 0}
16 / v19
	P: [1: v19^1 + 0 [1: (2,2)@0]]
	L: {1: 0}
17 / v9
	P: [0: ]
	L: {0: }
18 / v8
	P: [1: v8^1 + 0 [1: (11,11)@0]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [1: (1,1)@0]]
	L: {1: 0}
20 / v14
	P: [1: v14^1 + 0 [1: (3,3)@0]]
	L: {1: 0}
21 / v5
	P: [0: ]
	L: {0: }
22 / v3
	P: [1: v3^1 + 0 [1: (21,21)@0]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [0: ]
	L: {0: }
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(20,20)@0, (19,19)@0, (14,14)@0, (16,16)@0, (5,5)@0, (0,0)@16, (0,0)@8, (15,15)@0, (17,17)@0, (9,9)@0, (0,0)@14, (0,0)@18, (0,0)@27, (0,0)@23, (0,0)@15, (0,0)@20, (0,0)@19, (0,0)@28, (18,18)@0, (0,0)@26, (0,0)@6, (0,0)@22]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [0: ]
	L: {0: }
2 / v23
	P: [0: ]
	L: {0: }
3 / v27
	P: [0: ]
	L: {0: }
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [1: v2^1 + -1 [1: (7,7)@0]]
	L: {1: 0}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [1: v1^1 + -1 [1: (6,6)@0]]
	L: {1: 0}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [1: v16^1 + 0 [1: (0,0)@0]]
	L: {1: 0}
16 / v19
	P: [1: v19^1 + 0 [1: (2,2)@0]]
	L: {1: 0}
17 / v9
	P: [1: v9^1 + -1*v7 [1: (20,20)@0]]
	L: {1: 0}
18 / v8
	P: [1: v8^1 + 0 [1: (11,11)@0]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [1: (1,1)@0]]
	L: {1: 0}
20 / v14
	P: [1: v14^1 + 0 [1: (3,3)@0]]
	L: {1: 0}
21 / v5
	P: [0: ]
	L: {0: }
22 / v3
	P: [1: v3^1 + 0 [1: (21,21)@0]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [0: ]
	L: {0: }
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(19,19)@0, (5,5)@0, (14,14)@0, (16,16)@0, (9,9)@0, (0,0)@16, (0,0)@8, (15,15)@0, (17,17)@0, (0,0)@6, (0,0)@14, (0,0)@18, (0,0)@27, (0,0)@23, (0,0)@15, (0,0)@20, (0,0)@19, (0,0)@28, (18,18)@0, (0,0)@26, (0,0)@22, (0,0)@17]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [0: ]
	L: {0: }
2 / v23
	P: [0: ]
	L: {0: }
3 / v27
	P: [0: ]
	L: {0: }
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [2: v2^1 + -1 [1: (7,7)@0], v2^1 + -1*v1 [1: (19,19)@0]]
	L: {2: 0, 1}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [1: v1^1 + -1 [1: (6,6)@0]]
	L: {1: 0}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [1: v16^1 + 0 [1: (0,0)@0]]
	L: {1: 0}
16 / v19
	P: [1: v19^1 + 0 [1: (2,2)@0]]
	L: {1: 0}
17 / v9
	P: [1: v9^1 + -1*v7 [1: (20,20)@0]]
	L: {1: 0}
18 / v8
	P: [1: v8^1 + 0 [1: (11,11)@0]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [1: (1,1)@0]]
	L: {1: 0}
20 / v14
	P: [1: v14^1 + 0 [1: (3,3)@0]]
	L: {1: 0}
21 / v5
	P: [0: ]
	L: {0: }
22 / v3
	P: [1: v3^1 + 0 [1: (21,21)@0]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [0: ]
	L: {0: }
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(5,5)@0, (9,9)@0, (14,14)@0, (16,16)@0, (0,0)@6, (0,0)@16, (0,0)@8, (15,15)@0, (17,17)@0, (0,0)@17, (1,1)@6, (0,0)@18, (0,0)@27, (0,0)@23, (0,0)@15, (0,0)@20, (0,0)@19, (0,0)@28, (18,18)@0, (0,0)@26, (0,0)@22, (0,0)@14, (0,1)@6]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [0: ]
	L: {0: }
2 / v23
	P: [0: ]
	L: {0: }
3 / v27
	P: [0: ]
	L: {0: }
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [2: v2^1 + -1 [1: (7,7)@0], v2^1 + -1*v1 [1: (19,19)@0]]
	L: {2: 0, 1}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [1: v1^1 + -1 [1: (6,6)@0]]
	L: {1: 0}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [1: v16^1 + 0 [1: (0,0)@0]]
	L: {1: 0}
16 / v19
	P: [2: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0]]
	L: {2: 0, 1}
17 / v9
	P: [1: v9^1 + -1*v7 [1: (20,20)@0]]
	L: {1: 0}
18 / v8
	P: [1: v8^1 + 0 [1: (11,11)@0]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [1: (1,1)@0]]
	L: {1: 0}
20 / v14
	P: [1: v14^1 + 0 [1: (3,3)@0]]
	L: {1: 0}
21 / v5
	P: [0: ]
	L: {0: }
22 / v3
	P: [1: v3^1 + 0 [1: (21,21)@0]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [0: ]
	L: {0: }
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(9,9)@0, (16,16)@0, (14,14)@0, (17,17)@0, (0,0)@6, (0,0)@16, (0,0)@8, (15,15)@0, (18,18)@0, (0,0)@17, (1,1)@6, (1,1)@16, (0,0)@27, (0,0)@23, (0,0)@15, (0,0)@20, (0,0)@19, (0,0)@28, (0,1)@6, (0,0)@26, (0,0)@22, (0,0)@14, (0,1)@16, (0,0)@18]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [0: ]
	L: {0: }
2 / v23
	P: [0: ]
	L: {0: }
3 / v27
	P: [0: ]
	L: {0: }
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [3: v2^1 + -1 [1: (7,7)@0], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0]]
	L: {3: 2, 0, 1}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [1: v1^1 + -1 [1: (6,6)@0]]
	L: {1: 0}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [1: v16^1 + 0 [1: (0,0)@0]]
	L: {1: 0}
16 / v19
	P: [2: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0]]
	L: {2: 0, 1}
17 / v9
	P: [1: v9^1 + -1*v7 [1: (20,20)@0]]
	L: {1: 0}
18 / v8
	P: [1: v8^1 + 0 [1: (11,11)@0]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [1: (1,1)@0]]
	L: {1: 0}
20 / v14
	P: [1: v14^1 + 0 [1: (3,3)@0]]
	L: {1: 0}
21 / v5
	P: [0: ]
	L: {0: }
22 / v3
	P: [1: v3^1 + 0 [1: (21,21)@0]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [0: ]
	L: {0: }
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(16,16)@0, (17,17)@0, (14,14)@0, (15,15)@0, (0,0)@6, (1,2)@6, (0,0)@8, (0,0)@18, (18,18)@0, (0,0)@17, (1,1)@6, (2,2)@6, (0,2)@6, (0,0)@23, (0,0)@15, (0,0)@20, (0,0)@19, (0,0)@28, (0,1)@6, (0,0)@26, (0,0)@22, (0,0)@14, (0,1)@16, (1,1)@16, (0,0)@16, (0,0)@27]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [0: ]
	L: {0: }
2 / v23
	P: [0: ]
	L: {0: }
3 / v27
	P: [0: ]
	L: {0: }
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [4: v2^1 + -1 [1: (7,7)@0], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0]]
	L: {4: 2, 0, 1, 3}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [1: v1^1 + -1 [1: (6,6)@0]]
	L: {1: 0}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [1: v16^1 + 0 [1: (0,0)@0]]
	L: {1: 0}
16 / v19
	P: [2: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0]]
	L: {2: 0, 1}
17 / v9
	P: [1: v9^1 + -1*v7 [1: (20,20)@0]]
	L: {1: 0}
18 / v8
	P: [1: v8^1 + 0 [1: (11,11)@0]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [1: (1,1)@0]]
	L: {1: 0}
20 / v14
	P: [1: v14^1 + 0 [1: (3,3)@0]]
	L: {1: 0}
21 / v5
	P: [0: ]
	L: {0: }
22 / v3
	P: [1: v3^1 + 0 [1: (21,21)@0]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [0: ]
	L: {0: }
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(14,14)@0, (17,17)@0, (1,2)@6, (15,15)@0, (0,0)@6, (0,2)@6, (3,3)@6, (0,0)@18, (18,18)@0, (0,0)@17, (1,1)@6, (2,2)@6, (0,3)@6, (1,3)@6, (0,0)@15, (0,0)@20, (0,0)@19, (0,0)@28, (0,1)@6, (0,0)@26, (0,0)@22, (0,0)@14, (0,1)@16, (1,1)@16, (0,0)@16, (0,0)@27, (2,3)@6, (0,0)@23, (0,0)@8]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [0: ]
	L: {0: }
2 / v23
	P: [0: ]
	L: {0: }
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [4: v2^1 + -1 [1: (7,7)@0], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0]]
	L: {4: 2, 0, 1, 3}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [1: v1^1 + -1 [1: (6,6)@0]]
	L: {1: 0}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [1: v16^1 + 0 [1: (0,0)@0]]
	L: {1: 0}
16 / v19
	P: [2: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0]]
	L: {2: 0, 1}
17 / v9
	P: [1: v9^1 + -1*v7 [1: (20,20)@0]]
	L: {1: 0}
18 / v8
	P: [1: v8^1 + 0 [1: (11,11)@0]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [1: (1,1)@0]]
	L: {1: 0}
20 / v14
	P: [1: v14^1 + 0 [1: (3,3)@0]]
	L: {1: 0}
21 / v5
	P: [0: ]
	L: {0: }
22 / v3
	P: [1: v3^1 + 0 [1: (21,21)@0]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [0: ]
	L: {0: }
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(17,17)@0, (15,15)@0, (0,0)@3, (18,18)@0, (0,0)@6, (0,2)@6, (1,2)@6, (0,0)@18, (0,1)@6, (0,0)@17, (1,1)@6, (2,2)@6, (0,3)@6, (3,3)@6, (0,0)@15, (0,0)@20, (0,0)@19, (0,0)@28, (0,0)@8, (0,0)@26, (0,0)@22, (0,0)@14, (0,1)@16, (1,1)@16, (0,0)@16, (0,0)@27, (2,3)@6, (0,0)@23, (1,3)@6]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [0: ]
	L: {0: }
2 / v23
	P: [0: ]
	L: {0: }
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [1: (7,7)@0], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [1: v1^1 + -1 [1: (6,6)@0]]
	L: {1: 0}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [1: v16^1 + 0 [1: (0,0)@0]]
	L: {1: 0}
16 / v19
	P: [2: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0]]
	L: {2: 0, 1}
17 / v9
	P: [1: v9^1 + -1*v7 [1: (20,20)@0]]
	L: {1: 0}
18 / v8
	P: [1: v8^1 + 0 [1: (11,11)@0]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [1: (1,1)@0]]
	L: {1: 0}
20 / v14
	P: [1: v14^1 + 0 [1: (3,3)@0]]
	L: {1: 0}
21 / v5
	P: [0: ]
	L: {0: }
22 / v3
	P: [1: v3^1 + 0 [1: (21,21)@0]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [0: ]
	L: {0: }
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(15,15)@0, (18,18)@0, (0,0)@3, (0,1)@6, (0,0)@6, (0,2)@6, (1,2)@6, (4,4)@6, (1,3)@6, (0,0)@17, (1,1)@6, (2,2)@6, (0,3)@6, (3,3)@6, (1,4)@6, (3,4)@6, (0,0)@19, (0,0)@28, (0,0)@8, (0,0)@26, (0,0)@22, (0,0)@14, (0,1)@16, (1,1)@16, (0,0)@16, (0,0)@27, (2,3)@6, (0,0)@23, (2,4)@6, (0,0)@15, (0,4)@6, (0,0)@20, (0,0)@18]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [0: ]
	L: {0: }
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [1: (7,7)@0], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [1: v1^1 + -1 [1: (6,6)@0]]
	L: {1: 0}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [1: v16^1 + 0 [1: (0,0)@0]]
	L: {1: 0}
16 / v19
	P: [2: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0]]
	L: {2: 0, 1}
17 / v9
	P: [1: v9^1 + -1*v7 [1: (20,20)@0]]
	L: {1: 0}
18 / v8
	P: [1: v8^1 + 0 [1: (11,11)@0]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [1: (1,1)@0]]
	L: {1: 0}
20 / v14
	P: [1: v14^1 + 0 [1: (3,3)@0]]
	L: {1: 0}
21 / v5
	P: [0: ]
	L: {0: }
22 / v3
	P: [1: v3^1 + 0 [1: (21,21)@0]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [0: ]
	L: {0: }
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(18,18)@0, (0,0)@2, (0,0)@3, (0,0)@6, (1,1)@6, (0,2)@6, (1,2)@6, (0,1)@6, (1,3)@6, (0,0)@17, (0,0)@14, (2,2)@6, (0,3)@6, (3,3)@6, (1,4)@6, (4,4)@6, (0,0)@19, (0,0)@28, (0,0)@8, (0,0)@26, (0,0)@22, (0,0)@18, (0,1)@16, (1,1)@16, (0,0)@16, (0,0)@27, (2,3)@6, (0,0)@23, (2,4)@6, (0,0)@15, (0,4)@6, (0,0)@20, (3,4)@6]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [1: (7,7)@0], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [1: v1^1 + -1 [1: (6,6)@0]]
	L: {1: 0}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [1: v16^1 + 0 [1: (0,0)@0]]
	L: {1: 0}
16 / v19
	P: [2: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0]]
	L: {2: 0, 1}
17 / v9
	P: [1: v9^1 + -1*v7 [1: (20,20)@0]]
	L: {1: 0}
18 / v8
	P: [1: v8^1 + 0 [1: (11,11)@0]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [1: (1,1)@0]]
	L: {1: 0}
20 / v14
	P: [1: v14^1 + 0 [1: (3,3)@0]]
	L: {1: 0}
21 / v5
	P: [0: ]
	L: {0: }
22 / v3
	P: [1: v3^1 + 0 [1: (21,21)@0]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [0: ]
	L: {0: }
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(0,0)@1, (0,0)@2, (0,0)@3, (0,0)@6, (1,1)@6, (0,2)@6, (1,2)@6, (0,1)@6, (1,3)@6, (0,0)@17, (0,0)@14, (2,2)@6, (0,3)@6, (3,3)@6, (1,4)@6, (4,4)@6, (0,0)@19, (0,0)@28, (0,0)@8, (0,0)@26, (0,0)@22, (0,0)@18, (0,1)@16, (1,1)@16, (0,0)@16, (0,0)@27, (2,3)@6, (0,0)@23, (2,4)@6, (0,0)@15, (0,4)@6, (0,0)@20, (3,4)@6]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): v2*v3 + -1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v4*v5 -> {-1 + v2 : 1, -1 + v4 : 1, v3 + -1*v5 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10001000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [1: v1^1 + -1 [1: (6,6)@0]]
	L: {1: 0}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [1: v16^1 + 0 [1: (0,0)@0]]
	L: {1: 0}
16 / v19
	P: [2: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0]]
	L: {2: 0, 1}
17 / v9
	P: [1: v9^1 + -1*v7 [1: (20,20)@0]]
	L: {1: 0}
18 / v8
	P: [1: v8^1 + 0 [1: (11,11)@0]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [1: (1,1)@0]]
	L: {1: 0}
20 / v14
	P: [1: v14^1 + 0 [1: (3,3)@0]]
	L: {1: 0}
21 / v5
	P: [1: (-1)*v5^1 + v3 [1: (0,0)@1]]
	L: {1: 0}
22 / v3
	P: [1: v3^1 + 0 [1: (21,21)@0]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(0,0)@2, (0,0)@6, (0,0)@3, (0,1)@6, (1,1)@6, (0,2)@6, (1,2)@6, (4,4)@6, (1,3)@6, (0,0)@17, (0,0)@14, (2,2)@6, (0,3)@6, (3,3)@6, (1,4)@6, (3,4)@6, (0,0)@19, (0,0)@28, (0,0)@8, (0,0)@26, (0,0)@22, (0,0)@18, (0,1)@16, (1,1)@16, (0,0)@16, (0,0)@27, (2,3)@6, (0,0)@23, (2,4)@6, (0,0)@15, (0,4)@6, (0,0)@20, (0,0)@25, (0,0)@21]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [1: v1^1 + -1 [1: (6,6)@0]]
	L: {1: 0}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [1: v16^1 + 0 [1: (0,0)@0]]
	L: {1: 0}
16 / v19
	P: [2: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0]]
	L: {2: 0, 1}
17 / v9
	P: [2: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [1: (0,0)@2]]
	L: {2: 1, 0}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [1: (1,1)@0]]
	L: {1: 0}
20 / v14
	P: [1: v14^1 + 0 [1: (3,3)@0]]
	L: {1: 0}
21 / v5
	P: [1: (-1)*v5^1 + v3 [1: (0,0)@1]]
	L: {1: 0}
22 / v3
	P: [1: v3^1 + 0 [1: (21,21)@0]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(0,0)@3, (0,0)@6, (1,2)@6, (0,1)@6, (1,1)@6, (0,2)@6, (3,3)@6, (4,4)@6, (1,3)@6, (0,0)@17, (0,0)@14, (2,2)@6, (0,3)@6, (2,4)@6, (1,4)@6, (3,4)@6, (1,1)@17, (0,0)@28, (0,0)@8, (0,0)@26, (0,0)@22, (0,0)@18, (0,1)@16, (1,1)@16, (0,0)@16, (0,0)@27, (2,3)@6, (0,0)@23, (0,0)@21, (0,0)@15, (0,4)@6, (0,0)@20, (0,0)@25, (0,0)@19, (0,1)@17]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [1: v1^1 + -1 [3: (6,6)@0, (0,1)@6, (1,2)@6]]
	L: {1: 0}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [1: v16^1 + 0 [1: (0,0)@0]]
	L: {1: 0}
16 / v19
	P: [2: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0]]
	L: {2: 0, 1}
17 / v9
	P: [3: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [1: (0,0)@2], v9^1 + -1 [1: (1,2)@6]]
	L: {3: 1, 2, 0}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [1: (1,1)@0]]
	L: {1: 0}
20 / v14
	P: [1: v14^1 + 0 [1: (3,3)@0]]
	L: {1: 0}
21 / v5
	P: [1: (-1)*v5^1 + v3 [1: (0,0)@1]]
	L: {1: 0}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(0,2)@6, (1,3)@6, (2,2)@6, (4,4)@6, (0,0)@14, (0,3)@6, (3,3)@6, (3,4)@6, (0,0)@8, (0,0)@17, (0,1)@16, (0,0)@16, (2,3)@6, (2,4)@6, (1,4)@6, (2,2)@17, (1,1)@17, (0,0)@28, (0,0)@19, (0,0)@26, (0,0)@22, (0,0)@18, (0,1)@17, (1,1)@16, (0,0)@25, (0,0)@27, (0,4)@6, (0,0)@23, (0,0)@21, (0,0)@15, (1,2)@17, (0,0)@20, (0,2)@17]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v1*v13 + v13 + -1*v16 + v1*v16 -> {-1 + v1 : 1, v13 + -1*v16 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [1: v1^1 + -1 [5: (6,6)@0, (0,1)@6, (0,2)@6, (1,2)@6, (1,3)@6]]
	L: {1: 0}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [2: v16^1 + 0 [1: (0,0)@0], (-1)*v16^1 + v13 [1: (1,3)@6]]
	L: {2: 1, 0}
16 / v19
	P: [2: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0]]
	L: {2: 0, 1}
17 / v9
	P: [3: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [2: (0,0)@2, (0,2)@6], v9^1 + -1 [1: (1,2)@6]]
	L: {3: 1, 2, 0}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [2: (1,1)@0, (3,3)@6]]
	L: {1: 0}
20 / v14
	P: [1: v14^1 + 0 [1: (3,3)@0]]
	L: {1: 0}
21 / v5
	P: [1: (-1)*v5^1 + v3 [1: (0,0)@1]]
	L: {1: 0}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(0,3)@6, (4,4)@6, (2,3)@6, (3,4)@6, (0,0)@14, (0,4)@6, (1,4)@6, (1,1)@17, (0,0)@8, (0,0)@17, (0,1)@16, (0,0)@16, (0,2)@17, (2,4)@6, (0,0)@15, (2,2)@17, (1,2)@17, (0,0)@28, (0,0)@19, (0,0)@26, (0,0)@22, (0,0)@18, (0,1)@17, (1,1)@16, (0,0)@25, (0,0)@27, (0,0)@20, (0,0)@23, (0,0)@21, (1,1)@15, (0,1)@15]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [1: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6]]
	L: {1: 0}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [3: v16^1 + 0 [2: (0,0)@0, (0,3)@6], (-1)*v16^1 + v13 [1: (1,3)@6], (-1)*v16^1 + v9*v13 [1: (2,3)@6]]
	L: {3: 1, 2, 0}
16 / v19
	P: [2: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0]]
	L: {2: 0, 1}
17 / v9
	P: [3: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [2: (0,0)@2, (0,2)@6], v9^1 + -1 [1: (1,2)@6]]
	L: {3: 1, 2, 0}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [2: (1,1)@0, (3,3)@6]]
	L: {1: 0}
20 / v14
	P: [1: v14^1 + 0 [1: (3,3)@0]]
	L: {1: 0}
21 / v5
	P: [1: (-1)*v5^1 + v3 [1: (0,0)@1]]
	L: {1: 0}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(4,4)@6, (3,4)@6, (1,4)@6, (0,0)@8, (0,0)@14, (0,4)@6, (2,4)@6, (0,2)@15, (1,1)@15, (0,0)@17, (0,1)@16, (0,0)@16, (0,2)@17, (0,1)@15, (0,0)@15, (1,1)@17, (1,2)@17, (0,0)@28, (0,0)@19, (0,0)@26, (0,0)@22, (0,0)@18, (0,1)@17, (1,1)@16, (0,0)@25, (0,0)@27, (0,0)@20, (0,0)@23, (0,0)@21, (1,2)@15, (2,2)@15, (2,2)@17]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [1: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6]]
	L: {1: 0}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [3: v16^1 + 0 [2: (0,0)@0, (0,3)@6], (-1)*v16^1 + v13 [1: (1,3)@6], (-1)*v16^1 + v9*v13 [1: (2,3)@6]]
	L: {3: 1, 2, 0}
16 / v19
	P: [2: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0]]
	L: {2: 0, 1}
17 / v9
	P: [3: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [2: (0,0)@2, (0,2)@6], v9^1 + -1 [1: (1,2)@6]]
	L: {3: 1, 2, 0}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [2: (1,1)@0, (3,3)@6]]
	L: {1: 0}
20 / v14
	P: [2: v14^1 + 0 [1: (3,3)@0], (v3 + -1*v5)*v14^1 + v5*v17 [1: (4,4)@6]]
	L: {2: 0, 1}
21 / v5
	P: [1: (-1)*v5^1 + v3 [1: (0,0)@1]]
	L: {1: 0}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(3,4)@6, (0,0)@8, (1,4)@6, (1,1)@15, (0,0)@14, (0,4)@6, (2,4)@6, (0,2)@15, (2,2)@17, (0,0)@17, (0,1)@16, (0,0)@16, (0,2)@17, (0,1)@15, (0,0)@15, (1,1)@17, (1,2)@17, (0,0)@28, (0,0)@19, (0,0)@26, (0,0)@22, (0,0)@18, (0,1)@17, (1,1)@16, (0,0)@25, (0,0)@27, (0,0)@20, (0,0)@23, (0,0)@21, (1,2)@15, (2,2)@15, (0,1)@20, (1,1)@20]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [2: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6]]
	L: {2: 0, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [3: v16^1 + 0 [2: (0,0)@0, (0,3)@6], (-1)*v16^1 + v13 [1: (1,3)@6], (-1)*v16^1 + v9*v13 [1: (2,3)@6]]
	L: {3: 1, 2, 0}
16 / v19
	P: [2: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0]]
	L: {2: 0, 1}
17 / v9
	P: [3: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [2: (0,0)@2, (0,2)@6], v9^1 + -1 [1: (1,2)@6]]
	L: {3: 1, 2, 0}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [2: (1,1)@0, (3,3)@6]]
	L: {1: 0}
20 / v14
	P: [2: v14^1 + 0 [1: (3,3)@0], (v3 + -1*v5)*v14^1 + v5*v17 [1: (4,4)@6]]
	L: {2: 0, 1}
21 / v5
	P: [1: (-1)*v5^1 + v3 [1: (0,0)@1]]
	L: {1: 0}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(1,4)@6, (0,0)@8, (0,4)@6, (1,1)@8, (0,0)@14, (0,0)@16, (2,4)@6, (0,1)@8, (2,2)@17, (0,0)@17, (0,1)@16, (1,1)@16, (0,2)@17, (0,1)@15, (0,0)@15, (0,2)@15, (1,1)@15, (0,0)@28, (0,0)@19, (0,0)@26, (0,0)@22, (0,0)@18, (0,1)@17, (1,1)@20, (0,0)@25, (0,0)@27, (0,0)@20, (0,0)@23, (0,0)@21, (1,2)@15, (2,2)@15, (0,1)@20, (1,1)@17, (1,2)@17]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v5*v14 + v3*v14 + -1*v3*v17 + -2*v1*v5*v17 + v1*v5*v14 + v1*v3*v17 + -1*v1*v3*v14 + -1*v9*v13 + v7*v16 + -1*v5*v19 + 2*v5*v17 + v1*v5*v19 -> {v5*v19 + -2*v5*v17 + v3*v17 + -1*v7*v16 + v5*v14 + -1*v3*v14 + v9*v13 + -1*v1*v3*v17 + v1*v3*v14 + -1*v1*v5*v14 + 2*v1*v5*v17 + -1*v1*v5*v19 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [3: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6]]
	L: {3: 0, 2, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [3: v16^1 + 0 [2: (0,0)@0, (0,3)@6], (-1)*v16^1 + v13 [1: (1,3)@6], (-1)*v16^1 + v9*v13 [1: (2,3)@6]]
	L: {3: 1, 2, 0}
16 / v19
	P: [2: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0]]
	L: {2: 0, 1}
17 / v9
	P: [3: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [2: (0,0)@2, (0,2)@6], v9^1 + -1 [1: (1,2)@6]]
	L: {3: 1, 2, 0}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [2: (1,1)@0, (3,3)@6]]
	L: {1: 0}
20 / v14
	P: [2: v14^1 + 0 [1: (3,3)@0], (v3 + -1*v5)*v14^1 + v5*v17 [1: (4,4)@6]]
	L: {2: 0, 1}
21 / v5
	P: [1: (-1)*v5^1 + v3 [1: (0,0)@1]]
	L: {1: 0}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(0,4)@6, (0,0)@8, (2,4)@6, (2,2)@8, (0,0)@14, (0,0)@16, (0,0)@15, (0,2)@8, (1,2)@8, (0,0)@17, (0,1)@16, (1,1)@16, (0,2)@17, (0,1)@15, (2,2)@15, (0,2)@15, (1,1)@8, (2,2)@17, (0,0)@19, (0,0)@26, (0,0)@22, (0,0)@18, (0,1)@17, (1,1)@20, (0,0)@25, (0,0)@27, (0,0)@20, (0,0)@23, (0,0)@21, (1,2)@15, (1,2)@17, (0,1)@20, (1,1)@17, (1,1)@15, (0,1)@8, (0,0)@28]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [4: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6]]
	L: {4: 0, 2, 3, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [3: v16^1 + 0 [2: (0,0)@0, (0,3)@6], (-1)*v16^1 + v13 [1: (1,3)@6], (-1)*v16^1 + v9*v13 [1: (2,3)@6]]
	L: {3: 1, 2, 0}
16 / v19
	P: [2: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0]]
	L: {2: 0, 1}
17 / v9
	P: [3: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [2: (0,0)@2, (0,2)@6], v9^1 + -1 [1: (1,2)@6]]
	L: {3: 1, 2, 0}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [2: (1,1)@0, (3,3)@6]]
	L: {1: 0}
20 / v14
	P: [2: v14^1 + 0 [1: (3,3)@0], (v3 + -1*v5)*v14^1 + v5*v17 [1: (4,4)@6]]
	L: {2: 0, 1}
21 / v5
	P: [1: (-1)*v5^1 + v3 [1: (0,0)@1]]
	L: {1: 0}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(2,4)@6, (0,0)@8, (0,0)@15, (3,3)@8, (0,0)@14, (0,0)@16, (0,1)@15, (0,2)@8, (0,3)@8, (0,0)@17, (0,1)@16, (1,1)@16, (0,2)@17, (0,0)@21, (2,2)@15, (0,2)@15, (1,1)@8, (2,2)@8, (2,3)@8, (0,0)@26, (0,0)@22, (0,0)@18, (0,1)@17, (1,1)@20, (0,0)@25, (0,0)@27, (0,0)@20, (0,0)@23, (0,0)@28, (1,2)@15, (1,2)@17, (0,1)@20, (1,1)@17, (1,1)@15, (0,1)@8, (2,2)@17, (1,2)@8, (0,0)@19, (1,3)@8]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [3: v16^1 + 0 [2: (0,0)@0, (0,3)@6], (-1)*v16^1 + v13 [1: (1,3)@6], (-1)*v16^1 + v9*v13 [1: (2,3)@6]]
	L: {3: 1, 2, 0}
16 / v19
	P: [2: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0]]
	L: {2: 0, 1}
17 / v9
	P: [3: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [2: (0,0)@2, (0,2)@6], v9^1 + -1 [1: (1,2)@6]]
	L: {3: 1, 2, 0}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [2: (1,1)@0, (3,3)@6]]
	L: {1: 0}
20 / v14
	P: [2: v14^1 + 0 [1: (3,3)@0], (v3 + -1*v5)*v14^1 + v5*v17 [1: (4,4)@6]]
	L: {2: 0, 1}
21 / v5
	P: [1: (-1)*v5^1 + v3 [1: (0,0)@1]]
	L: {1: 0}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(0,0)@8, (3,3)@8, (0,0)@15, (0,3)@8, (4,4)@8, (0,0)@16, (0,1)@15, (0,2)@8, (2,3)@8, (3,4)@8, (0,1)@16, (1,1)@16, (0,2)@17, (0,0)@21, (2,2)@15, (0,2)@15, (1,1)@8, (2,2)@8, (0,4)@8, (0,0)@14, (2,4)@8, (0,0)@18, (0,1)@17, (1,1)@20, (0,0)@25, (0,0)@27, (0,0)@20, (0,0)@23, (0,0)@28, (1,2)@15, (1,2)@17, (0,1)@20, (1,1)@17, (1,1)@15, (0,1)@8, (2,2)@17, (1,2)@8, (0,0)@19, (1,3)@8, (0,0)@26, (0,0)@17, (0,0)@22, (1,4)@8]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [3: v16^1 + 0 [2: (0,0)@0, (0,3)@6], (-1)*v16^1 + v13 [1: (1,3)@6], (-1)*v16^1 + v9*v13 [1: (2,3)@6]]
	L: {3: 1, 2, 0}
16 / v19
	P: [3: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [1: (3,3)@8]]
	L: {3: 0, 2, 1}
17 / v9
	P: [3: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [2: (0,0)@2, (0,2)@6], v9^1 + -1 [1: (1,2)@6]]
	L: {3: 1, 2, 0}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [2: (1,1)@0, (3,3)@6]]
	L: {1: 0}
20 / v14
	P: [2: v14^1 + 0 [1: (3,3)@0], (v3 + -1*v5)*v14^1 + v5*v17 [1: (4,4)@6]]
	L: {2: 0, 1}
21 / v5
	P: [1: (-1)*v5^1 + v3 [1: (0,0)@1]]
	L: {1: 0}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(0,3)@8, (2,3)@8, (0,0)@15, (2,2)@8, (4,4)@8, (0,0)@16, (0,1)@15, (0,2)@8, (0,4)@8, (3,4)@8, (0,1)@16, (1,1)@16, (0,2)@17, (0,0)@21, (2,2)@15, (0,2)@15, (1,1)@8, (1,4)@8, (1,3)@8, (0,0)@14, (2,4)@8, (1,2)@16, (0,1)@17, (1,1)@20, (0,0)@25, (0,0)@27, (0,0)@20, (0,0)@23, (0,0)@28, (1,2)@15, (1,2)@17, (0,1)@20, (1,1)@17, (1,1)@15, (0,1)@8, (2,2)@17, (1,2)@8, (0,0)@19, (0,0)@22, (0,0)@26, (0,0)@17, (0,2)@16, (2,2)@16, (0,0)@18]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [4: v16^1 + 0 [2: (0,0)@0, (0,3)@6], (-1)*v16^1 + v13 [1: (1,3)@6], (-1)*v16^1 + v9*v13 [1: (2,3)@6], (-1*v7)*v16^1 + v9*v13 [1: (0,3)@8]]
	L: {4: 1, 2, 0, 3}
16 / v19
	P: [3: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [1: (3,3)@8]]
	L: {3: 0, 2, 1}
17 / v9
	P: [3: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [2: (0,0)@2, (0,2)@6], v9^1 + -1 [1: (1,2)@6]]
	L: {3: 1, 2, 0}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [2: (1,1)@0, (3,3)@6]]
	L: {1: 0}
20 / v14
	P: [2: v14^1 + 0 [1: (3,3)@0], (v3 + -1*v5)*v14^1 + v5*v17 [1: (4,4)@6]]
	L: {2: 0, 1}
21 / v5
	P: [1: (-1)*v5^1 + v3 [1: (0,0)@1]]
	L: {1: 0}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(2,3)@8, (2,2)@8, (0,0)@15, (0,2)@8, (4,4)@8, (0,0)@16, (0,1)@15, (1,1)@8, (0,4)@8, (3,4)@8, (3,3)@15, (1,1)@16, (0,2)@17, (0,0)@21, (2,2)@15, (0,2)@15, (0,1)@8, (1,4)@8, (1,3)@8, (0,0)@14, (2,4)@8, (1,3)@15, (0,3)@15, (1,1)@20, (0,0)@25, (0,0)@27, (0,0)@20, (0,0)@23, (0,0)@28, (1,2)@15, (1,2)@17, (0,1)@20, (1,1)@17, (1,1)@15, (0,0)@18, (2,2)@17, (1,2)@8, (0,0)@19, (0,0)@22, (0,0)@26, (0,0)@17, (0,2)@16, (2,2)@16, (1,2)@16, (0,1)@16, (0,1)@17, (2,3)@15]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): v5*v14 + -1*v3*v14 + v3*v17 + -2*v5*v17 + v5*v19 -> {-1*v3*v17 + v3*v14 + -1*v5*v14 + 2*v5*v17 + -1*v5*v19 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [4: v16^1 + 0 [2: (0,0)@0, (0,3)@6], (-1)*v16^1 + v13 [1: (1,3)@6], (-1)*v16^1 + v9*v13 [1: (2,3)@6], (-1*v7)*v16^1 + v9*v13 [2: (0,3)@8, (2,3)@8]]
	L: {4: 1, 2, 0, 3}
16 / v19
	P: [4: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [1: (3,3)@8], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [1: (2,2)@8]]
	L: {4: 0, 3, 2, 1}
17 / v9
	P: [3: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [2: (0,0)@2, (0,2)@6], v9^1 + -1 [1: (1,2)@6]]
	L: {3: 1, 2, 0}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [2: (1,1)@0, (3,3)@6]]
	L: {1: 0}
20 / v14
	P: [2: v14^1 + 0 [1: (3,3)@0], (v3 + -1*v5)*v14^1 + v5*v17 [2: (4,4)@6, (2,3)@8]]
	L: {2: 0, 1}
21 / v5
	P: [1: (-1)*v5^1 + v3 [1: (0,0)@1]]
	L: {1: 0}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(0,2)@8, (4,4)@8, (0,0)@15, (0,4)@8, (3,4)@8, (0,0)@16, (0,1)@15, (1,1)@8, (1,4)@8, (2,4)@8, (3,3)@15, (1,1)@16, (0,2)@17, (0,0)@21, (2,2)@15, (0,2)@15, (0,1)@8, (1,2)@8, (1,3)@8, (0,0)@14, (2,2)@16, (1,3)@15, (0,3)@15, (1,3)@16, (0,0)@25, (0,0)@27, (0,0)@20, (0,0)@23, (0,0)@28, (1,2)@15, (1,2)@17, (0,1)@20, (1,1)@17, (1,1)@15, (0,0)@18, (2,2)@17, (2,3)@15, (0,0)@19, (0,0)@22, (0,0)@26, (0,0)@17, (0,2)@16, (0,1)@17, (1,2)@16, (0,1)@16, (0,3)@16, (3,3)@16, (1,1)@20, (2,3)@16]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [4: v16^1 + 0 [2: (0,0)@0, (0,3)@6], (-1)*v16^1 + v13 [1: (1,3)@6], (-1)*v16^1 + v9*v13 [1: (2,3)@6], (-1*v7)*v16^1 + v9*v13 [3: (0,2)@8, (0,3)@8, (2,3)@8]]
	L: {4: 1, 2, 0, 3}
16 / v19
	P: [5: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [1: (3,3)@8], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [1: (2,2)@8], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (4,4)@8]]
	L: {5: 0, 3, 4, 2, 1}
17 / v9
	P: [3: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [2: (0,0)@2, (0,2)@6], v9^1 + -1 [1: (1,2)@6]]
	L: {3: 1, 2, 0}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [2: (1,1)@0, (3,3)@6]]
	L: {1: 0}
20 / v14
	P: [2: v14^1 + 0 [1: (3,3)@0], (v3 + -1*v5)*v14^1 + v5*v17 [2: (4,4)@6, (2,3)@8]]
	L: {2: 0, 1}
21 / v5
	P: [1: (-1)*v5^1 + v3 [1: (0,0)@1]]
	L: {1: 0}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(3,4)@8, (2,4)@8, (0,0)@15, (0,4)@8, (0,0)@14, (0,0)@16, (0,1)@15, (1,1)@8, (1,4)@8, (2,2)@16, (3,3)@15, (1,1)@16, (1,4)@16, (0,0)@21, (2,2)@15, (0,2)@15, (0,1)@8, (1,2)@8, (1,3)@8, (2,3)@16, (0,2)@16, (1,3)@15, (0,3)@15, (1,3)@16, (2,4)@16, (0,2)@17, (0,0)@20, (0,0)@23, (0,0)@28, (1,2)@15, (1,2)@17, (0,1)@20, (1,1)@17, (1,1)@15, (0,0)@18, (2,2)@17, (2,3)@15, (0,0)@19, (0,0)@22, (0,0)@26, (0,0)@17, (1,1)@20, (0,1)@17, (1,2)@16, (0,1)@16, (0,3)@16, (3,3)@16, (0,4)@16, (3,4)@16, (0,0)@25, (4,4)@16, (0,0)@27]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [2: (0,0)@0, (0,3)@6], (-1)*v16^1 + v13 [1: (1,3)@6], (-1)*v16^1 + v9*v13 [1: (2,3)@6], (-1*v7)*v16^1 + v9*v13 [6: (0,2)@8, (0,3)@8, (0,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [5: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [1: (3,3)@8], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [1: (2,2)@8], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (4,4)@8]]
	L: {5: 0, 3, 4, 2, 1}
17 / v9
	P: [3: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [3: (0,0)@2, (0,2)@6, (3,4)@8], v9^1 + -1 [2: (1,2)@6, (2,4)@8]]
	L: {3: 1, 2, 0}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [2: (1,1)@0, (3,3)@6]]
	L: {1: 0}
20 / v14
	P: [2: v14^1 + 0 [1: (3,3)@0], (v3 + -1*v5)*v14^1 + v5*v17 [4: (4,4)@6, (2,3)@8, (2,4)@8, (3,4)@8]]
	L: {2: 0, 1}
21 / v5
	P: [1: (-1)*v5^1 + v3 [1: (0,0)@1]]
	L: {1: 0}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [1: v7^1 + -1 [1: (8,8)@0]]
	L: {1: 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(1,4)@8, (1,3)@8, (0,0)@15, (1,2)@8, (0,0)@14, (4,4)@15, (0,1)@15, (0,1)@8, (2,3)@15, (2,2)@16, (3,3)@15, (2,4)@15, (3,4)@15, (0,0)@21, (2,2)@15, (0,2)@15, (1,1)@15, (3,4)@16, (4,4)@16, (2,3)@16, (0,2)@16, (1,3)@15, (0,3)@15, (1,1)@16, (1,4)@15, (0,4)@15, (0,0)@20, (0,0)@23, (0,0)@28, (1,2)@15, (1,2)@17, (0,1)@20, (1,1)@17, (0,0)@27, (0,0)@18, (2,2)@17, (0,0)@25, (0,0)@19, (0,0)@22, (0,0)@26, (0,0)@17, (1,1)@20, (0,1)@17, (1,2)@16, (0,1)@16, (0,3)@16, (3,3)@16, (0,4)@16, (1,3)@16, (2,4)@16, (0,0)@16, (0,2)@17, (1,4)@16]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v3*v9*v13^2*v14 + v3*v7*v13*v14*v16 + -1*v3*v7*v14*v16^2 + -1*v5*v9*v13*v14*v16 + -1*v5*v9*v13^2*v17 + v5*v9*v13^2*v14 + -1*v5*v7*v16^2*v17 + v5*v7*v14*v16^2 + v5*v7*v13*v16*v17 + -1*v5*v7*v13*v14*v16 + v3*v9*v13*v14*v16 + v5*v9*v13*v16*v17 -> {v13 + -1*v16 : 1, v3*v14 + -1*v5*v14 + v5*v17 : 1, -1*v7*v16 + v9*v13 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [5: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [1: (3,3)@8], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [1: (2,2)@8], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (4,4)@8]]
	L: {5: 0, 3, 4, 2, 1}
17 / v9
	P: [3: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [4: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15], v9^1 + -1 [3: (1,2)@6, (2,4)@8, (1,2)@15]]
	L: {3: 1, 2, 0}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [6: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (1,2)@15]]
	L: {1: 0}
20 / v14
	P: [2: v14^1 + 0 [1: (3,3)@0], (v3 + -1*v5)*v14^1 + v5*v17 [7: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8]]
	L: {2: 0, 1}
21 / v5
	P: [1: (-1)*v5^1 + v3 [1: (0,0)@1]]
	L: {1: 0}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [2: v7^1 + -1 [1: (8,8)@0], v7^1 + 0 [1: (3,3)@15]]
	L: {2: 1, 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(0,3)@15, (2,3)@15, (4,4)@15, (3,3)@16, (1,3)@15, (3,4)@15, (1,3)@16, (1,4)@16, (4,4)@16, (2,2)@16, (0,0)@16, (2,4)@15, (0,4)@15, (0,0)@21, (0,3)@16, (1,1)@17, (2,4)@16, (3,4)@16, (0,0)@19, (2,3)@16, (0,2)@16, (0,1)@16, (0,1)@17, (1,1)@16, (1,4)@15, (1,2)@16, (0,0)@20, (0,0)@23, (0,0)@28, (0,4)@16, (1,2)@17, (0,1)@20, (0,2)@17, (0,0)@27, (0,0)@18, (2,2)@17, (0,0)@25, (1,1)@20, (0,0)@22, (0,0)@26, (0,0)@17, (1,1)@28, (0,1)@28]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v7*v13 + v9*v13 -> {v7 + -1*v9 : 1, v13 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [5: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [1: (3,3)@8], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [1: (2,2)@8], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (4,4)@8]]
	L: {5: 0, 3, 4, 2, 1}
17 / v9
	P: [4: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [6: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15], v9^1 + -1 [3: (1,2)@6, (2,4)@8, (1,2)@15], (-1)*v9^1 + v7 [1: (1,3)@15]]
	L: {4: 3, 1, 2, 0}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [9: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (1,2)@15, (1,3)@15, (2,3)@15]]
	L: {1: 0}
20 / v14
	P: [2: v14^1 + 0 [1: (3,3)@0], (v3 + -1*v5)*v14^1 + v5*v17 [7: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8]]
	L: {2: 0, 1}
21 / v5
	P: [1: (-1)*v5^1 + v3 [1: (0,0)@1]]
	L: {1: 0}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [2: v7^1 + -1 [2: (8,8)@0, (2,3)@15], v7^1 + 0 [1: (3,3)@15]]
	L: {2: 1, 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(4,4)@15, (0,0)@16, (3,4)@15, (3,3)@16, (0,1)@16, (0,4)@15, (1,3)@16, (1,4)@16, (4,4)@16, (2,2)@16, (0,1)@17, (2,4)@15, (1,2)@16, (0,0)@21, (0,3)@16, (1,1)@17, (2,4)@16, (3,4)@16, (0,0)@19, (2,3)@16, (0,2)@16, (0,3)@17, (1,1)@28, (1,1)@16, (1,4)@15, (0,0)@17, (0,0)@20, (0,0)@23, (0,0)@28, (0,4)@16, (1,2)@17, (0,1)@20, (0,2)@17, (0,0)@27, (0,0)@18, (2,2)@17, (0,0)@25, (1,1)@20, (0,0)@22, (0,0)@26, (3,3)@17, (1,3)@17, (2,3)@17, (0,1)@28]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): v5*v7*v13*v19 + v3*v7*v13*v17 + -1*v3*v9*v13*v14 + v5*v9*v13*v14 + -1*v5*v7*v13*v17 + -1*v5*v9*v13*v17 -> {v13 : 1, -1*v5*v7*v19 + v5*v7*v17 + -1*v3*v7*v17 + v3*v9*v14 + -1*v5*v9*v14 + v5*v9*v17 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [1: (3,3)@8], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [1: (2,2)@8], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (4,4)@8], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [4: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [6: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15], v9^1 + -1 [3: (1,2)@6, (2,4)@8, (1,2)@15], (-1)*v9^1 + v7 [1: (1,3)@15]]
	L: {4: 3, 1, 2, 0}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [10: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (1,2)@15, (1,3)@15, (2,3)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [2: v14^1 + 0 [1: (3,3)@0], (v3 + -1*v5)*v14^1 + v5*v17 [8: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15]]
	L: {2: 0, 1}
21 / v5
	P: [1: (-1)*v5^1 + v3 [1: (0,0)@1]]
	L: {1: 0}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [1: (4,4)@0]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [2: v7^1 + -1 [2: (8,8)@0, (2,3)@15], v7^1 + 0 [1: (3,3)@15]]
	L: {2: 1, 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(0,4)@15, (0,0)@16, (2,4)@15, (3,3)@16, (0,1)@16, (1,4)@15, (1,3)@16, (1,4)@16, (4,4)@16, (2,2)@16, (1,5)@16, (1,1)@16, (1,2)@16, (0,0)@21, (0,3)@16, (1,1)@17, (2,4)@16, (3,4)@16, (0,0)@19, (2,3)@16, (0,2)@16, (3,5)@16, (2,5)@16, (5,5)@16, (0,1)@28, (0,0)@17, (0,0)@20, (0,0)@23, (0,0)@28, (0,4)@16, (1,2)@17, (0,1)@20, (0,2)@17, (0,0)@27, (0,0)@18, (2,2)@17, (0,0)@25, (1,1)@20, (0,0)@22, (0,0)@26, (3,3)@17, (1,3)@17, (0,5)@16, (0,3)@17, (0,1)@17, (1,1)@28, (4,5)@16, (2,3)@17]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): v5*v13*v19 + v3*v13*v17 + -1*v5*v13*v17 + v5*v9*v13*v14 + -1*v3*v9*v13*v14 + -1*v5*v9*v13*v17 -> {v13 : 1, -1*v5*v19 + v5*v17 + -1*v3*v17 + v3*v9*v14 + -1*v5*v9*v14 + v5*v9*v17 : 1}
WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -2*v5*v13*v17 + -1*v3*v13*v14 + v3*v13*v17 + v5*v13*v14 + v5*v13*v19 -> {v13 : 1, -1*v3*v17 + v3*v14 + -1*v5*v14 + 2*v5*v17 + -1*v5*v19 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [4: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [6: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15], v9^1 + -1 [3: (1,2)@6, (2,4)@8, (1,2)@15], (-1)*v9^1 + v7 [1: (1,3)@15]]
	L: {4: 3, 1, 2, 0}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [2: v14^1 + 0 [2: (3,3)@0, (1,1)@16], (v3 + -1*v5)*v14^1 + v5*v17 [9: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16]]
	L: {2: 0, 1}
21 / v5
	P: [2: (-1)*v5^1 + v3 [1: (0,0)@1], v5^1 + 0 [1: (2,2)@16]]
	L: {2: 0, 1}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [3: (4,4)@0, (0,1)@16, (1,2)@16]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [2: v7^1 + -1 [2: (8,8)@0, (2,3)@15], v7^1 + 0 [1: (3,3)@15]]
	L: {2: 1, 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(0,2)@16, (2,3)@16, (1,3)@16, (3,3)@16, (1,5)@16, (5,5)@16, (0,3)@16, (1,4)@16, (4,4)@16, (0,5)@16, (2,5)@16, (0,1)@17, (4,5)@16, (0,0)@21, (0,4)@16, (1,1)@17, (2,4)@16, (3,4)@16, (0,0)@19, (0,3)@17, (1,3)@17, (3,5)@16, (3,3)@17, (2,3)@17, (0,1)@28, (0,0)@17, (0,0)@20, (0,0)@23, (0,0)@28, (1,1)@28, (1,2)@17, (0,1)@20, (0,2)@17, (0,0)@27, (0,0)@18, (2,2)@17, (0,0)@25, (1,1)@20, (0,0)@22, (0,0)@26, (0,1)@21, (1,1)@21]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v3*v17 + v5*v17 -> {v3 + -1*v5 : 1, v17 : 1}
WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): v5*v14^2 + -1*v3*v14^2 + v3*v14*v17 + -2*v5*v14*v17 + v5*v17^2 -> {v14 + -1*v17 : 1, v3*v14 + -1*v5*v14 + v5*v17 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [4: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [6: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15], v9^1 + -1 [3: (1,2)@6, (2,4)@8, (1,2)@15], (-1)*v9^1 + v7 [1: (1,3)@15]]
	L: {4: 3, 1, 2, 0}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [3: v14^1 + 0 [2: (3,3)@0, (1,1)@16], (v3 + -1*v5)*v14^1 + v5*v17 [10: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16], v14^1 + -1*v17 [1: (1,3)@16]]
	L: {3: 0, 2, 1}
21 / v5
	P: [2: (-1)*v5^1 + v3 [2: (0,0)@1, (0,2)@16], v5^1 + 0 [1: (2,2)@16]]
	L: {2: 0, 1}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [4: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [2: v7^1 + -1 [2: (8,8)@0, (2,3)@15], v7^1 + 0 [1: (3,3)@15]]
	L: {2: 1, 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(2,3)@16, (3,3)@16, (0,3)@16, (1,4)@16, (1,5)@16, (5,5)@16, (0,4)@16, (2,4)@16, (4,4)@16, (0,5)@16, (2,5)@16, (0,1)@17, (4,5)@16, (0,0)@21, (1,2)@17, (1,1)@17, (0,0)@18, (3,4)@16, (0,0)@19, (0,3)@17, (1,3)@17, (3,5)@16, (3,3)@17, (2,3)@17, (0,1)@28, (0,0)@17, (0,0)@20, (0,0)@23, (0,0)@28, (1,1)@28, (1,1)@21, (0,1)@20, (0,2)@17, (0,0)@27, (0,1)@21, (2,2)@17, (0,0)@25, (1,1)@20, (0,0)@22, (0,0)@26, (0,2)@20, (2,2)@20, (1,2)@20]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [4: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [6: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15], v9^1 + -1 [3: (1,2)@6, (2,4)@8, (1,2)@15], (-1)*v9^1 + v7 [1: (1,3)@15]]
	L: {4: 3, 1, 2, 0}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [4: v14^1 + 0 [2: (3,3)@0, (1,1)@16], (v3 + -1*v5)*v14^1 + v5*v17 [11: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (2,3)@16], v14^1 + -1*v17 [1: (1,3)@16], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [1: (0,3)@16]]
	L: {4: 0, 2, 1, 3}
21 / v5
	P: [2: (-1)*v5^1 + v3 [2: (0,0)@1, (0,2)@16], v5^1 + 0 [3: (2,2)@16, (2,3)@16, (3,3)@16]]
	L: {2: 0, 1}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [4: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [2: v7^1 + -1 [2: (8,8)@0, (2,3)@15], v7^1 + 0 [1: (3,3)@15]]
	L: {2: 1, 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(1,4)@16, (2,4)@16, (0,4)@16, (4,4)@16, (1,5)@16, (5,5)@16, (1,2)@17, (1,1)@17, (3,4)@16, (0,5)@16, (2,5)@16, (0,1)@17, (4,5)@16, (0,0)@21, (2,2)@20, (0,2)@17, (0,0)@18, (2,2)@17, (0,0)@19, (0,3)@17, (1,3)@17, (3,5)@16, (3,3)@17, (2,3)@17, (0,1)@28, (0,0)@17, (0,0)@20, (0,0)@23, (0,0)@28, (1,1)@28, (1,1)@21, (0,1)@20, (1,2)@20, (0,0)@27, (0,1)@21, (0,2)@20, (0,0)@25, (1,1)@20, (0,0)@22, (0,0)@26, (0,3)@20, (2,3)@20, (1,3)@20, (3,3)@20]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [5: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [6: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15], v9^1 + -1 [3: (1,2)@6, (2,4)@8, (1,2)@15], (-1)*v9^1 + v7 [1: (1,3)@15], (v14)*v9^1 + -1*v17 [1: (1,4)@16]]
	L: {5: 3, 1, 2, 0, 4}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [4: v14^1 + 0 [2: (3,3)@0, (1,1)@16], (v3 + -1*v5)*v14^1 + v5*v17 [12: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (2,3)@16], v14^1 + -1*v17 [1: (1,3)@16], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [1: (0,3)@16]]
	L: {4: 0, 2, 1, 3}
21 / v5
	P: [2: (-1)*v5^1 + v3 [2: (0,0)@1, (0,2)@16], v5^1 + 0 [3: (2,2)@16, (2,3)@16, (3,3)@16]]
	L: {2: 0, 1}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [4: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [2: v7^1 + -1 [2: (8,8)@0, (2,3)@15], v7^1 + 0 [1: (3,3)@15]]
	L: {2: 1, 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(2,4)@16, (4,4)@16, (0,4)@16, (3,4)@16, (1,5)@16, (5,5)@16, (1,2)@17, (1,1)@17, (2,2)@17, (0,5)@16, (2,5)@16, (0,1)@17, (4,5)@16, (0,0)@21, (2,2)@20, (0,2)@17, (0,0)@18, (0,2)@20, (0,0)@19, (0,3)@17, (1,3)@17, (3,5)@16, (3,3)@17, (2,3)@17, (0,1)@28, (0,0)@17, (0,0)@20, (0,0)@23, (0,0)@28, (1,1)@28, (1,1)@21, (0,1)@20, (1,2)@20, (0,0)@27, (0,1)@21, (3,3)@20, (0,0)@25, (1,1)@20, (0,0)@22, (0,0)@26, (0,3)@20, (2,3)@20, (1,3)@20, (3,4)@17, (1,4)@17, (2,4)@17, (0,4)@17, (4,4)@17]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [6: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [7: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [1: (1,3)@15], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16]]
	L: {6: 3, 1, 2, 0, 4, 5}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [4: v14^1 + 0 [2: (3,3)@0, (1,1)@16], (v3 + -1*v5)*v14^1 + v5*v17 [14: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (2,3)@16, (2,4)@16, (3,4)@16], v14^1 + -1*v17 [1: (1,3)@16], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [1: (0,3)@16]]
	L: {4: 0, 2, 1, 3}
21 / v5
	P: [2: (-1)*v5^1 + v3 [2: (0,0)@1, (0,2)@16], v5^1 + 0 [6: (2,2)@16, (2,3)@16, (2,4)@16, (3,3)@16, (3,4)@16, (4,4)@16]]
	L: {2: 0, 1}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [4: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [2: v7^1 + -1 [2: (8,8)@0, (2,3)@15], v7^1 + 0 [1: (3,3)@15]]
	L: {2: 1, 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(5,5)@16, (1,5)@16, (4,5)@16, (1,1)@17, (2,5)@16, (0,0)@17, (1,2)@17, (0,2)@17, (2,2)@17, (0,5)@16, (3,5)@16, (0,1)@17, (2,4)@17, (0,0)@21, (2,2)@20, (4,4)@17, (0,0)@18, (0,2)@20, (0,0)@19, (0,3)@17, (1,3)@17, (0,4)@17, (3,3)@17, (2,3)@17, (5,5)@17, (1,4)@17, (0,0)@20, (0,0)@23, (0,0)@28, (1,1)@28, (1,1)@21, (0,1)@20, (1,2)@20, (0,0)@27, (0,1)@21, (3,3)@20, (0,0)@25, (1,1)@20, (0,0)@22, (0,0)@26, (0,3)@20, (2,3)@20, (1,3)@20, (3,4)@17, (3,5)@17, (1,5)@17, (2,5)@17, (0,5)@17, (4,5)@17, (0,1)@28]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [7: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [7: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [1: (1,3)@15], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16]]
	L: {7: 3, 1, 2, 0, 4, 6, 5}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [4: v14^1 + 0 [2: (3,3)@0, (1,1)@16], (v3 + -1*v5)*v14^1 + v5*v17 [15: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (3,4)@16], v14^1 + -1*v17 [1: (1,3)@16], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [1: (0,3)@16]]
	L: {4: 0, 2, 1, 3}
21 / v5
	P: [2: (-1)*v5^1 + v3 [2: (0,0)@1, (0,2)@16], v5^1 + 0 [7: (2,2)@16, (2,3)@16, (2,4)@16, (3,3)@16, (3,4)@16, (4,4)@16, (5,5)@16]]
	L: {2: 0, 1}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [4: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [2: v7^1 + -1 [2: (8,8)@0, (2,3)@15], v7^1 + 0 [2: (3,3)@15, (5,5)@16]]
	L: {2: 1, 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(2,5)@16, (3,5)@16, (4,5)@16, (1,1)@17, (0,5)@16, (0,0)@17, (1,2)@17, (0,2)@17, (2,2)@17, (0,3)@17, (3,3)@17, (0,1)@17, (2,4)@17, (0,0)@21, (2,2)@20, (4,4)@17, (0,0)@18, (0,2)@20, (0,0)@19, (4,5)@17, (1,3)@17, (0,4)@17, (2,5)@17, (2,3)@17, (2,6)@17, (1,4)@17, (6,6)@17, (0,0)@23, (0,0)@28, (1,1)@28, (1,1)@21, (0,1)@20, (1,2)@20, (0,0)@27, (0,1)@21, (3,3)@20, (0,0)@25, (1,1)@20, (0,0)@22, (0,0)@26, (0,3)@20, (2,3)@20, (1,3)@20, (3,4)@17, (3,5)@17, (1,5)@17, (0,1)@28, (0,5)@17, (3,6)@17, (5,5)@17, (1,6)@17, (0,6)@17, (4,6)@17, (0,0)@20, (5,6)@17]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v5^2*v9*v14 + -1*v3*v5*v7*v14 + v5^2*v7*v14 + -1*v5^2*v7*v17 + v3*v5*v9*v14 + v5^2*v9*v17 -> {v5 : 1, v7 + -1*v9 : 1, v3*v14 + -1*v5*v14 + v5*v17 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [4: v14^1 + 0 [2: (3,3)@0, (1,1)@16], (v3 + -1*v5)*v14^1 + v5*v17 [18: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16], v14^1 + -1*v17 [1: (1,3)@16], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [1: (0,3)@16]]
	L: {4: 0, 2, 1, 3}
21 / v5
	P: [2: (-1)*v5^1 + v3 [2: (0,0)@1, (0,2)@16], v5^1 + 0 [10: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16]]
	L: {2: 0, 1}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [4: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [2: v7^1 + -1 [3: (8,8)@0, (2,3)@15, (4,5)@16], v7^1 + 0 [2: (3,3)@15, (5,5)@16]]
	L: {2: 1, 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(1,1)@17, (2,2)@17, (1,2)@17, (0,2)@17, (0,3)@17, (0,0)@17, (5,6)@17, (4,4)@17, (4,6)@17, (1,3)@17, (3,3)@17, (0,1)@17, (2,4)@17, (7,7)@17, (2,2)@20, (0,6)@17, (0,0)@18, (0,2)@20, (0,0)@19, (4,5)@17, (0,0)@20, (0,4)@17, (2,5)@17, (2,3)@17, (2,6)@17, (1,4)@17, (6,6)@17, (4,7)@17, (5,7)@17, (1,1)@28, (1,1)@21, (0,1)@20, (1,2)@20, (0,0)@27, (0,1)@21, (3,3)@20, (0,0)@25, (1,1)@20, (0,0)@22, (0,0)@26, (0,3)@20, (2,3)@20, (1,3)@20, (3,4)@17, (3,5)@17, (1,5)@17, (0,1)@28, (0,5)@17, (3,6)@17, (5,5)@17, (1,6)@17, (3,7)@17, (1,7)@17, (2,7)@17, (0,7)@17, (0,0)@23, (0,0)@21, (0,0)@28, (6,7)@17]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [5: v14^1 + 0 [3: (3,3)@0, (1,1)@16, (4,4)@17], (v3 + -1*v5)*v14^1 + v5*v17 [18: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16], v14^1 + -1*v17 [1: (1,3)@16], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [1: (0,3)@16], (v7)*v14^1 + -1*v17 [1: (0,4)@17]]
	L: {5: 0, 2, 1, 3, 4}
21 / v5
	P: [2: (-1)*v5^1 + v3 [2: (0,0)@1, (0,2)@16], v5^1 + 0 [10: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16]]
	L: {2: 0, 1}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [4: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [2: v7^1 + -1 [5: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17], v7^1 + 0 [4: (3,3)@15, (5,5)@16, (0,1)@17, (1,3)@17]]
	L: {2: 1, 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(2,4)@17, (3,4)@17, (1,4)@17, (4,6)@17, (5,5)@17, (6,6)@17, (5,6)@17, (0,6)@17, (0,0)@19, (4,5)@17, (2,5)@17, (2,6)@17, (0,5)@17, (7,7)@17, (2,2)@20, (6,7)@17, (0,0)@18, (0,2)@20, (1,1)@20, (0,3)@20, (0,0)@20, (3,5)@17, (1,5)@17, (3,6)@17, (1,6)@17, (0,7)@17, (1,7)@17, (4,7)@17, (5,7)@17, (1,1)@28, (1,1)@21, (0,1)@20, (1,2)@20, (0,0)@27, (0,1)@21, (3,3)@20, (0,0)@25, (0,0)@21, (0,0)@22, (0,0)@26, (0,0)@23, (2,3)@20, (1,3)@20, (2,7)@17, (3,7)@17, (0,0)@28, (0,1)@28, (0,4)@20, (2,4)@20, (1,4)@20, (3,4)@20, (4,4)@20]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [6: v14^1 + 0 [3: (3,3)@0, (1,1)@16, (4,4)@17], (v3 + -1*v5)*v14^1 + v5*v17 [18: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16], v14^1 + -1*v17 [1: (1,3)@16], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [1: (0,3)@16], (v7)*v14^1 + -1*v17 [1: (0,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17]]
	L: {6: 5, 0, 2, 1, 3, 4}
21 / v5
	P: [2: (-1)*v5^1 + v3 [2: (0,0)@1, (0,2)@16], v5^1 + 0 [10: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16]]
	L: {2: 0, 1}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [4: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [2: v7^1 + -1 [5: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17], v7^1 + 0 [4: (3,3)@15, (5,5)@16, (0,1)@17, (1,3)@17]]
	L: {2: 1, 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(1,4)@17, (3,4)@17, (6,6)@17, (4,6)@17, (5,5)@17, (2,6)@17, (5,6)@17, (0,6)@17, (0,0)@19, (4,5)@17, (2,5)@17, (1,6)@17, (0,5)@17, (7,7)@17, (2,2)@20, (6,7)@17, (0,0)@18, (0,2)@20, (1,1)@20, (0,3)@20, (0,0)@20, (3,5)@17, (1,5)@17, (3,6)@17, (4,4)@20, (0,7)@17, (1,7)@17, (4,7)@17, (5,7)@17, (1,1)@28, (1,1)@21, (0,1)@20, (1,2)@20, (0,0)@27, (0,1)@21, (3,3)@20, (0,0)@25, (0,0)@21, (0,0)@22, (0,0)@26, (0,0)@23, (2,3)@20, (1,3)@20, (2,7)@17, (3,7)@17, (0,0)@28, (0,1)@28, (0,4)@20, (2,4)@20, (1,4)@20, (3,4)@20, (5,5)@20, (0,5)@20, (2,5)@20, (1,5)@20, (3,5)@20, (4,5)@20]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v7*v14 + v7*v17 -> {v7 : 1, v14 + -1*v17 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [7: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [18: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16], v14^1 + -1*v17 [2: (1,3)@16, (0,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [1: (0,3)@16], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17]]
	L: {7: 5, 6, 0, 2, 1, 3, 4}
21 / v5
	P: [2: (-1)*v5^1 + v3 [2: (0,0)@1, (0,2)@16], v5^1 + 0 [10: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16]]
	L: {2: 0, 1}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [6: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (4,6)@17]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [2: v7^1 + -1 [6: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17], v7^1 + 0 [5: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (1,3)@17]]
	L: {2: 1, 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(1,6)@17, (5,5)@17, (3,6)@17, (6,7)@17, (4,5)@17, (0,5)@17, (5,6)@17, (0,0)@18, (0,0)@19, (0,0)@20, (2,5)@17, (0,5)@20, (0,7)@17, (7,7)@17, (2,2)@20, (4,5)@20, (1,5)@20, (0,2)@20, (1,1)@20, (0,3)@20, (2,5)@20, (3,5)@17, (1,5)@17, (2,4)@20, (4,4)@20, (5,5)@20, (1,7)@17, (4,7)@17, (5,7)@17, (1,1)@28, (1,1)@21, (0,1)@20, (1,2)@20, (0,0)@27, (0,1)@21, (3,3)@20, (0,0)@25, (0,0)@21, (0,0)@22, (0,0)@26, (0,0)@23, (2,3)@20, (1,3)@20, (2,7)@17, (3,7)@17, (0,0)@28, (0,1)@28, (0,4)@20, (3,5)@20, (1,4)@20, (3,4)@20, (5,6)@20, (6,6)@20, (0,6)@20, (2,6)@20, (1,6)@20, (3,6)@20, (4,6)@20]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v7*v14 + v7*v17 -> {v7 : 1, v14 + -1*v17 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [8: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [19: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [1: (0,3)@16], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17]]
	L: {8: 5, 6, 0, 2, 1, 3, 4, 7}
21 / v5
	P: [2: (-1)*v5^1 + v3 [2: (0,0)@1, (0,2)@16], v5^1 + 0 [10: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16]]
	L: {2: 0, 1}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [8: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,6)@17, (4,6)@17, (5,6)@17]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [2: v7^1 + -1 [6: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17], v7^1 + 0 [7: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (1,3)@17, (1,6)@17, (3,6)@17]]
	L: {2: 1, 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(4,5)@17, (2,5)@17, (0,5)@17, (6,7)@17, (1,5)@17, (0,7)@17, (7,7)@17, (0,0)@18, (0,0)@19, (0,0)@20, (3,5)@17, (0,5)@20, (1,7)@17, (5,7)@17, (2,2)@20, (4,5)@20, (1,5)@20, (0,2)@20, (1,1)@20, (0,3)@20, (2,5)@20, (2,7)@17, (3,6)@20, (2,4)@20, (4,4)@20, (5,5)@20, (2,6)@20, (4,7)@17, (4,6)@20, (4,7)@20, (7,7)@20, (0,1)@20, (1,2)@20, (0,0)@27, (0,1)@21, (3,3)@20, (0,0)@25, (0,0)@21, (0,0)@22, (0,0)@26, (0,0)@23, (2,3)@20, (1,3)@20, (1,6)@20, (3,7)@17, (0,0)@28, (0,1)@28, (0,4)@20, (3,5)@20, (1,4)@20, (3,4)@20, (5,6)@20, (6,6)@20, (0,6)@20, (5,7)@20, (6,7)@20, (0,7)@20, (2,7)@20, (1,7)@20, (1,1)@28, (3,7)@20, (1,1)@21]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [9: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [19: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [1: (0,3)@16], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [1: (0,5)@17]]
	L: {9: 5, 6, 0, 2, 1, 3, 4, 8, 7}
21 / v5
	P: [2: (-1)*v5^1 + v3 [2: (0,0)@1, (0,2)@16], v5^1 + 0 [11: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17]]
	L: {2: 0, 1}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [9: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,6)@17, (4,5)@17, (4,6)@17, (5,6)@17]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [2: v7^1 + -1 [6: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17], v7^1 + 0 [7: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (1,3)@17, (1,6)@17, (3,6)@17]]
	L: {2: 1, 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(2,5)@17, (1,5)@17, (7,7)@17, (6,7)@17, (3,5)@17, (0,7)@17, (5,7)@17, (0,0)@18, (0,0)@19, (0,0)@20, (2,7)@17, (0,5)@20, (1,7)@17, (4,7)@17, (2,2)@20, (4,5)@20, (1,5)@20, (0,2)@20, (1,1)@20, (0,3)@20, (2,5)@20, (3,7)@17, (3,6)@20, (2,4)@20, (4,4)@20, (5,5)@20, (2,6)@20, (0,7)@20, (4,6)@20, (4,7)@20, (7,7)@20, (0,1)@20, (1,2)@20, (7,8)@20, (0,1)@21, (3,3)@20, (0,0)@25, (0,0)@21, (0,0)@22, (0,0)@26, (0,0)@23, (2,3)@20, (1,3)@20, (1,6)@20, (3,7)@20, (0,0)@28, (0,1)@28, (0,4)@20, (3,5)@20, (1,4)@20, (3,4)@20, (5,6)@20, (6,6)@20, (0,6)@20, (5,7)@20, (6,7)@20, (1,1)@21, (2,7)@20, (1,7)@20, (1,1)@28, (5,8)@20, (6,8)@20, (0,8)@20, (2,8)@20, (1,8)@20, (3,8)@20, (4,8)@20, (0,0)@27, (8,8)@20]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v3*v17 + v5*v17 -> {v3 + -1*v5 : 1, v17 : 1}
WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): v3*v5*v17^2 + v3^2*v14*v17 + -2*v3*v5*v14*v17 + -1*v5^2*v7*v14*v17 + -1*v3*v5*v7*v17^2 + 2*v3*v5*v7*v14*v17 + -1*v3^2*v7*v14*v17 + -1*v5^2*v17^2 + v5^2*v14*v17 + v5^2*v7*v17^2 -> {v3 + -1*v5 : 1, -1 + v7 : 1, v17 : 1, v3*v14 + -1*v5*v14 + v5*v17 : 1}
WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): v5*v17^2 + v3*v14*v17 + -1*v5*v14*v17 + -1*v3*v7*v14*v17 + v5*v7*v14*v17 -> {v17 : 1, -1*v5*v17 + v5*v14 + -1*v3*v14 + v3*v7*v14 + -1*v5*v7*v14 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [10: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [2: (0,3)@16, (2,5)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17]]
	L: {10: 5, 6, 0, 2, 1, 3, 4, 8, 9, 7}
21 / v5
	P: [2: (-1)*v5^1 + v3 [4: (0,0)@1, (0,2)@16, (1,5)@17, (5,7)@17], v5^1 + 0 [12: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17]]
	L: {2: 0, 1}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [13: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [2: v7^1 + -1 [7: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17], v7^1 + 0 [8: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (1,3)@17, (1,6)@17, (3,6)@17, (6,7)@17]]
	L: {2: 1, 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(0,7)@17, (2,7)@17, (1,7)@17, (0,0)@18, (3,7)@17, (0,5)@20, (2,2)@20, (4,5)@20, (0,0)@19, (0,0)@20, (1,6)@20, (4,4)@20, (5,5)@20, (4,6)@20, (5,9)@20, (1,2)@20, (1,5)@20, (0,2)@20, (1,1)@20, (0,3)@20, (2,5)@20, (3,7)@20, (3,6)@20, (2,4)@20, (1,4)@20, (6,6)@20, (2,6)@20, (0,7)@20, (1,7)@20, (4,7)@20, (7,7)@20, (0,1)@20, (1,9)@20, (4,9)@20, (9,9)@20, (3,3)@20, (0,0)@25, (0,0)@21, (0,0)@22, (0,0)@26, (0,0)@23, (2,3)@20, (1,3)@20, (8,8)@20, (1,8)@20, (0,0)@28, (0,1)@28, (0,4)@20, (3,5)@20, (0,8)@20, (3,4)@20, (5,6)@20, (2,8)@20, (0,6)@20, (5,7)@20, (6,7)@20, (1,1)@21, (2,7)@20, (0,0)@27, (1,1)@28, (5,8)@20, (6,8)@20, (3,8)@20, (6,9)@20, (0,9)@20, (4,8)@20, (2,9)@20, (7,8)@20, (3,9)@20, (0,1)@21, (8,9)@20, (7,9)@20]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): v5*v17 + v3*v14 + -1*v5*v14 + -1*v3*v7*v17 + v5*v7*v17 -> {-1*v5*v17 + v5*v14 + -1*v3*v14 + v3*v7*v17 + -1*v5*v7*v17 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 100000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [3: (0,3)@16, (0,7)@17, (2,5)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [2: (-1)*v5^1 + v3 [4: (0,0)@1, (0,2)@16, (1,5)@17, (5,7)@17], v5^1 + 0 [12: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17]]
	L: {2: 0, 1}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [13: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [2: v7^1 + -1 [7: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17], v7^1 + 0 [9: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (3,6)@17, (6,7)@17]]
	L: {2: 1, 0}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(1,7)@17, (3,7)@17, (2,2)@20, (0,0)@18, (0,0)@20, (0,5)@20, (4,6)@20, (4,5)@20, (0,0)@19, (2,5)@20, (1,6)@20, (4,4)@20, (5,5)@20, (1,7)@20, (5,9)@20, (1,2)@20, (1,5)@20, (0,2)@20, (1,1)@20, (0,3)@20, (1,3)@20, (3,7)@20, (3,6)@20, (2,4)@20, (1,4)@20, (6,6)@20, (2,6)@20, (0,7)@20, (2,7)@20, (4,7)@20, (7,7)@20, (0,1)@20, (1,9)@20, (4,9)@20, (9,9)@20, (3,3)@20, (1,10)@20, (10,10)@20, (4,10)@20, (7,10)@20, (0,0)@23, (2,3)@20, (7,9)@20, (8,8)@20, (1,8)@20, (0,0)@28, (0,1)@28, (0,4)@20, (3,5)@20, (0,8)@20, (3,4)@20, (5,6)@20, (2,8)@20, (0,6)@20, (5,7)@20, (6,7)@20, (1,1)@21, (8,9)@20, (0,0)@27, (1,1)@28, (5,8)@20, (6,8)@20, (3,8)@20, (6,9)@20, (0,9)@20, (4,8)@20, (2,9)@20, (7,8)@20, (3,9)@20, (0,1)@21, (5,10)@20, (6,10)@20, (0,10)@20, (0,0)@25, (2,10)@20, (0,0)@21, (3,10)@20, (0,0)@22, (8,10)@20, (0,0)@26, (9,10)@20]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v3*v7*v17 + v5*v7*v17 -> {v3 + -1*v5 : 1, v7 : 1, v17 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [2: (-1)*v5^1 + v3 [5: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17], v5^1 + 0 [12: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17]]
	L: {2: 0, 1}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [17: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,2)@20, (0,5)@20, (4,6)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [3: v7^1 + -1 [8: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (4,6)@20], v7^1 + 0 [12: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (4,4)@20], v7^1 + 1 [1: (4,6)@20]]
	L: {3: 1, 0, 2}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(4,5)@20, (1,1)@20, (2,4)@20, (1,2)@20, (1,6)@20, (2,6)@20, (5,9)@20, (1,5)@20, (3,3)@20, (1,3)@20, (3,6)@20, (0,4)@20, (0,6)@20, (1,7)@20, (7,7)@20, (0,1)@20, (9,9)@20, (9,10)@20, (4,10)@20, (0,3)@20, (2,3)@20, (3,7)@20, (0,0)@22, (3,5)@20, (1,4)@20, (6,6)@20, (5,7)@20, (0,7)@20, (2,7)@20, (4,7)@20, (6,10)@20, (0,9)@20, (1,9)@20, (4,9)@20, (0,1)@21, (2,10)@20, (1,10)@20, (10,10)@20, (8,10)@20, (7,10)@20, (0,0)@23, (0,0)@26, (7,9)@20, (8,8)@20, (1,8)@20, (0,0)@28, (0,1)@28, (0,0)@25, (0,10)@20, (0,8)@20, (3,4)@20, (5,6)@20, (2,8)@20, (3,10)@20, (5,10)@20, (6,7)@20, (1,1)@21, (8,9)@20, (0,0)@27, (1,1)@28, (5,8)@20, (6,8)@20, (3,8)@20, (6,9)@20, (0,0)@21, (4,8)@20, (2,9)@20, (7,8)@20, (3,9)@20, (1,2)@28, (0,2)@28, (2,2)@28]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [3: (-1)*v5^1 + v3 [5: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17], v5^1 + 0 [12: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17], (-1 + v7)*v5^1 + v3 [1: (1,4)@20]]
	L: {3: 0, 1, 2}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [24: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,2)@20, (0,4)@20, (0,5)@20, (0,6)@20, (1,4)@20, (2,4)@20, (2,6)@20, (4,5)@20, (4,6)@20, (5,6)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [3: v7^1 + -1 [12: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (4,5)@20, (4,6)@20, (5,6)@20], v7^1 + 0 [13: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (4,4)@20], v7^1 + 1 [1: (4,6)@20]]
	L: {3: 1, 0, 2}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(1,1)@20, (1,2)@20, (3,4)@20, (1,5)@20, (1,6)@20, (3,5)@20, (5,9)@20, (0,1)@20, (3,3)@20, (1,3)@20, (3,6)@20, (2,9)@20, (3,9)@20, (1,7)@20, (7,7)@20, (1,9)@20, (9,9)@20, (9,10)@20, (4,10)@20, (0,3)@20, (2,3)@20, (3,7)@20, (0,0)@22, (0,10)@20, (7,8)@20, (2,8)@20, (5,7)@20, (0,7)@20, (2,7)@20, (4,7)@20, (6,10)@20, (0,9)@20, (0,0)@21, (4,9)@20, (0,1)@21, (2,10)@20, (1,10)@20, (10,10)@20, (8,10)@20, (7,10)@20, (0,0)@23, (0,0)@26, (7,9)@20, (8,8)@20, (1,8)@20, (0,0)@28, (0,1)@28, (0,0)@25, (4,8)@20, (0,8)@20, (2,2)@28, (0,2)@28, (1,2)@28, (3,10)@20, (5,10)@20, (6,7)@20, (1,1)@21, (8,9)@20, (0,0)@27, (1,1)@28, (5,8)@20, (6,8)@20, (3,8)@20, (6,9)@20, (0,2)@21, (1,2)@21, (2,2)@21]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [4: (-1)*v5^1 + v3 [5: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17], v5^1 + 0 [12: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [1: (1,1)@20]]
	L: {4: 0, 1, 3, 2}
22 / v3
	P: [1: v3^1 + 0 [2: (21,21)@0, (0,0)@3]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [24: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,2)@20, (0,4)@20, (0,5)@20, (0,6)@20, (1,4)@20, (2,4)@20, (2,6)@20, (4,5)@20, (4,6)@20, (5,6)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [3: v7^1 + -1 [12: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (4,5)@20, (4,6)@20, (5,6)@20], v7^1 + 0 [13: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (4,4)@20], v7^1 + 1 [1: (4,6)@20]]
	L: {3: 1, 0, 2}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(1,2)@20, (1,6)@20, (3,4)@20, (1,5)@20, (3,6)@20, (3,5)@20, (5,9)@20, (0,1)@20, (3,3)@20, (1,3)@20, (3,7)@20, (2,9)@20, (3,9)@20, (1,7)@20, (7,7)@20, (1,9)@20, (9,9)@20, (9,10)@20, (4,10)@20, (0,3)@20, (2,3)@20, (8,8)@20, (0,0)@22, (0,10)@20, (7,8)@20, (2,8)@20, (5,7)@20, (0,7)@20, (2,7)@20, (4,7)@20, (6,10)@20, (0,9)@20, (0,3)@21, (4,9)@20, (0,1)@21, (2,10)@20, (1,10)@20, (10,10)@20, (8,10)@20, (7,10)@20, (0,0)@23, (0,0)@26, (7,9)@20, (2,2)@21, (1,8)@20, (0,0)@28, (0,1)@28, (0,0)@25, (4,8)@20, (0,8)@20, (2,2)@28, (0,2)@28, (1,2)@28, (3,10)@20, (5,10)@20, (6,7)@20, (1,1)@21, (8,9)@20, (0,0)@27, (1,1)@28, (5,8)@20, (6,8)@20, (3,8)@20, (6,9)@20, (0,2)@21, (1,2)@21, (0,0)@21, (1,3)@21, (3,3)@21, (2,3)@21]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v5*v17 + -1*v3*v7*v17 + v5*v7*v17 -> {v17 : 1, v5 + v3*v7 + -1*v5*v7 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [5: (-1)*v5^1 + v3 [5: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17], v5^1 + 0 [12: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [1: (1,1)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20]]
	L: {5: 0, 1, 3, 4, 2}
22 / v3
	P: [1: v3^1 + 0 [3: (21,21)@0, (0,0)@3, (1,2)@20]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [26: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,2)@20, (0,4)@20, (0,5)@20, (0,6)@20, (1,2)@20, (1,4)@20, (1,6)@20, (2,4)@20, (2,6)@20, (4,5)@20, (4,6)@20, (5,6)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [3: v7^1 + -1 [12: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (4,5)@20, (4,6)@20, (5,6)@20], v7^1 + 0 [13: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (4,4)@20], v7^1 + 1 [1: (4,6)@20]]
	L: {3: 1, 0, 2}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(1,5)@20, (0,1)@20, (3,4)@20, (3,3)@20, (3,6)@20, (3,5)@20, (5,9)@20, (9,9)@20, (9,10)@20, (1,3)@20, (3,7)@20, (2,9)@20, (3,9)@20, (1,7)@20, (7,7)@20, (1,9)@20, (4,9)@20, (1,10)@20, (4,10)@20, (0,3)@20, (2,3)@20, (8,8)@20, (0,0)@22, (0,10)@20, (7,8)@20, (2,8)@20, (5,7)@20, (0,7)@20, (2,7)@20, (4,7)@20, (6,10)@20, (0,9)@20, (0,3)@21, (3,3)@21, (0,1)@21, (2,10)@20, (2,3)@21, (10,10)@20, (8,10)@20, (7,10)@20, (0,0)@23, (0,0)@26, (7,9)@20, (2,2)@21, (1,8)@20, (0,0)@28, (0,1)@28, (0,0)@25, (4,8)@20, (0,8)@20, (2,2)@28, (0,2)@28, (1,2)@28, (3,10)@20, (5,10)@20, (6,7)@20, (1,1)@21, (8,9)@20, (0,0)@27, (1,1)@28, (5,8)@20, (6,8)@20, (3,8)@20, (6,9)@20, (0,2)@21, (1,2)@21, (0,0)@21, (1,3)@21, (0,4)@21, (1,4)@21, (3,4)@21, (4,4)@21, (2,4)@21]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v5*v17 + v3*v17 + -1*v3*v7*v17 + 2*v5*v7*v17 -> {v17 : 1, v5 + -1*v3 + v3*v7 + -2*v5*v7 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [6: (-1)*v5^1 + v3 [5: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17], v5^1 + 0 [13: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [1: (1,1)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [1: (3,4)@20]]
	L: {6: 0, 1, 3, 5, 4, 2}
22 / v3
	P: [1: v3^1 + 0 [4: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [29: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,4)@20, (0,5)@20, (0,6)@20, (1,2)@20, (1,4)@20, (1,5)@20, (1,6)@20, (2,4)@20, (2,6)@20, (3,4)@20, (4,5)@20, (4,6)@20, (5,6)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [3: v7^1 + -1 [12: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (4,5)@20, (4,6)@20, (5,6)@20], v7^1 + 0 [13: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (4,4)@20], v7^1 + 1 [1: (4,6)@20]]
	L: {3: 1, 0, 2}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(3,3)@20, (3,6)@20, (3,5)@20, (9,9)@20, (1,3)@20, (3,9)@20, (5,9)@20, (4,9)@20, (9,10)@20, (2,3)@20, (3,7)@20, (2,9)@20, (5,7)@20, (1,7)@20, (7,7)@20, (1,9)@20, (3,3)@21, (1,10)@20, (4,10)@20, (0,3)@20, (7,9)@20, (8,8)@20, (0,0)@22, (0,10)@20, (7,8)@20, (2,8)@20, (3,10)@20, (0,7)@20, (2,7)@20, (4,7)@20, (6,10)@20, (0,9)@20, (0,3)@21, (1,3)@21, (0,1)@21, (2,10)@20, (2,3)@21, (10,10)@20, (8,10)@20, (7,10)@20, (0,0)@23, (0,0)@26, (3,4)@21, (2,2)@21, (1,8)@20, (0,0)@28, (0,1)@28, (0,0)@25, (4,8)@20, (0,8)@20, (2,2)@28, (0,2)@28, (1,2)@28, (4,4)@21, (5,10)@20, (6,7)@20, (1,1)@21, (8,9)@20, (0,0)@27, (1,1)@28, (5,8)@20, (6,8)@20, (3,8)@20, (6,9)@20, (0,2)@21, (1,2)@21, (0,0)@21, (2,4)@21, (0,4)@21, (1,4)@21, (0,5)@21, (1,5)@21, (3,5)@21, (5,5)@21, (4,5)@21, (2,5)@21]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -2*v5*v17 + v3*v17 + -1*v3*v7*v17 + v5*v7*v17 -> {v17 : 1, 2*v5 + -1*v3 + v3*v7 + -1*v5*v7 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [7: (-1)*v5^1 + v3 [5: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17], v5^1 + 0 [13: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [2: (1,1)@20, (3,3)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [1: (3,4)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [1: (3,6)@20]]
	L: {7: 0, 1, 3, 5, 4, 6, 2}
22 / v3
	P: [1: v3^1 + 0 [4: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [30: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,4)@20, (0,5)@20, (0,6)@20, (1,2)@20, (1,4)@20, (1,5)@20, (1,6)@20, (2,4)@20, (2,6)@20, (3,4)@20, (3,6)@20, (4,5)@20, (4,6)@20, (5,6)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [3: v7^1 + -1 [12: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (4,5)@20, (4,6)@20, (5,6)@20], v7^1 + 0 [13: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (4,4)@20], v7^1 + 1 [1: (4,6)@20]]
	L: {3: 1, 0, 2}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(3,5)@20, (1,3)@20, (3,9)@20, (9,9)@20, (2,3)@20, (2,9)@20, (5,9)@20, (4,9)@20, (9,10)@20, (0,3)@20, (3,7)@20, (0,10)@20, (5,7)@20, (1,7)@20, (7,7)@20, (1,9)@20, (3,3)@21, (1,10)@20, (4,10)@20, (7,10)@20, (7,9)@20, (8,8)@20, (0,0)@22, (4,8)@20, (7,8)@20, (2,8)@20, (3,10)@20, (0,7)@20, (2,7)@20, (4,7)@20, (6,10)@20, (0,9)@20, (0,3)@21, (1,3)@21, (0,1)@21, (2,10)@20, (2,3)@21, (10,10)@20, (8,10)@20, (2,6)@21, (0,0)@23, (0,0)@26, (3,4)@21, (2,2)@21, (1,8)@20, (0,0)@28, (0,1)@28, (0,0)@25, (4,5)@21, (0,8)@20, (2,2)@28, (0,2)@28, (1,2)@28, (4,4)@21, (5,10)@20, (6,7)@20, (1,1)@21, (8,9)@20, (0,0)@27, (1,1)@28, (5,8)@20, (6,8)@20, (3,8)@20, (6,9)@20, (0,2)@21, (1,2)@21, (0,0)@21, (2,4)@21, (0,4)@21, (1,4)@21, (0,5)@21, (1,5)@21, (3,5)@21, (5,5)@21, (0,6)@21, (1,6)@21, (3,6)@21, (5,6)@21, (4,6)@21, (6,6)@21, (2,5)@21]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v3*v17 + v5*v17 -> {v3 + -1*v5 : 1, v17 : 1}
WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v3*v17 + 2*v5*v17 -> {v3 + -2*v5 : 1, v17 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [8: (-1)*v5^1 + v3 [6: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20], v5^1 + 0 [15: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (2,3)@20, (3,5)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [2: (1,1)@20, (3,3)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [1: (3,4)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [1: (3,6)@20], (-2)*v5^1 + v3 [1: (0,3)@20]]
	L: {8: 7, 0, 1, 3, 5, 4, 6, 2}
22 / v3
	P: [1: v3^1 + 0 [4: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [34: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (2,3)@20, (2,4)@20, (2,6)@20, (3,4)@20, (3,5)@20, (3,6)@20, (4,5)@20, (4,6)@20, (5,6)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [3: v7^1 + -1 [12: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (4,5)@20, (4,6)@20, (5,6)@20], v7^1 + 0 [13: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (4,4)@20], v7^1 + 1 [1: (4,6)@20]]
	L: {3: 1, 0, 2}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(9,9)@20, (4,9)@20, (3,9)@20, (1,9)@20, (7,9)@20, (2,9)@20, (5,9)@20, (0,9)@20, (9,10)@20, (7,10)@20, (3,7)@20, (0,10)@20, (5,7)@20, (1,7)@20, (7,7)@20, (6,9)@20, (3,3)@21, (1,10)@20, (4,10)@20, (3,7)@21, (2,7)@21, (8,8)@20, (0,0)@22, (4,8)@20, (7,8)@20, (2,8)@20, (3,10)@20, (0,7)@20, (2,7)@20, (4,7)@20, (6,10)@20, (0,2)@21, (0,3)@21, (1,3)@21, (0,1)@21, (2,10)@20, (2,3)@21, (10,10)@20, (8,10)@20, (1,7)@21, (4,7)@21, (3,4)@21, (2,5)@21, (2,2)@21, (1,8)@20, (0,0)@28, (0,1)@28, (0,0)@25, (4,5)@21, (0,8)@20, (2,2)@28, (0,2)@28, (1,2)@28, (4,4)@21, (5,10)@20, (6,7)@20, (1,1)@21, (8,9)@20, (0,0)@27, (1,1)@28, (5,8)@20, (6,8)@20, (3,8)@20, (4,6)@21, (5,6)@21, (1,2)@21, (0,0)@21, (2,4)@21, (0,4)@21, (1,4)@21, (0,5)@21, (1,5)@21, (3,5)@21, (5,5)@21, (0,6)@21, (1,6)@21, (3,6)@21, (7,7)@21, (0,7)@21, (6,6)@21, (2,6)@21, (0,0)@23, (5,7)@21, (0,0)@26, (6,7)@21]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v5 + v3 + -1*v3*v7 + v5*v7 -> {v3 + -1*v5 : 1, -1 + v7 : 1}
WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v5*v17 + v3*v17 + -1*v3*v7*v17 + 2*v5*v7*v17 -> {v17 : 1, v5 + -1*v3 + v3*v7 + -2*v5*v7 : 1}
WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v3*v5*v7*v17 + v5^2*v7*v17 -> {v3 + -1*v5 : 1, v5 : 1, v7 : 1, v17 : 1}
WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v3*v7*v17 + v3*v17 + v5*v7*v17 -> {v17 : 1, -1*v3 + v3*v7 + -1*v5*v7 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [9: (-1)*v5^1 + v3 [9: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,9)@20, (3,9)@20, (9,9)@20], v5^1 + 0 [16: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (1,9)@20, (2,3)@20, (3,5)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [2: (1,1)@20, (3,3)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [1: (3,6)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [1: (2,9)@20]]
	L: {9: 7, 0, 1, 3, 5, 8, 4, 6, 2}
22 / v3
	P: [1: v3^1 + 0 [4: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [38: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,9)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,9)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,9)@20, (4,5)@20, (4,6)@20, (4,9)@20, (5,6)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [3: v7^1 + -1 [13: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (4,5)@20, (4,6)@20, (5,6)@20, (9,9)@20], v7^1 + 0 [14: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (1,9)@20, (4,4)@20], v7^1 + 1 [1: (4,6)@20]]
	L: {3: 1, 0, 2}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(0,9)@20, (6,9)@20, (5,9)@20, (9,10)@20, (7,9)@20, (5,7)@20, (7,7)@20, (3,3)@21, (4,10)@20, (7,10)@20, (3,7)@20, (0,10)@20, (3,10)@20, (1,7)@20, (4,7)@20, (0,3)@21, (1,3)@21, (1,10)@20, (10,10)@20, (3,7)@21, (2,7)@21, (8,8)@20, (0,0)@22, (4,8)@20, (7,8)@20, (2,8)@20, (5,10)@20, (0,7)@20, (2,7)@20, (5,8)@20, (6,10)@20, (0,2)@21, (0,0)@21, (2,4)@21, (0,1)@21, (2,10)@20, (2,3)@21, (2,6)@21, (8,10)@20, (1,7)@21, (4,7)@21, (3,4)@21, (4,8)@21, (2,2)@21, (1,8)@20, (0,0)@28, (0,1)@28, (0,0)@25, (4,5)@21, (0,8)@20, (2,2)@28, (0,2)@28, (1,2)@28, (4,4)@21, (0,0)@26, (6,7)@20, (1,1)@21, (8,9)@20, (0,0)@27, (1,1)@28, (0,0)@23, (6,8)@20, (3,8)@20, (4,6)@21, (5,6)@21, (1,2)@21, (6,7)@21, (5,7)@21, (0,4)@21, (1,4)@21, (0,5)@21, (1,5)@21, (3,5)@21, (5,5)@21, (0,6)@21, (1,6)@21, (3,6)@21, (7,7)@21, (0,7)@21, (6,6)@21, (7,8)@21, (0,8)@21, (1,8)@21, (3,8)@21, (5,8)@21, (2,5)@21, (8,8)@21, (6,8)@21, (2,8)@21]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v5*v7*v17 + v3*v7*v17 + -1*v3*v7^2*v17 + v5*v17 + v5*v7^2*v17 -> {v17 : 1, -1*v5 + v5*v7 + -1*v3*v7 + v3*v7^2 + -1*v5*v7^2 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [10: (-1)*v5^1 + v3 [9: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,9)@20, (3,9)@20, (9,9)@20], v5^1 + 0 [17: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,9)@20, (1,9)@20, (2,3)@20, (3,5)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [2: (1,1)@20, (3,3)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [1: (3,6)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [1: (2,9)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20]]
	L: {10: 7, 0, 1, 3, 5, 8, 4, 6, 2, 9}
22 / v3
	P: [1: v3^1 + 0 [4: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [40: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,9)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,9)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,9)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,9)@20, (4,5)@20, (4,6)@20, (4,9)@20, (5,6)@20, (6,9)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [3: v7^1 + -1 [13: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (4,5)@20, (4,6)@20, (5,6)@20, (9,9)@20], v7^1 + 0 [14: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (1,9)@20, (4,4)@20], v7^1 + 1 [1: (4,6)@20]]
	L: {3: 1, 0, 2}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(5,9)@20, (7,9)@20, (7,7)@20, (9,10)@20, (3,7)@20, (5,7)@20, (4,7)@20, (3,3)@21, (4,10)@20, (7,10)@20, (8,8)@20, (0,10)@20, (3,10)@20, (1,7)@20, (6,10)@20, (0,3)@21, (1,3)@21, (1,10)@20, (10,10)@20, (3,7)@21, (2,7)@21, (1,8)@20, (6,9)@21, (4,8)@20, (7,8)@20, (2,8)@20, (5,10)@20, (0,7)@20, (2,7)@20, (5,8)@20, (3,8)@20, (0,2)@21, (0,0)@21, (2,4)@21, (0,1)@21, (2,10)@20, (2,3)@21, (2,6)@21, (8,10)@20, (1,7)@21, (4,7)@21, (3,4)@21, (4,8)@21, (2,2)@21, (2,8)@21, (5,9)@21, (4,9)@21, (9,9)@21, (4,5)@21, (0,8)@20, (2,2)@28, (0,2)@28, (1,2)@28, (4,4)@21, (0,0)@26, (6,7)@20, (1,1)@21, (8,9)@20, (0,0)@27, (1,1)@28, (0,0)@23, (6,8)@20, (6,8)@21, (4,6)@21, (5,6)@21, (1,2)@21, (6,7)@21, (5,7)@21, (0,4)@21, (1,4)@21, (0,5)@21, (1,5)@21, (3,5)@21, (5,5)@21, (0,6)@21, (1,6)@21, (3,6)@21, (7,7)@21, (0,7)@21, (6,6)@21, (7,8)@21, (0,8)@21, (1,8)@21, (3,8)@21, (5,8)@21, (2,5)@21, (8,8)@21, (7,9)@21, (0,9)@21, (1,9)@21, (3,9)@21, (0,0)@28, (0,0)@22, (0,1)@28, (8,9)@21, (0,0)@25, (2,9)@21]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v3*v7*v17 + v3*v17 + v5*v7*v17 -> {v17 : 1, -1*v3 + v3*v7 + -1*v5*v7 : 1}
WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v5 + v3 + -1*v3*v7 + v5*v7 -> {v3 + -1*v5 : 1, -1 + v7 : 1}
WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v5^2*v17 + v3*v5*v17 + -1*v3*v5*v7^2*v17 + v5^2*v7^2*v17 -> {v3 + -1*v5 : 1, v5 : 1, -1 + v7 : 1, 1 + v7 : 1, v17 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [11: (-1)*v5^1 + v3 [11: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,9)@20, (3,9)@20, (7,7)@20, (7,9)@20, (9,9)@20], v5^1 + 0 [18: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,9)@20, (1,9)@20, (2,3)@20, (3,5)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [2: (1,1)@20, (3,3)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [1: (3,6)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [2: (2,9)@20, (5,9)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20]]
	L: {11: 7, 0, 1, 3, 5, 8, 4, 6, 2, 9, 10}
22 / v3
	P: [1: v3^1 + 0 [4: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [43: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,9)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,9)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,9)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,9)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,9)@20, (5,6)@20, (5,9)@20, (6,9)@20, (7,9)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [3: v7^1 + -1 [15: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (9,9)@20], v7^1 + 0 [14: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (1,9)@20, (4,4)@20], v7^1 + 1 [2: (4,6)@20, (7,9)@20]]
	L: {3: 1, 0, 2}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(3,7)@20, (7,10)@20, (1,7)@20, (9,10)@20, (8,8)@20, (5,7)@20, (2,7)@20, (3,3)@21, (4,10)@20, (3,7)@21, (1,8)@20, (0,10)@20, (3,10)@20, (0,7)@20, (6,10)@20, (0,3)@21, (1,3)@21, (1,10)@20, (10,10)@20, (1,7)@21, (2,7)@21, (2,2)@21, (0,10)@21, (4,8)@20, (7,8)@20, (2,8)@20, (5,10)@20, (6,7)@20, (8,9)@20, (5,8)@20, (3,8)@20, (0,2)@21, (0,0)@21, (2,4)@21, (0,1)@21, (2,10)@20, (2,3)@21, (2,6)@21, (8,10)@20, (7,8)@21, (4,7)@21, (3,4)@21, (4,8)@21, (0,9)@21, (2,8)@21, (5,9)@21, (7,10)@21, (3,10)@21, (4,5)@21, (0,8)@20, (2,10)@21, (10,10)@21, (1,2)@28, (4,4)@21, (0,0)@26, (8,9)@21, (1,1)@21, (2,9)@21, (0,0)@27, (1,1)@28, (0,0)@23, (6,8)@20, (6,8)@21, (4,6)@21, (5,6)@21, (1,2)@21, (6,7)@21, (5,7)@21, (0,4)@21, (1,4)@21, (0,5)@21, (1,5)@21, (3,5)@21, (5,5)@21, (0,6)@21, (1,6)@21, (3,6)@21, (7,7)@21, (0,7)@21, (6,6)@21, (0,0)@25, (0,8)@21, (1,8)@21, (3,8)@21, (5,8)@21, (2,5)@21, (8,8)@21, (7,9)@21, (0,1)@28, (1,9)@21, (3,9)@21, (0,0)@28, (0,0)@22, (4,9)@21, (6,9)@21, (9,9)@21, (1,10)@21, (5,10)@21, (8,10)@21, (4,10)@21, (6,10)@21, (2,2)@28, (9,10)@21, (0,2)@28]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v3*v5*v17 + v5^2*v17 -> {v3 + -1*v5 : 1, v5 : 1, v17 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [12: (-1)*v5^1 + v3 [13: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,9)@20, (3,7)@20, (3,9)@20, (7,7)@20, (7,9)@20, (9,9)@20], v5^1 + 0 [19: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [2: (1,1)@20, (3,3)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [2: (3,6)@20, (3,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [2: (2,9)@20, (5,9)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [1: (2,7)@20]]
	L: {12: 7, 0, 1, 3, 11, 5, 8, 4, 6, 2, 9, 10}
22 / v3
	P: [1: v3^1 + 0 [4: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [46: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,9)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,9)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,9)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,9)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,9)@20, (5,6)@20, (5,9)@20, (6,9)@20, (7,9)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [3: v7^1 + -1 [15: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (9,9)@20], v7^1 + 0 [14: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (1,9)@20, (4,4)@20], v7^1 + 1 [2: (4,6)@20, (7,9)@20]]
	L: {3: 1, 0, 2}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(0,7)@20, (7,10)@20, (6,7)@20, (9,10)@20, (8,8)@20, (5,7)@20, (6,10)@20, (3,3)@21, (4,10)@20, (3,7)@21, (1,8)@20, (0,10)@20, (3,10)@20, (8,9)@20, (3,8)@20, (0,3)@21, (1,3)@21, (1,10)@20, (10,10)@20, (1,7)@21, (2,7)@21, (2,2)@21, (0,10)@21, (4,8)@20, (7,8)@20, (2,8)@20, (5,10)@20, (1,1)@21, (9,10)@21, (5,8)@20, (6,8)@20, (0,2)@21, (0,0)@21, (2,4)@21, (0,1)@21, (2,10)@20, (2,3)@21, (2,6)@21, (8,10)@20, (7,8)@21, (4,7)@21, (3,4)@21, (4,8)@21, (0,9)@21, (2,8)@21, (5,9)@21, (7,10)@21, (3,10)@21, (4,5)@21, (0,8)@20, (0,11)@21, (3,11)@21, (11,11)@21, (4,4)@21, (2,11)@21, (10,11)@21, (0,2)@28, (2,9)@21, (0,0)@27, (1,1)@28, (0,0)@23, (2,2)@28, (6,8)@21, (4,6)@21, (5,6)@21, (1,2)@21, (6,7)@21, (5,7)@21, (0,4)@21, (1,4)@21, (0,5)@21, (1,5)@21, (3,5)@21, (5,5)@21, (0,6)@21, (1,6)@21, (3,6)@21, (7,7)@21, (0,7)@21, (6,6)@21, (0,0)@25, (0,8)@21, (1,8)@21, (3,8)@21, (5,8)@21, (2,5)@21, (8,8)@21, (7,9)@21, (0,1)@28, (1,9)@21, (3,9)@21, (0,0)@28, (0,0)@22, (4,9)@21, (6,9)@21, (9,9)@21, (1,10)@21, (5,10)@21, (8,10)@21, (4,10)@21, (6,10)@21, (2,10)@21, (7,11)@21, (10,10)@21, (1,11)@21, (1,2)@28, (5,11)@21, (8,11)@21, (4,11)@21, (0,0)@26, (6,11)@21, (8,9)@21, (9,11)@21]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -2*v5*v7*v17 + v3*v7*v17 + -1*v3*v7^2*v17 + v5*v7^2*v17 -> {v7 : 1, v17 : 1, 2*v5 + -1*v3 + v3*v7 + -1*v5*v7 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [13: (-1)*v5^1 + v3 [14: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,9)@20, (3,7)@20, (3,9)@20, (7,7)@20, (7,9)@20, (7,10)@20, (9,9)@20], v5^1 + 0 [20: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [2: (1,1)@20, (3,3)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [2: (2,9)@20, (5,9)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [2: (2,7)@20, (5,7)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20]]
	L: {13: 7, 0, 1, 3, 11, 5, 8, 4, 6, 2, 9, 12, 10}
22 / v3
	P: [1: v3^1 + 0 [4: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [50: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,9)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,9)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,9)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,9)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,9)@20, (5,6)@20, (5,7)@20, (5,9)@20, (6,7)@20, (6,9)@20, (7,9)@20, (7,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [3: v7^1 + -1 [15: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (9,9)@20], v7^1 + 0 [16: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (4,4)@20, (6,7)@20], v7^1 + 1 [2: (4,6)@20, (7,9)@20]]
	L: {3: 1, 0, 2}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(9,10)@20, (4,10)@20, (3,10)@20, (10,10)@20, (8,8)@20, (0,10)@20, (6,10)@20, (3,3)@21, (1,10)@20, (3,7)@21, (1,8)@20, (7,8)@20, (5,10)@20, (8,9)@20, (3,8)@20, (0,3)@21, (1,3)@21, (2,10)@20, (8,10)@20, (1,7)@21, (2,7)@21, (2,2)@21, (0,10)@21, (4,8)@20, (0,8)@20, (2,8)@20, (2,11)@21, (1,1)@21, (9,10)@21, (5,8)@20, (6,8)@20, (0,2)@21, (0,0)@21, (2,4)@21, (0,1)@21, (3,5)@21, (2,3)@21, (2,6)@21, (0,7)@21, (7,8)@21, (4,7)@21, (3,4)@21, (4,8)@21, (0,9)@21, (2,8)@21, (5,9)@21, (7,10)@21, (3,10)@21, (4,5)@21, (6,10)@21, (0,11)@21, (3,11)@21, (11,11)@21, (4,4)@21, (6,11)@21, (10,11)@21, (5,12)@21, (2,9)@21, (2,12)@21, (12,12)@21, (10,12)@21, (2,2)@28, (6,8)@21, (4,6)@21, (5,6)@21, (1,2)@21, (6,7)@21, (5,7)@21, (0,4)@21, (1,4)@21, (0,5)@21, (1,5)@21, (0,0)@26, (5,5)@21, (0,6)@21, (1,6)@21, (3,6)@21, (7,7)@21, (9,11)@21, (6,6)@21, (0,0)@25, (0,8)@21, (1,8)@21, (3,8)@21, (5,8)@21, (2,5)@21, (8,8)@21, (7,9)@21, (0,1)@28, (1,9)@21, (3,9)@21, (0,0)@28, (0,0)@22, (4,9)@21, (6,9)@21, (9,9)@21, (1,10)@21, (5,10)@21, (8,10)@21, (4,10)@21, (8,9)@21, (2,10)@21, (7,11)@21, (10,10)@21, (1,11)@21, (1,2)@28, (5,11)@21, (8,11)@21, (4,11)@21, (7,12)@21, (0,12)@21, (1,12)@21, (3,12)@21, (0,2)@28, (11,12)@21, (8,12)@21, (4,12)@21, (0,0)@27, (6,12)@21, (1,1)@28, (9,12)@21, (0,0)@23]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): v5*v7*v17 + v3*v17 + -1*v3*v7^2*v17 + -1*v5*v17 + v5*v7^2*v17 -> {v17 : 1, v5 + -1*v3 + -1*v5*v7 + v3*v7^2 + -1*v5*v7^2 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [14: (-1)*v5^1 + v3 [15: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,9)@20, (3,7)@20, (3,9)@20, (7,7)@20, (7,9)@20, (7,10)@20, (9,9)@20, (9,10)@20], v5^1 + 0 [20: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [2: (1,1)@20, (3,3)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [3: (2,9)@20, (5,9)@20, (9,10)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [2: (2,7)@20, (5,7)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20], (1 + -1*v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (4,10)@20]]
	L: {14: 7, 0, 1, 3, 11, 5, 8, 4, 6, 2, 13, 9, 12, 10}
22 / v3
	P: [1: v3^1 + 0 [4: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [52: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,9)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,9)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,9)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,9)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,9)@20, (4,10)@20, (5,6)@20, (5,7)@20, (5,9)@20, (6,7)@20, (6,9)@20, (7,9)@20, (7,10)@20, (9,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [3: v7^1 + -1 [15: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (9,9)@20], v7^1 + 0 [17: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (4,4)@20, (6,7)@20, (9,10)@20], v7^1 + 1 [2: (4,6)@20, (7,9)@20]]
	L: {3: 1, 0, 2}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(10,10)@20, (1,10)@20, (3,10)@20, (2,10)@20, (8,8)@20, (0,10)@20, (6,10)@20, (3,3)@21, (8,10)@20, (3,7)@21, (1,8)@20, (7,8)@20, (5,10)@20, (8,9)@20, (3,8)@20, (0,3)@21, (1,3)@21, (2,3)@21, (0,7)@21, (1,7)@21, (2,7)@21, (2,2)@21, (0,10)@21, (4,8)@20, (0,8)@20, (2,8)@20, (2,11)@21, (1,1)@21, (9,10)@21, (5,8)@20, (6,8)@20, (0,2)@21, (0,0)@21, (2,4)@21, (0,1)@21, (3,5)@21, (5,5)@21, (2,6)@21, (7,7)@21, (7,8)@21, (4,7)@21, (3,4)@21, (4,8)@21, (0,9)@21, (2,8)@21, (5,9)@21, (7,10)@21, (3,10)@21, (4,5)@21, (6,10)@21, (0,11)@21, (3,11)@21, (11,11)@21, (4,4)@21, (6,11)@21, (10,11)@21, (5,12)@21, (2,9)@21, (2,12)@21, (7,13)@21, (1,13)@21, (11,13)@21, (6,8)@21, (4,6)@21, (5,6)@21, (1,2)@21, (6,7)@21, (5,7)@21, (0,4)@21, (1,4)@21, (0,5)@21, (1,5)@21, (0,0)@26, (0,0)@23, (0,6)@21, (1,6)@21, (3,6)@21, (9,12)@21, (9,11)@21, (6,6)@21, (0,0)@25, (0,8)@21, (1,8)@21, (3,8)@21, (5,8)@21, (2,5)@21, (8,8)@21, (7,9)@21, (0,1)@28, (1,9)@21, (3,9)@21, (0,0)@28, (0,0)@22, (4,9)@21, (6,9)@21, (9,9)@21, (1,10)@21, (5,10)@21, (8,10)@21, (4,10)@21, (8,9)@21, (2,10)@21, (7,11)@21, (10,10)@21, (1,11)@21, (1,2)@28, (5,11)@21, (8,11)@21, (4,11)@21, (7,12)@21, (0,12)@21, (1,12)@21, (3,12)@21, (0,2)@28, (11,12)@21, (8,12)@21, (4,12)@21, (0,0)@27, (6,12)@21, (1,1)@28, (12,12)@21, (10,12)@21, (0,13)@21, (2,2)@28, (3,13)@21, (5,13)@21, (8,13)@21, (4,13)@21, (6,13)@21, (2,13)@21, (13,13)@21, (9,13)@21, (12,13)@21, (10,13)@21]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v5*v17 + v3*v17 + -1*v3*v7*v17 + v5*v7*v17 -> {v3 + -1*v5 : 1, -1 + v7 : 1, v17 : 1}
WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v3*v7*v17 + v5*v7*v17 -> {v3 + -1*v5 : 1, v7 : 1, v17 : 1}
WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v3*v7*v17 + v3*v17 + v5*v7*v17 -> {v17 : 1, -1*v3 + v3*v7 + -1*v5*v7 : 1}
WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): v5*v17 + -1*v3*v7*v17 + v5*v7*v17 -> {v17 : 1, -1*v5 + v3*v7 + -1*v5*v7 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [15: (-1)*v5^1 + v3 [17: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,9)@20, (1,10)@20, (3,7)@20, (3,9)@20, (3,10)@20, (7,7)@20, (7,9)@20, (7,10)@20, (9,9)@20, (9,10)@20], v5^1 + 0 [20: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [3: (1,1)@20, (3,3)@20, (10,10)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [4: (2,9)@20, (2,10)@20, (5,9)@20, (9,10)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [2: (2,7)@20, (5,7)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20], (1 + -1*v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (4,10)@20], (-1 + -1*v7)*v5^1 + v3*v7 [1: (0,10)@20]]
	L: {15: 7, 0, 1, 3, 11, 5, 8, 14, 4, 6, 2, 13, 9, 12, 10}
22 / v3
	P: [1: v3^1 + 0 [4: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [56: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,9)@20, (0,10)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,9)@20, (1,10)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,9)@20, (2,10)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,9)@20, (3,10)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,9)@20, (4,10)@20, (5,6)@20, (5,7)@20, (5,9)@20, (6,7)@20, (6,9)@20, (7,9)@20, (7,10)@20, (9,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [3: v7^1 + -1 [16: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (3,10)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (9,9)@20], v7^1 + 0 [18: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (1,10)@20, (4,4)@20, (6,7)@20, (9,10)@20], v7^1 + 1 [2: (4,6)@20, (7,9)@20]]
	L: {3: 1, 0, 2}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(6,10)@20, (8,8)@20, (5,10)@20, (8,10)@20, (1,8)@20, (7,8)@20, (8,9)@20, (3,3)@21, (0,7)@21, (3,7)@21, (2,2)@21, (4,8)@20, (2,8)@20, (1,1)@21, (3,8)@20, (0,3)@21, (1,3)@21, (2,3)@21, (7,7)@21, (1,7)@21, (2,7)@21, (2,8)@21, (0,10)@21, (4,5)@21, (0,8)@20, (11,11)@21, (2,11)@21, (10,11)@21, (9,10)@21, (5,8)@20, (6,8)@20, (0,2)@21, (0,0)@21, (2,4)@21, (0,1)@21, (3,5)@21, (5,5)@21, (2,6)@21, (12,13)@21, (7,8)@21, (4,7)@21, (3,4)@21, (4,8)@21, (0,9)@21, (9,13)@21, (5,9)@21, (7,10)@21, (3,10)@21, (8,10)@21, (6,10)@21, (0,11)@21, (3,11)@21, (5,11)@21, (4,4)@21, (6,11)@21, (13,13)@21, (5,12)@21, (2,9)@21, (2,12)@21, (7,13)@21, (1,13)@21, (11,13)@21, (6,8)@21, (4,6)@21, (0,14)@21, (1,2)@21, (11,14)@21, (14,14)@21, (4,14)@21, (2,14)@21, (0,5)@21, (1,5)@21, (0,0)@26, (0,0)@23, (0,6)@21, (1,6)@21, (3,6)@21, (9,12)@21, (9,11)@21, (6,6)@21, (0,0)@25, (0,8)@21, (1,8)@21, (3,8)@21, (5,8)@21, (2,5)@21, (8,8)@21, (7,9)@21, (0,1)@28, (1,9)@21, (3,9)@21, (0,0)@28, (0,0)@22, (4,9)@21, (6,9)@21, (9,9)@21, (1,10)@21, (5,10)@21, (2,13)@21, (4,10)@21, (8,9)@21, (2,10)@21, (7,11)@21, (10,10)@21, (1,11)@21, (1,2)@28, (10,13)@21, (8,11)@21, (4,11)@21, (7,12)@21, (0,12)@21, (1,12)@21, (3,12)@21, (0,2)@28, (11,12)@21, (8,12)@21, (4,12)@21, (0,0)@27, (6,12)@21, (1,1)@28, (12,12)@21, (10,12)@21, (0,13)@21, (2,2)@28, (3,13)@21, (5,13)@21, (8,13)@21, (4,13)@21, (6,13)@21, (5,6)@21, (7,14)@21, (1,14)@21, (3,14)@21, (6,7)@21, (5,14)@21, (5,7)@21, (8,14)@21, (0,4)@21, (6,14)@21, (1,4)@21, (13,14)@21, (9,14)@21, (12,14)@21, (10,14)@21]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v3*v7*v17 + v3*v17 + v5*v7*v17 -> {v17 : 1, -1*v3 + v3*v7 + -1*v5*v7 : 1}
WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): v5^2*v17 + v3^2*v17 + -1*v3^2*v7*v17 + -2*v3*v5*v17 + v3*v5*v7*v17 -> {v3 + -1*v5 : 1, v17 : 1, v5 + -1*v3 + v3*v7 : 1}
WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): v5^2*v7*v17 + -1*v3^2*v17 + v3^2*v7*v17 + 2*v3*v5*v17 + -2*v3*v5*v7*v17 + -1*v3*v5*v7^2*v17 + -1*v5^2*v17 + v5^2*v7^2*v17 -> {v3 + -1*v5 : 1, v17 : 1, -1*v5 + v3 + v5*v7 + -1*v3*v7 + v5*v7^2 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [16: (-1)*v5^1 + v3 [19: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,9)@20, (1,10)@20, (3,7)@20, (3,9)@20, (3,10)@20, (7,7)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,9)@20, (9,9)@20, (9,10)@20], v5^1 + 0 [21: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (6,10)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [3: (1,1)@20, (3,3)@20, (10,10)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [5: (2,9)@20, (2,10)@20, (5,9)@20, (5,10)@20, (9,10)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [3: (2,7)@20, (5,7)@20, (7,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20], (1 + -1*v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (4,10)@20], (-1 + -1*v7)*v5^1 + v3*v7 [1: (0,10)@20], (-1 + v7 + v7^2)*v5^1 + v3 + -1*v3*v7 [1: (8,9)@20]]
	L: {16: 7, 0, 1, 3, 11, 5, 8, 14, 4, 6, 2, 13, 9, 12, 10, 15}
22 / v3
	P: [1: v3^1 + 0 [4: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [60: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,9)@20, (0,10)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,9)@20, (1,10)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,9)@20, (2,10)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,9)@20, (3,10)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,9)@20, (4,10)@20, (5,6)@20, (5,7)@20, (5,9)@20, (5,10)@20, (6,7)@20, (6,9)@20, (6,10)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,9)@20, (9,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [3: v7^1 + -1 [16: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (3,10)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (9,9)@20], v7^1 + 0 [18: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (1,10)@20, (4,4)@20, (6,7)@20, (9,10)@20], v7^1 + 1 [2: (4,6)@20, (7,9)@20]]
	L: {3: 1, 0, 2}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(8,8)@20, (8,10)@20, (4,8)@20, (3,3)@21, (1,8)@20, (2,8)@20, (3,8)@20, (1,3)@21, (0,7)@21, (3,7)@21, (2,2)@21, (0,8)@20, (2,11)@21, (1,1)@21, (6,8)@20, (0,3)@21, (0,1)@21, (2,3)@21, (7,7)@21, (1,7)@21, (2,7)@21, (2,8)@21, (0,10)@21, (4,5)@21, (0,11)@21, (11,11)@21, (4,4)@21, (10,11)@21, (9,10)@21, (5,8)@20, (6,8)@21, (0,2)@21, (0,0)@21, (2,4)@21, (2,14)@21, (3,5)@21, (5,5)@21, (2,6)@21, (15,15)@21, (7,8)@21, (4,7)@21, (3,4)@21, (4,8)@21, (0,9)@21, (9,13)@21, (5,9)@21, (7,10)@21, (3,10)@21, (8,10)@21, (6,10)@21, (7,11)@21, (3,11)@21, (5,11)@21, (4,11)@21, (6,11)@21, (13,13)@21, (5,12)@21, (2,9)@21, (2,12)@21, (7,13)@21, (1,13)@21, (11,13)@21, (8,13)@21, (4,6)@21, (0,14)@21, (1,2)@21, (11,14)@21, (14,14)@21, (4,14)@21, (1,4)@21, (0,5)@21, (1,5)@21, (8,15)@21, (4,15)@21, (0,6)@21, (1,6)@21, (3,6)@21, (12,13)@21, (9,11)@21, (6,6)@21, (0,0)@25, (0,8)@21, (1,8)@21, (3,8)@21, (5,8)@21, (2,5)@21, (8,8)@21, (7,9)@21, (0,1)@28, (1,9)@21, (3,9)@21, (0,0)@28, (0,0)@22, (4,9)@21, (6,9)@21, (9,9)@21, (1,10)@21, (5,10)@21, (2,13)@21, (4,10)@21, (8,9)@21, (2,10)@21, (10,14)@21, (10,10)@21, (1,11)@21, (1,2)@28, (10,13)@21, (8,11)@21, (9,14)@21, (7,12)@21, (0,12)@21, (1,12)@21, (3,12)@21, (0,2)@28, (11,12)@21, (8,12)@21, (4,12)@21, (0,0)@27, (6,12)@21, (1,1)@28, (12,12)@21, (10,12)@21, (0,13)@21, (2,2)@28, (3,13)@21, (5,13)@21, (12,14)@21, (4,13)@21, (6,13)@21, (5,6)@21, (7,14)@21, (1,14)@21, (3,14)@21, (6,7)@21, (5,14)@21, (5,7)@21, (8,14)@21, (0,4)@21, (6,14)@21, (13,14)@21, (7,15)@21, (0,15)@21, (1,15)@21, (3,15)@21, (11,15)@21, (0,0)@26, (5,15)@21, (0,0)@23, (14,15)@21, (6,15)@21, (2,15)@21, (13,15)@21, (9,15)@21, (12,15)@21, (10,15)@21, (9,12)@21]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v3*v7 + v5*v7 -> {v3 + -1*v5 : 1, v7 : 1}
WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v5*v17 + v3*v17 + -1*v3*v7^2*v17 + v5*v7^2*v17 -> {v3 + -1*v5 : 1, -1 + v7 : 1, 1 + v7 : 1, v17 : 1}
WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v5*v17 + v3*v17 + -1*v3*v7*v17 + v5*v7*v17 -> {v3 + -1*v5 : 1, -1 + v7 : 1, v17 : 1}
WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v3*v17 + v5*v17 -> {v3 + -1*v5 : 1, v17 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [17: (-1)*v5^1 + v3 [23: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (7,7)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,8)@20, (8,9)@20, (8,10)@20, (9,9)@20, (9,10)@20], v5^1 + 0 [22: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (4,8)@20, (6,10)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [3: (1,1)@20, (3,3)@20, (10,10)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [5: (2,9)@20, (2,10)@20, (5,9)@20, (5,10)@20, (9,10)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [4: (2,7)@20, (2,8)@20, (5,7)@20, (7,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20], (1 + -1*v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (4,10)@20], (-1 + -1*v7)*v5^1 + v3*v7 [1: (0,10)@20], (-1 + v7 + v7^2)*v5^1 + v3 + -1*v3*v7 [1: (8,9)@20], (1 + v7)*v5^1 + -1*v3 [1: (0,8)@20]]
	L: {17: 7, 0, 1, 3, 11, 5, 8, 14, 4, 6, 2, 16, 13, 9, 12, 10, 15}
22 / v3
	P: [1: v3^1 + 0 [4: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [66: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,8)@20, (0,9)@20, (0,10)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,8)@20, (2,9)@20, (2,10)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,8)@20, (4,9)@20, (4,10)@20, (5,6)@20, (5,7)@20, (5,9)@20, (5,10)@20, (6,7)@20, (6,9)@20, (6,10)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,9)@20, (8,10)@20, (9,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [3: v7^1 + -1 [18: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (3,8)@20, (3,10)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (8,10)@20, (9,9)@20], v7^1 + 0 [20: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (1,10)@20, (4,4)@20, (4,8)@20, (6,7)@20, (8,8)@20, (9,10)@20], v7^1 + 1 [3: (4,6)@20, (7,9)@20, (8,10)@20]]
	L: {3: 1, 0, 2}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(6,8)@20, (3,3)@21, (5,8)@20, (1,3)@21, (3,7)@21, (2,11)@21, (1,1)@21, (0,3)@21, (0,7)@21, (1,7)@21, (2,2)@21, (0,11)@21, (4,4)@21, (10,11)@21, (6,8)@21, (0,0)@21, (0,1)@21, (2,3)@21, (7,7)@21, (16,16)@21, (2,7)@21, (2,8)@21, (0,10)@21, (4,5)@21, (7,11)@21, (11,11)@21, (4,11)@21, (6,15)@21, (9,10)@21, (10,15)@21, (2,15)@21, (0,2)@21, (1,2)@21, (2,4)@21, (2,14)@21, (3,5)@21, (0,16)@21, (3,16)@21, (4,16)@21, (2,16)@21, (1,8)@21, (3,4)@21, (4,8)@21, (0,9)@21, (9,13)@21, (5,9)@21, (7,10)@21, (3,10)@21, (8,10)@21, (6,10)@21, (10,14)@21, (3,11)@21, (5,11)@21, (8,11)@21, (6,11)@21, (13,13)@21, (5,12)@21, (2,9)@21, (2,12)@21, (7,13)@21, (1,13)@21, (11,13)@21, (8,13)@21, (4,6)@21, (0,14)@21, (3,14)@21, (11,14)@21, (14,14)@21, (4,14)@21, (1,4)@21, (0,5)@21, (1,5)@21, (8,15)@21, (4,15)@21, (7,16)@21, (1,16)@21, (11,16)@21, (8,16)@21, (14,16)@21, (4,7)@21, (13,16)@21, (0,8)@21, (15,16)@21, (3,8)@21, (5,8)@21, (2,5)@21, (8,8)@21, (7,9)@21, (0,1)@28, (1,9)@21, (3,9)@21, (0,0)@28, (0,0)@22, (4,9)@21, (6,9)@21, (9,9)@21, (1,10)@21, (5,10)@21, (2,13)@21, (4,10)@21, (8,9)@21, (2,10)@21, (12,15)@21, (10,10)@21, (1,11)@21, (1,2)@28, (10,13)@21, (13,15)@21, (9,14)@21, (7,12)@21, (0,12)@21, (1,12)@21, (3,12)@21, (0,2)@28, (11,12)@21, (8,12)@21, (4,12)@21, (0,0)@27, (6,12)@21, (1,1)@28, (12,12)@21, (10,12)@21, (0,13)@21, (2,2)@28, (3,13)@21, (5,13)@21, (12,14)@21, (4,13)@21, (6,13)@21, (5,6)@21, (7,14)@21, (1,14)@21, (9,15)@21, (6,7)@21, (5,14)@21, (5,7)@21, (8,14)@21, (0,4)@21, (6,14)@21, (13,14)@21, (7,15)@21, (0,15)@21, (1,15)@21, (3,15)@21, (11,15)@21, (0,0)@26, (5,15)@21, (0,0)@23, (14,15)@21, (0,6)@21, (5,5)@21, (1,6)@21, (2,6)@21, (3,6)@21, (5,16)@21, (12,13)@21, (15,15)@21, (9,11)@21, (6,16)@21, (6,6)@21, (7,8)@21, (0,0)@25, (9,16)@21, (12,16)@21, (10,16)@21, (9,12)@21]

WARN  carl.core.factorize Factorization.h:32   sanitizeFactors(): The factorization had an incorrect sign, correct it.
WARN  carl.core.factorize Factorization.h:33   sanitizeFactors(): -1*v5*v7*v17 + v3*v17 + -1*v3*v7^2*v17 + -1*v5*v17 + v5*v7^2*v17 -> {v17 : 1, v5 + -1*v3 + v5*v7 + v3*v7^2 + -1*v5*v7^2 : 1}
INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 1000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [18: (-1)*v5^1 + v3 [23: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (7,7)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,8)@20, (8,9)@20, (8,10)@20, (9,9)@20, (9,10)@20], v5^1 + 0 [22: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (4,8)@20, (6,10)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [3: (1,1)@20, (3,3)@20, (10,10)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [5: (2,9)@20, (2,10)@20, (5,9)@20, (5,10)@20, (9,10)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [4: (2,7)@20, (2,8)@20, (5,7)@20, (7,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20], (1 + -1*v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (4,10)@20], (-1 + -1*v7)*v5^1 + v3*v7 [1: (0,10)@20], (-1 + v7 + v7^2)*v5^1 + v3 + -1*v3*v7 [1: (8,9)@20], (1 + v7)*v5^1 + -1*v3 [1: (0,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (6,8)@20]]
	L: {18: 7, 0, 1, 3, 11, 5, 8, 14, 4, 6, 2, 16, 13, 9, 17, 12, 10, 15}
22 / v3
	P: [1: v3^1 + 0 [4: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [67: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,8)@20, (0,9)@20, (0,10)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,8)@20, (2,9)@20, (2,10)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,8)@20, (4,9)@20, (4,10)@20, (5,6)@20, (5,7)@20, (5,9)@20, (5,10)@20, (6,7)@20, (6,8)@20, (6,9)@20, (6,10)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,9)@20, (8,10)@20, (9,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [3: v7^1 + -1 [18: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (3,8)@20, (3,10)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (8,10)@20, (9,9)@20], v7^1 + 0 [20: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (1,10)@20, (4,4)@20, (4,8)@20, (6,7)@20, (8,8)@20, (9,10)@20], v7^1 + 1 [3: (4,6)@20, (7,9)@20, (8,10)@20]]
	L: {3: 1, 0, 2}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(5,8)@20, (3,3)@21, (1,1)@21, (1,3)@21, (3,7)@21, (2,11)@21, (6,8)@21, (0,3)@21, (0,7)@21, (1,7)@21, (2,2)@21, (0,11)@21, (4,4)@21, (10,11)@21, (10,15)@21, (0,0)@21, (0,1)@21, (2,3)@21, (7,7)@21, (16,16)@21, (2,7)@21, (2,8)@21, (0,10)@21, (4,5)@21, (7,11)@21, (11,11)@21, (4,11)@21, (6,15)@21, (9,10)@21, (1,13)@21, (2,15)@21, (0,2)@21, (1,2)@21, (2,4)@21, (2,14)@21, (3,5)@21, (0,16)@21, (3,16)@21, (4,16)@21, (2,16)@21, (1,8)@21, (3,4)@21, (4,8)@21, (13,17)@21, (15,17)@21, (5,9)@21, (7,10)@21, (3,10)@21, (8,10)@21, (6,10)@21, (10,14)@21, (3,11)@21, (5,11)@21, (8,11)@21, (6,11)@21, (13,13)@21, (5,12)@21, (2,9)@21, (2,12)@21, (7,13)@21, (0,13)@21, (11,13)@21, (8,13)@21, (4,6)@21, (0,14)@21, (3,14)@21, (11,14)@21, (14,14)@21, (4,14)@21, (1,4)@21, (0,5)@21, (1,5)@21, (8,15)@21, (4,15)@21, (7,16)@21, (1,16)@21, (11,16)@21, (8,16)@21, (14,16)@21, (4,7)@21, (13,16)@21, (0,8)@21, (15,16)@21, (3,8)@21, (5,8)@21, (2,5)@21, (8,8)@21, (2,17)@21, (16,17)@21, (12,17)@21, (10,17)@21, (0,0)@28, (0,0)@22, (4,9)@21, (6,9)@21, (9,9)@21, (1,10)@21, (5,10)@21, (2,13)@21, (4,10)@21, (8,9)@21, (2,10)@21, (12,15)@21, (10,10)@21, (1,11)@21, (1,2)@28, (10,13)@21, (13,15)@21, (9,14)@21, (7,12)@21, (0,12)@21, (1,12)@21, (3,12)@21, (0,2)@28, (11,12)@21, (8,12)@21, (4,12)@21, (0,0)@27, (6,12)@21, (1,1)@28, (12,12)@21, (10,12)@21, (9,12)@21, (2,2)@28, (3,13)@21, (5,13)@21, (12,14)@21, (4,13)@21, (6,13)@21, (5,6)@21, (7,14)@21, (1,14)@21, (9,15)@21, (6,7)@21, (5,14)@21, (5,7)@21, (8,14)@21, (0,4)@21, (6,14)@21, (13,14)@21, (7,15)@21, (0,15)@21, (1,15)@21, (3,15)@21, (11,15)@21, (0,0)@26, (5,15)@21, (0,0)@23, (14,15)@21, (0,6)@21, (5,5)@21, (1,6)@21, (2,6)@21, (3,6)@21, (5,16)@21, (12,13)@21, (15,15)@21, (9,11)@21, (6,16)@21, (6,6)@21, (7,8)@21, (0,0)@25, (9,16)@21, (12,16)@21, (10,16)@21, (7,17)@21, (0,17)@21, (1,17)@21, (3,17)@21, (11,17)@21, (5,17)@21, (8,17)@21, (14,17)@21, (4,17)@21, (6,17)@21, (7,9)@21, (0,9)@21, (0,1)@28, (9,17)@21, (1,9)@21, (9,13)@21, (3,9)@21, (17,17)@21]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [18: (-1)*v5^1 + v3 [23: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (7,7)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,8)@20, (8,9)@20, (8,10)@20, (9,9)@20, (9,10)@20], v5^1 + 0 [22: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (4,8)@20, (6,10)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [3: (1,1)@20, (3,3)@20, (10,10)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [5: (2,9)@20, (2,10)@20, (5,9)@20, (5,10)@20, (9,10)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [5: (2,7)@20, (2,8)@20, (5,7)@20, (5,8)@20, (7,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20], (1 + -1*v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (4,10)@20], (-1 + -1*v7)*v5^1 + v3*v7 [1: (0,10)@20], (-1 + v7 + v7^2)*v5^1 + v3 + -1*v3*v7 [1: (8,9)@20], (1 + v7)*v5^1 + -1*v3 [1: (0,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (6,8)@20]]
	L: {18: 7, 0, 1, 3, 11, 5, 8, 14, 4, 6, 2, 16, 13, 9, 17, 12, 10, 15}
22 / v3
	P: [1: v3^1 + 0 [20: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20, (0,1)@21, (0,2)@21, (0,7)@21, (0,16)@21, (1,2)@21, (1,3)@21, (1,7)@21, (1,16)@21, (2,3)@21, (2,4)@21, (2,7)@21, (2,14)@21, (2,16)@21, (3,7)@21, (3,16)@21, (7,16)@21]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [68: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,8)@20, (0,9)@20, (0,10)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,8)@20, (2,9)@20, (2,10)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,8)@20, (4,9)@20, (4,10)@20, (5,6)@20, (5,7)@20, (5,8)@20, (5,9)@20, (5,10)@20, (6,7)@20, (6,8)@20, (6,9)@20, (6,10)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,9)@20, (8,10)@20, (9,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [4: v7^1 + -1 [21: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (3,8)@20, (3,10)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (8,10)@20, (9,9)@20, (2,2)@21, (2,4)@21, (7,16)@21], v7^1 + 0 [25: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (1,10)@20, (4,4)@20, (4,8)@20, (6,7)@20, (8,8)@20, (9,10)@20, (0,2)@21, (0,16)@21, (2,3)@21, (2,16)@21, (3,16)@21], v7^1 + 1 [6: (4,6)@20, (7,9)@20, (8,10)@20, (2,4)@21, (2,7)@21, (16,16)@21], v7^2 + 1 [1: (2,14)@21]]
	L: {4: 1, 0, 2, 3}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(2,11)@21, (4,16)@21, (4,4)@21, (4,14)@21, (4,7)@21, (4,11)@21, (6,8)@21, (14,14)@21, (14,16)@21, (3,4)@21, (2,8)@21, (0,11)@21, (11,11)@21, (10,11)@21, (10,15)@21, (11,14)@21, (1,4)@21, (5,5)@21, (11,16)@21, (1,8)@21, (4,8)@21, (15,17)@21, (0,10)@21, (4,5)@21, (7,11)@21, (3,11)@21, (8,11)@21, (6,15)@21, (9,10)@21, (1,13)@21, (2,15)@21, (0,14)@21, (3,14)@21, (0,4)@21, (0,5)@21, (3,5)@21, (0,6)@21, (2,6)@21, (8,16)@21, (7,8)@21, (0,8)@21, (3,8)@21, (8,8)@21, (13,17)@21, (10,17)@21, (5,9)@21, (7,10)@21, (3,10)@21, (8,10)@21, (6,10)@21, (10,14)@21, (1,11)@21, (5,11)@21, (17,17)@21, (6,11)@21, (13,13)@21, (5,12)@21, (2,9)@21, (2,12)@21, (7,13)@21, (0,13)@21, (11,13)@21, (8,13)@21, (4,6)@21, (7,14)@21, (1,14)@21, (6,7)@21, (8,14)@21, (6,14)@21, (7,15)@21, (1,15)@21, (1,5)@21, (8,15)@21, (4,15)@21, (3,17)@21, (1,6)@21, (5,16)@21, (15,15)@21, (6,16)@21, (6,6)@21, (13,16)@21, (10,16)@21, (15,16)@21, (4,17)@21, (5,8)@21, (2,5)@21, (11,17)@21, (2,17)@21, (16,17)@21, (12,17)@21, (14,17)@21, (0,0)@28, (0,0)@22, (4,9)@21, (6,9)@21, (9,9)@21, (1,10)@21, (5,10)@21, (2,13)@21, (4,10)@21, (8,9)@21, (2,10)@21, (12,15)@21, (10,10)@21, (1,9)@21, (1,2)@28, (10,13)@21, (13,15)@21, (9,14)@21, (7,12)@21, (0,12)@21, (1,12)@21, (3,12)@21, (0,2)@28, (11,12)@21, (8,12)@21, (4,12)@21, (0,0)@27, (6,12)@21, (1,1)@28, (12,12)@21, (10,12)@21, (9,12)@21, (2,2)@28, (3,13)@21, (5,13)@21, (12,14)@21, (4,13)@21, (6,13)@21, (5,6)@21, (0,1)@28, (1,17)@21, (9,15)@21, (9,17)@21, (5,14)@21, (5,7)@21, (12,16)@21, (9,13)@21, (9,16)@21, (13,14)@21, (7,17)@21, (0,15)@21, (3,9)@21, (3,15)@21, (11,15)@21, (0,0)@26, (5,15)@21, (0,0)@23, (14,15)@21, (0,17)@21, (7,9)@21, (0,0)@25, (0,9)@21, (3,6)@21, (6,17)@21, (12,13)@21, (8,17)@21, (9,11)@21, (5,17)@21, (1,3)@28, (0,3)@28, (2,3)@28, (3,3)@28]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [18: (-1)*v5^1 + v3 [23: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (7,7)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,8)@20, (8,9)@20, (8,10)@20, (9,9)@20, (9,10)@20], v5^1 + 0 [22: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (4,8)@20, (6,10)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [3: (1,1)@20, (3,3)@20, (10,10)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [5: (2,9)@20, (2,10)@20, (5,9)@20, (5,10)@20, (9,10)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [5: (2,7)@20, (2,8)@20, (5,7)@20, (5,8)@20, (7,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20], (1 + -1*v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (4,10)@20], (-1 + -1*v7)*v5^1 + v3*v7 [1: (0,10)@20], (-1 + v7 + v7^2)*v5^1 + v3 + -1*v3*v7 [1: (8,9)@20], (1 + v7)*v5^1 + -1*v3 [1: (0,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (6,8)@20]]
	L: {18: 7, 0, 1, 3, 11, 5, 8, 14, 4, 6, 2, 16, 13, 9, 17, 12, 10, 15}
22 / v3
	P: [1: v3^1 + 0 [21: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20, (0,1)@21, (0,2)@21, (0,7)@21, (0,16)@21, (1,2)@21, (1,3)@21, (1,7)@21, (1,16)@21, (2,3)@21, (2,4)@21, (2,7)@21, (2,11)@21, (2,14)@21, (2,16)@21, (3,7)@21, (3,16)@21, (7,16)@21]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [68: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,8)@20, (0,9)@20, (0,10)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,8)@20, (2,9)@20, (2,10)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,8)@20, (4,9)@20, (4,10)@20, (5,6)@20, (5,7)@20, (5,8)@20, (5,9)@20, (5,10)@20, (6,7)@20, (6,8)@20, (6,9)@20, (6,10)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,9)@20, (8,10)@20, (9,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [5: v7^1 + -1 [21: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (3,8)@20, (3,10)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (8,10)@20, (9,9)@20, (2,2)@21, (2,4)@21, (7,16)@21], v7^1 + 0 [26: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (1,10)@20, (4,4)@20, (4,8)@20, (6,7)@20, (8,8)@20, (9,10)@20, (0,2)@21, (0,16)@21, (2,3)@21, (2,11)@21, (2,16)@21, (3,16)@21], v7^1 + 1 [6: (4,6)@20, (7,9)@20, (8,10)@20, (2,4)@21, (2,7)@21, (16,16)@21], v7^2 + 1 [1: (2,14)@21], v7^1 + -2 [1: (2,11)@21]]
	L: {5: 1, 4, 0, 2, 3}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(4,16)@21, (4,14)@21, (4,4)@21, (14,16)@21, (4,7)@21, (4,11)@21, (6,8)@21, (14,14)@21, (11,16)@21, (3,4)@21, (2,8)@21, (0,11)@21, (11,11)@21, (10,11)@21, (10,15)@21, (11,14)@21, (1,4)@21, (5,5)@21, (8,16)@21, (1,8)@21, (4,8)@21, (15,17)@21, (0,10)@21, (4,5)@21, (7,11)@21, (3,11)@21, (8,11)@21, (6,15)@21, (9,10)@21, (1,13)@21, (2,15)@21, (0,14)@21, (3,14)@21, (0,4)@21, (0,5)@21, (3,5)@21, (0,6)@21, (2,6)@21, (6,16)@21, (7,8)@21, (0,8)@21, (3,8)@21, (8,8)@21, (13,17)@21, (10,17)@21, (5,9)@21, (7,10)@21, (3,10)@21, (8,10)@21, (6,10)@21, (10,14)@21, (1,11)@21, (5,11)@21, (17,17)@21, (6,11)@21, (13,13)@21, (5,12)@21, (2,9)@21, (2,12)@21, (7,13)@21, (0,13)@21, (11,13)@21, (8,13)@21, (4,6)@21, (7,14)@21, (1,14)@21, (6,7)@21, (8,14)@21, (6,14)@21, (7,15)@21, (1,15)@21, (1,5)@21, (8,15)@21, (4,15)@21, (3,17)@21, (1,6)@21, (5,16)@21, (15,15)@21, (5,17)@21, (6,6)@21, (13,16)@21, (10,16)@21, (15,16)@21, (4,17)@21, (5,8)@21, (2,5)@21, (11,17)@21, (2,17)@21, (16,17)@21, (12,17)@21, (14,17)@21, (0,0)@28, (0,0)@22, (4,9)@21, (6,9)@21, (9,9)@21, (1,10)@21, (5,10)@21, (2,13)@21, (4,10)@21, (8,9)@21, (2,10)@21, (12,15)@21, (10,10)@21, (1,9)@21, (1,2)@28, (10,13)@21, (13,15)@21, (9,14)@21, (7,12)@21, (0,12)@21, (1,12)@21, (3,12)@21, (0,2)@28, (11,12)@21, (8,12)@21, (4,12)@21, (0,0)@27, (6,12)@21, (1,1)@28, (12,12)@21, (10,12)@21, (9,12)@21, (2,2)@28, (3,13)@21, (5,13)@21, (12,14)@21, (4,13)@21, (6,13)@21, (5,6)@21, (0,1)@28, (1,17)@21, (9,15)@21, (9,17)@21, (5,14)@21, (5,7)@21, (12,16)@21, (9,13)@21, (9,16)@21, (13,14)@21, (7,17)@21, (0,15)@21, (3,9)@21, (3,15)@21, (11,15)@21, (0,0)@26, (5,15)@21, (0,0)@23, (14,15)@21, (0,17)@21, (7,9)@21, (0,0)@25, (0,9)@21, (3,6)@21, (6,17)@21, (12,13)@21, (8,17)@21, (9,11)@21, (3,3)@28, (1,3)@28, (0,3)@28, (2,3)@28, (1,4)@28, (4,4)@28, (0,4)@28, (2,4)@28, (3,4)@28]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [18: (-1)*v5^1 + v3 [23: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (7,7)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,8)@20, (8,9)@20, (8,10)@20, (9,9)@20, (9,10)@20], v5^1 + 0 [22: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (4,8)@20, (6,10)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [3: (1,1)@20, (3,3)@20, (10,10)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [5: (2,9)@20, (2,10)@20, (5,9)@20, (5,10)@20, (9,10)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [5: (2,7)@20, (2,8)@20, (5,7)@20, (5,8)@20, (7,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20], (1 + -1*v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (4,10)@20], (-1 + -1*v7)*v5^1 + v3*v7 [1: (0,10)@20], (-1 + v7 + v7^2)*v5^1 + v3 + -1*v3*v7 [1: (8,9)@20], (1 + v7)*v5^1 + -1*v3 [1: (0,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (6,8)@20]]
	L: {18: 7, 0, 1, 3, 11, 5, 8, 14, 4, 6, 2, 16, 13, 9, 17, 12, 10, 15}
22 / v3
	P: [1: v3^1 + 0 [24: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20, (0,1)@21, (0,2)@21, (0,7)@21, (0,16)@21, (1,2)@21, (1,3)@21, (1,7)@21, (1,16)@21, (2,3)@21, (2,4)@21, (2,7)@21, (2,11)@21, (2,14)@21, (2,16)@21, (3,7)@21, (3,16)@21, (4,11)@21, (4,14)@21, (4,16)@21, (7,16)@21]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [68: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,8)@20, (0,9)@20, (0,10)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,8)@20, (2,9)@20, (2,10)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,8)@20, (4,9)@20, (4,10)@20, (5,6)@20, (5,7)@20, (5,8)@20, (5,9)@20, (5,10)@20, (6,7)@20, (6,8)@20, (6,9)@20, (6,10)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,9)@20, (8,10)@20, (9,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [6: v7^1 + -1 [22: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (3,8)@20, (3,10)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (8,10)@20, (9,9)@20, (2,2)@21, (2,4)@21, (4,4)@21, (7,16)@21], v7^1 + 0 [27: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (1,10)@20, (4,4)@20, (4,8)@20, (6,7)@20, (8,8)@20, (9,10)@20, (0,2)@21, (0,16)@21, (2,3)@21, (2,11)@21, (2,16)@21, (3,16)@21, (4,14)@21], v7^1 + 1 [6: (4,6)@20, (7,9)@20, (8,10)@20, (2,4)@21, (2,7)@21, (16,16)@21], v7^2 + 1 [2: (2,14)@21, (4,16)@21], v7^1 + -2 [1: (2,11)@21], v7^2 + (-1)*v7^1 + 1 [1: (4,11)@21]]
	L: {6: 1, 4, 0, 2, 3, 5}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(4,7)@21, (14,16)@21, (11,11)@21, (14,14)@21, (3,4)@21, (3,11)@21, (6,8)@21, (11,14)@21, (11,16)@21, (4,8)@21, (2,8)@21, (0,11)@21, (1,11)@21, (10,11)@21, (10,15)@21, (3,14)@21, (1,4)@21, (5,5)@21, (8,16)@21, (1,8)@21, (8,8)@21, (15,17)@21, (0,10)@21, (4,5)@21, (7,11)@21, (5,11)@21, (8,11)@21, (6,15)@21, (9,10)@21, (1,13)@21, (2,15)@21, (0,14)@21, (1,14)@21, (0,4)@21, (0,5)@21, (3,5)@21, (0,6)@21, (2,6)@21, (6,16)@21, (7,8)@21, (0,8)@21, (3,8)@21, (2,5)@21, (13,17)@21, (10,17)@21, (5,9)@21, (7,10)@21, (3,10)@21, (8,10)@21, (6,10)@21, (10,14)@21, (10,10)@21, (10,13)@21, (17,17)@21, (6,11)@21, (13,13)@21, (5,12)@21, (2,9)@21, (2,12)@21, (7,13)@21, (0,13)@21, (11,13)@21, (8,13)@21, (4,6)@21, (7,14)@21, (1,17)@21, (6,7)@21, (8,14)@21, (6,14)@21, (7,15)@21, (1,15)@21, (1,5)@21, (8,15)@21, (4,15)@21, (3,17)@21, (1,6)@21, (5,16)@21, (15,15)@21, (5,17)@21, (6,6)@21, (13,16)@21, (10,16)@21, (15,16)@21, (4,17)@21, (5,8)@21, (2,4)@28, (11,17)@21, (2,17)@21, (16,17)@21, (12,17)@21, (14,17)@21, (0,0)@28, (0,0)@22, (4,9)@21, (6,9)@21, (9,9)@21, (1,10)@21, (5,10)@21, (2,13)@21, (4,10)@21, (8,9)@21, (2,10)@21, (12,15)@21, (3,4)@28, (1,9)@21, (1,2)@28, (0,4)@28, (13,15)@21, (9,14)@21, (7,12)@21, (0,12)@21, (1,12)@21, (3,12)@21, (0,2)@28, (11,12)@21, (8,12)@21, (4,12)@21, (0,0)@27, (6,12)@21, (1,1)@28, (12,12)@21, (10,12)@21, (9,12)@21, (2,2)@28, (3,13)@21, (5,13)@21, (12,14)@21, (4,13)@21, (6,13)@21, (5,6)@21, (0,1)@28, (4,4)@28, (9,15)@21, (9,17)@21, (5,14)@21, (5,7)@21, (12,16)@21, (9,13)@21, (9,16)@21, (13,14)@21, (7,17)@21, (0,15)@21, (3,9)@21, (3,15)@21, (11,15)@21, (0,0)@26, (5,15)@21, (0,0)@23, (14,15)@21, (0,17)@21, (7,9)@21, (0,0)@25, (0,9)@21, (3,6)@21, (6,17)@21, (12,13)@21, (8,17)@21, (9,11)@21, (3,3)@28, (1,3)@28, (0,3)@28, (2,3)@28, (1,4)@28, (1,5)@28, (4,5)@28, (0,5)@28, (2,5)@28, (3,5)@28, (5,5)@28]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [18: (-1)*v5^1 + v3 [23: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (7,7)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,8)@20, (8,9)@20, (8,10)@20, (9,9)@20, (9,10)@20], v5^1 + 0 [22: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (4,8)@20, (6,10)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [3: (1,1)@20, (3,3)@20, (10,10)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [5: (2,9)@20, (2,10)@20, (5,9)@20, (5,10)@20, (9,10)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [5: (2,7)@20, (2,8)@20, (5,7)@20, (5,8)@20, (7,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20], (1 + -1*v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (4,10)@20], (-1 + -1*v7)*v5^1 + v3*v7 [1: (0,10)@20], (-1 + v7 + v7^2)*v5^1 + v3 + -1*v3*v7 [1: (8,9)@20], (1 + v7)*v5^1 + -1*v3 [1: (0,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (6,8)@20]]
	L: {18: 7, 0, 1, 3, 11, 5, 8, 14, 4, 6, 2, 16, 13, 9, 17, 12, 10, 15}
22 / v3
	P: [1: v3^1 + 0 [28: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20, (0,1)@21, (0,2)@21, (0,7)@21, (0,16)@21, (1,2)@21, (1,3)@21, (1,7)@21, (1,16)@21, (2,3)@21, (2,4)@21, (2,7)@21, (2,11)@21, (2,14)@21, (2,16)@21, (3,7)@21, (3,16)@21, (4,7)@21, (4,11)@21, (4,14)@21, (4,16)@21, (7,16)@21, (11,14)@21, (11,16)@21, (14,16)@21]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [68: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,8)@20, (0,9)@20, (0,10)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,8)@20, (2,9)@20, (2,10)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,8)@20, (4,9)@20, (4,10)@20, (5,6)@20, (5,7)@20, (5,8)@20, (5,9)@20, (5,10)@20, (6,7)@20, (6,8)@20, (6,9)@20, (6,10)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,9)@20, (8,10)@20, (9,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [7: v7^1 + -1 [23: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (3,8)@20, (3,10)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (8,10)@20, (9,9)@20, (2,2)@21, (2,4)@21, (4,4)@21, (7,16)@21, (14,16)@21], v7^1 + 0 [28: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (1,10)@20, (4,4)@20, (4,8)@20, (6,7)@20, (8,8)@20, (9,10)@20, (0,2)@21, (0,16)@21, (2,3)@21, (2,11)@21, (2,16)@21, (3,16)@21, (4,14)@21, (11,16)@21], v7^1 + 1 [9: (4,6)@20, (7,9)@20, (8,10)@20, (2,4)@21, (2,7)@21, (4,7)@21, (14,14)@21, (14,16)@21, (16,16)@21], v7^2 + 1 [2: (2,14)@21, (4,16)@21], v7^1 + -2 [1: (2,11)@21], v7^2 + (-1)*v7^1 + 1 [1: (4,11)@21], v7^2 + v7^1 + -1 [1: (11,14)@21]]
	L: {7: 1, 4, 0, 2, 3, 5, 6}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(11,11)@21, (3,4)@21, (3,11)@21, (3,14)@21, (2,8)@21, (1,11)@21, (6,8)@21, (1,4)@21, (8,16)@21, (4,8)@21, (0,10)@21, (0,11)@21, (8,11)@21, (10,11)@21, (10,15)@21, (1,14)@21, (0,4)@21, (5,5)@21, (2,6)@21, (1,8)@21, (8,8)@21, (15,17)@21, (7,10)@21, (4,5)@21, (7,11)@21, (5,11)@21, (6,11)@21, (6,15)@21, (9,10)@21, (1,13)@21, (2,15)@21, (0,14)@21, (6,7)@21, (8,14)@21, (0,5)@21, (3,5)@21, (0,6)@21, (5,16)@21, (6,16)@21, (7,8)@21, (0,8)@21, (3,8)@21, (2,5)@21, (13,17)@21, (10,17)@21, (5,9)@21, (6,9)@21, (3,10)@21, (8,10)@21, (6,10)@21, (10,14)@21, (10,10)@21, (10,13)@21, (17,17)@21, (0,12)@21, (13,13)@21, (5,12)@21, (2,9)@21, (2,12)@21, (7,13)@21, (0,13)@21, (11,13)@21, (8,13)@21, (4,6)@21, (7,14)@21, (1,17)@21, (5,14)@21, (5,7)@21, (6,14)@21, (7,15)@21, (1,15)@21, (1,5)@21, (8,15)@21, (4,15)@21, (3,17)@21, (1,6)@21, (3,6)@21, (15,15)@21, (5,17)@21, (6,6)@21, (13,16)@21, (10,16)@21, (15,16)@21, (4,17)@21, (5,8)@21, (2,4)@28, (11,17)@21, (2,17)@21, (16,17)@21, (12,17)@21, (14,17)@21, (0,0)@28, (0,0)@22, (4,9)@21, (0,5)@28, (9,9)@21, (1,10)@21, (5,10)@21, (2,13)@21, (4,10)@21, (8,9)@21, (2,10)@21, (12,15)@21, (3,4)@28, (1,9)@21, (1,2)@28, (0,4)@28, (13,15)@21, (9,14)@21, (7,12)@21, (4,5)@28, (1,12)@21, (3,12)@21, (0,2)@28, (11,12)@21, (8,12)@21, (4,12)@21, (0,0)@27, (6,12)@21, (1,1)@28, (12,12)@21, (10,12)@21, (9,12)@21, (2,2)@28, (3,13)@21, (5,13)@21, (12,14)@21, (4,13)@21, (6,13)@21, (5,6)@21, (0,1)@28, (4,4)@28, (9,15)@21, (9,17)@21, (3,5)@28, (2,5)@28, (12,16)@21, (9,13)@21, (9,16)@21, (13,14)@21, (7,17)@21, (0,15)@21, (3,9)@21, (3,15)@21, (11,15)@21, (0,0)@26, (5,15)@21, (0,0)@23, (14,15)@21, (0,17)@21, (7,9)@21, (0,0)@25, (0,9)@21, (5,5)@28, (6,17)@21, (12,13)@21, (8,17)@21, (9,11)@21, (3,3)@28, (1,3)@28, (0,3)@28, (2,3)@28, (1,4)@28, (1,5)@28, (1,6)@28, (4,6)@28, (0,6)@28, (2,6)@28, (3,6)@28, (5,6)@28, (6,6)@28]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [18: (-1)*v5^1 + v3 [23: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (7,7)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,8)@20, (8,9)@20, (8,10)@20, (9,9)@20, (9,10)@20], v5^1 + 0 [22: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (4,8)@20, (6,10)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [3: (1,1)@20, (3,3)@20, (10,10)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [5: (2,9)@20, (2,10)@20, (5,9)@20, (5,10)@20, (9,10)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [5: (2,7)@20, (2,8)@20, (5,7)@20, (5,8)@20, (7,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20], (1 + -1*v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (4,10)@20], (-1 + -1*v7)*v5^1 + v3*v7 [1: (0,10)@20], (-1 + v7 + v7^2)*v5^1 + v3 + -1*v3*v7 [1: (8,9)@20], (1 + v7)*v5^1 + -1*v3 [1: (0,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (6,8)@20]]
	L: {18: 7, 0, 1, 3, 11, 5, 8, 14, 4, 6, 2, 16, 13, 9, 17, 12, 10, 15}
22 / v3
	P: [1: v3^1 + 0 [39: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20, (0,1)@21, (0,2)@21, (0,4)@21, (0,7)@21, (0,11)@21, (0,14)@21, (0,16)@21, (1,2)@21, (1,3)@21, (1,4)@21, (1,7)@21, (1,11)@21, (1,14)@21, (1,16)@21, (2,3)@21, (2,4)@21, (2,7)@21, (2,11)@21, (2,14)@21, (2,16)@21, (3,4)@21, (3,7)@21, (3,11)@21, (3,14)@21, (3,16)@21, (4,7)@21, (4,11)@21, (4,14)@21, (4,16)@21, (7,11)@21, (7,14)@21, (7,16)@21, (11,14)@21, (11,16)@21, (14,16)@21]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [68: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,8)@20, (0,9)@20, (0,10)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,8)@20, (2,9)@20, (2,10)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,8)@20, (4,9)@20, (4,10)@20, (5,6)@20, (5,7)@20, (5,8)@20, (5,9)@20, (5,10)@20, (6,7)@20, (6,8)@20, (6,9)@20, (6,10)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,9)@20, (8,10)@20, (9,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [8: v7^1 + -1 [25: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (3,8)@20, (3,10)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (8,10)@20, (9,9)@20, (1,11)@21, (2,2)@21, (2,4)@21, (4,4)@21, (7,14)@21, (7,16)@21, (14,16)@21], v7^1 + 0 [32: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (1,10)@20, (4,4)@20, (4,8)@20, (6,7)@20, (8,8)@20, (9,10)@20, (0,2)@21, (0,11)@21, (0,16)@21, (1,4)@21, (1,14)@21, (2,3)@21, (2,11)@21, (2,16)@21, (3,11)@21, (3,16)@21, (4,14)@21, (11,16)@21], v7^1 + 1 [9: (4,6)@20, (7,9)@20, (8,10)@20, (2,4)@21, (2,7)@21, (4,7)@21, (14,14)@21, (14,16)@21, (16,16)@21], v7^2 + 1 [2: (2,14)@21, (4,16)@21], v7^1 + -2 [1: (2,11)@21], v7^2 + (-1)*v7^1 + 1 [1: (4,11)@21], v7^2 + v7^1 + -1 [1: (11,14)@21], (2)*v7^1 + -1 [1: (7,11)@21]]
	L: {8: 1, 4, 0, 2, 7, 3, 5, 6}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(2,8)@21, (4,8)@21, (8,11)@21, (8,16)@21, (8,8)@21, (6,11)@21, (6,8)@21, (8,14)@21, (2,6)@21, (3,8)@21, (0,10)@21, (4,5)@21, (5,11)@21, (10,11)@21, (10,15)@21, (6,7)@21, (6,14)@21, (5,5)@21, (6,16)@21, (1,8)@21, (2,5)@21, (15,17)@21, (7,10)@21, (8,10)@21, (10,14)@21, (10,10)@21, (17,17)@21, (6,15)@21, (9,10)@21, (1,13)@21, (2,15)@21, (4,6)@21, (5,14)@21, (5,7)@21, (0,5)@21, (3,5)@21, (0,6)@21, (5,16)@21, (15,15)@21, (7,8)@21, (0,8)@21, (5,8)@21, (11,17)@21, (13,17)@21, (10,17)@21, (5,9)@21, (6,9)@21, (3,10)@21, (5,10)@21, (6,10)@21, (2,10)@21, (1,9)@21, (10,13)@21, (13,15)@21, (0,12)@21, (13,13)@21, (5,12)@21, (2,9)@21, (2,12)@21, (7,13)@21, (0,13)@21, (11,13)@21, (8,13)@21, (6,13)@21, (5,6)@21, (1,17)@21, (9,17)@21, (12,16)@21, (9,13)@21, (7,15)@21, (1,15)@21, (1,5)@21, (8,15)@21, (4,15)@21, (3,17)@21, (1,6)@21, (3,6)@21, (8,17)@21, (5,17)@21, (6,6)@21, (13,16)@21, (10,16)@21, (15,16)@21, (4,17)@21, (2,3)@28, (2,4)@28, (1,3)@28, (2,17)@21, (16,17)@21, (12,17)@21, (14,17)@21, (0,0)@28, (0,0)@22, (4,9)@21, (0,5)@28, (9,9)@21, (1,10)@21, (4,6)@28, (2,13)@21, (4,10)@21, (8,9)@21, (3,6)@28, (12,15)@21, (3,4)@28, (0,3)@28, (1,2)@28, (0,4)@28, (1,4)@28, (9,14)@21, (7,12)@21, (4,5)@28, (1,12)@21, (3,12)@21, (0,2)@28, (11,12)@21, (8,12)@21, (4,12)@21, (0,0)@27, (6,12)@21, (1,1)@28, (12,12)@21, (10,12)@21, (9,12)@21, (2,2)@28, (3,13)@21, (5,13)@21, (12,14)@21, (4,13)@21, (2,6)@28, (6,6)@28, (0,1)@28, (4,4)@28, (9,15)@21, (0,6)@28, (3,5)@28, (2,5)@28, (1,6)@28, (5,6)@28, (9,16)@21, (13,14)@21, (7,17)@21, (0,15)@21, (3,9)@21, (3,15)@21, (11,15)@21, (0,0)@26, (5,15)@21, (0,0)@23, (14,15)@21, (0,17)@21, (7,9)@21, (0,0)@25, (0,9)@21, (5,5)@28, (6,17)@21, (12,13)@21, (1,5)@28, (9,11)@21, (3,3)@28, (1,7)@28, (4,7)@28, (0,7)@28, (2,7)@28, (7,7)@28, (3,7)@28, (5,7)@28, (6,7)@28]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [18: (-1)*v5^1 + v3 [23: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (7,7)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,8)@20, (8,9)@20, (8,10)@20, (9,9)@20, (9,10)@20], v5^1 + 0 [22: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (4,8)@20, (6,10)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [3: (1,1)@20, (3,3)@20, (10,10)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [5: (2,9)@20, (2,10)@20, (5,9)@20, (5,10)@20, (9,10)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [5: (2,7)@20, (2,8)@20, (5,7)@20, (5,8)@20, (7,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20], (1 + -1*v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (4,10)@20], (-1 + -1*v7)*v5^1 + v3*v7 [1: (0,10)@20], (-1 + v7 + v7^2)*v5^1 + v3 + -1*v3*v7 [1: (8,9)@20], (1 + v7)*v5^1 + -1*v3 [1: (0,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (6,8)@20]]
	L: {18: 7, 0, 1, 3, 11, 5, 8, 14, 4, 6, 2, 16, 13, 9, 17, 12, 10, 15}
22 / v3
	P: [1: v3^1 + 0 [42: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20, (0,1)@21, (0,2)@21, (0,4)@21, (0,7)@21, (0,11)@21, (0,14)@21, (0,16)@21, (1,2)@21, (1,3)@21, (1,4)@21, (1,7)@21, (1,11)@21, (1,14)@21, (1,16)@21, (2,3)@21, (2,4)@21, (2,7)@21, (2,8)@21, (2,11)@21, (2,14)@21, (2,16)@21, (3,4)@21, (3,7)@21, (3,11)@21, (3,14)@21, (3,16)@21, (4,7)@21, (4,8)@21, (4,11)@21, (4,14)@21, (4,16)@21, (7,11)@21, (7,14)@21, (7,16)@21, (8,16)@21, (11,14)@21, (11,16)@21, (14,16)@21]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [68: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,8)@20, (0,9)@20, (0,10)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,8)@20, (2,9)@20, (2,10)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,8)@20, (4,9)@20, (4,10)@20, (5,6)@20, (5,7)@20, (5,8)@20, (5,9)@20, (5,10)@20, (6,7)@20, (6,8)@20, (6,9)@20, (6,10)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,9)@20, (8,10)@20, (9,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [9: v7^1 + -1 [25: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (3,8)@20, (3,10)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (8,10)@20, (9,9)@20, (1,11)@21, (2,2)@21, (2,4)@21, (4,4)@21, (7,14)@21, (7,16)@21, (14,16)@21], v7^1 + 0 [32: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (1,10)@20, (4,4)@20, (4,8)@20, (6,7)@20, (8,8)@20, (9,10)@20, (0,2)@21, (0,11)@21, (0,16)@21, (1,4)@21, (1,14)@21, (2,3)@21, (2,11)@21, (2,16)@21, (3,11)@21, (3,16)@21, (4,14)@21, (11,16)@21], v7^1 + 1 [9: (4,6)@20, (7,9)@20, (8,10)@20, (2,4)@21, (2,7)@21, (4,7)@21, (14,14)@21, (14,16)@21, (16,16)@21], v7^2 + 1 [2: (2,14)@21, (4,16)@21], v7^1 + -2 [1: (2,11)@21], v7^2 + (-1)*v7^1 + 1 [2: (2,8)@21, (4,11)@21], v7^2 + v7^1 + -1 [1: (11,14)@21], (2)*v7^1 + -1 [2: (4,8)@21, (7,11)@21], v7^2 + (-1)*v7^1 + -1 [1: (8,16)@21]]
	L: {9: 1, 4, 0, 2, 7, 3, 8, 5, 6}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(8,14)@21, (8,8)@21, (8,11)@21, (2,6)@21, (3,8)@21, (6,11)@21, (6,8)@21, (6,14)@21, (6,16)@21, (1,8)@21, (0,10)@21, (4,5)@21, (5,11)@21, (10,11)@21, (10,15)@21, (6,7)@21, (5,7)@21, (5,5)@21, (5,16)@21, (0,8)@21, (2,5)@21, (15,17)@21, (7,10)@21, (8,10)@21, (10,14)@21, (10,10)@21, (17,17)@21, (6,15)@21, (9,10)@21, (1,13)@21, (2,15)@21, (4,6)@21, (5,14)@21, (12,16)@21, (0,5)@21, (3,5)@21, (0,6)@21, (3,6)@21, (15,15)@21, (7,8)@21, (15,16)@21, (5,8)@21, (11,17)@21, (13,17)@21, (10,17)@21, (5,9)@21, (6,9)@21, (3,10)@21, (5,10)@21, (6,10)@21, (2,10)@21, (1,9)@21, (10,13)@21, (13,15)@21, (0,12)@21, (13,13)@21, (5,12)@21, (2,9)@21, (2,12)@21, (7,13)@21, (0,13)@21, (11,13)@21, (8,13)@21, (6,13)@21, (5,6)@21, (1,17)@21, (9,17)@21, (6,7)@28, (9,13)@21, (7,15)@21, (1,15)@21, (1,5)@21, (8,15)@21, (4,15)@21, (3,17)@21, (1,6)@21, (6,17)@21, (8,17)@21, (5,17)@21, (6,6)@21, (13,16)@21, (10,16)@21, (3,7)@28, (4,17)@21, (2,3)@28, (2,4)@28, (1,3)@28, (2,17)@21, (16,17)@21, (12,17)@21, (14,17)@21, (0,0)@28, (0,0)@22, (4,9)@21, (0,5)@28, (9,9)@21, (1,10)@21, (4,6)@28, (2,13)@21, (4,10)@21, (8,9)@21, (3,6)@28, (12,15)@21, (3,4)@28, (0,3)@28, (1,2)@28, (0,4)@28, (1,4)@28, (9,14)@21, (7,12)@21, (4,5)@28, (1,12)@21, (3,12)@21, (0,2)@28, (11,12)@21, (8,12)@21, (4,12)@21, (0,0)@27, (6,12)@21, (1,1)@28, (12,12)@21, (10,12)@21, (9,12)@21, (2,2)@28, (3,13)@21, (5,13)@21, (12,14)@21, (4,13)@21, (2,6)@28, (6,6)@28, (0,1)@28, (4,4)@28, (9,15)@21, (0,6)@28, (3,5)@28, (2,5)@28, (1,6)@28, (5,6)@28, (9,16)@21, (13,14)@21, (7,17)@21, (0,15)@21, (3,9)@21, (3,15)@21, (11,15)@21, (0,0)@26, (5,15)@21, (0,0)@23, (14,15)@21, (0,17)@21, (7,9)@21, (0,0)@25, (0,9)@21, (5,5)@28, (5,7)@28, (12,13)@21, (1,5)@28, (9,11)@21, (3,3)@28, (1,7)@28, (4,7)@28, (0,7)@28, (2,7)@28, (7,7)@28, (1,8)@28, (4,8)@28, (0,8)@28, (2,8)@28, (7,8)@28, (3,8)@28, (8,8)@28, (5,8)@28, (6,8)@28]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [18: (-1)*v5^1 + v3 [23: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (7,7)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,8)@20, (8,9)@20, (8,10)@20, (9,9)@20, (9,10)@20], v5^1 + 0 [22: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (4,8)@20, (6,10)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [3: (1,1)@20, (3,3)@20, (10,10)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [5: (2,9)@20, (2,10)@20, (5,9)@20, (5,10)@20, (9,10)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [5: (2,7)@20, (2,8)@20, (5,7)@20, (5,8)@20, (7,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20], (1 + -1*v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (4,10)@20], (-1 + -1*v7)*v5^1 + v3*v7 [1: (0,10)@20], (-1 + v7 + v7^2)*v5^1 + v3 + -1*v3*v7 [1: (8,9)@20], (1 + v7)*v5^1 + -1*v3 [1: (0,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (6,8)@20]]
	L: {18: 7, 0, 1, 3, 11, 5, 8, 14, 4, 6, 2, 16, 13, 9, 17, 12, 10, 15}
22 / v3
	P: [1: v3^1 + 0 [73: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20, (0,1)@21, (0,2)@21, (0,4)@21, (0,5)@21, (0,6)@21, (0,7)@21, (0,8)@21, (0,11)@21, (0,14)@21, (0,16)@21, (1,2)@21, (1,3)@21, (1,4)@21, (1,5)@21, (1,6)@21, (1,7)@21, (1,8)@21, (1,11)@21, (1,14)@21, (1,16)@21, (2,3)@21, (2,4)@21, (2,5)@21, (2,6)@21, (2,7)@21, (2,8)@21, (2,11)@21, (2,14)@21, (2,16)@21, (3,4)@21, (3,5)@21, (3,6)@21, (3,7)@21, (3,8)@21, (3,11)@21, (3,14)@21, (3,16)@21, (4,5)@21, (4,6)@21, (4,7)@21, (4,8)@21, (4,11)@21, (4,14)@21, (4,16)@21, (5,6)@21, (5,7)@21, (5,8)@21, (5,11)@21, (5,14)@21, (5,16)@21, (6,7)@21, (6,8)@21, (6,11)@21, (6,14)@21, (6,16)@21, (7,8)@21, (7,11)@21, (7,14)@21, (7,16)@21, (8,11)@21, (8,14)@21, (8,16)@21, (10,14)@21, (10,15)@21, (10,16)@21, (11,14)@21, (11,16)@21, (14,16)@21, (15,16)@21]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [68: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,8)@20, (0,9)@20, (0,10)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,8)@20, (2,9)@20, (2,10)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,8)@20, (4,9)@20, (4,10)@20, (5,6)@20, (5,7)@20, (5,8)@20, (5,9)@20, (5,10)@20, (6,7)@20, (6,8)@20, (6,9)@20, (6,10)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,9)@20, (8,10)@20, (9,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [10: v7^1 + -1 [35: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (3,8)@20, (3,10)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (8,10)@20, (9,9)@20, (1,5)@21, (1,6)@21, (1,8)@21, (1,11)@21, (2,2)@21, (2,4)@21, (4,4)@21, (5,6)@21, (5,8)@21, (5,11)@21, (6,8)@21, (6,11)@21, (7,14)@21, (7,16)@21, (8,11)@21, (10,15)@21, (14,16)@21], v7^1 + 0 [42: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (1,10)@20, (4,4)@20, (4,8)@20, (6,7)@20, (8,8)@20, (9,10)@20, (0,2)@21, (0,5)@21, (0,11)@21, (0,16)@21, (1,4)@21, (1,14)@21, (2,3)@21, (2,5)@21, (2,11)@21, (2,16)@21, (3,5)@21, (3,11)@21, (3,16)@21, (4,14)@21, (5,11)@21, (5,16)@21, (6,7)@21, (8,8)@21, (10,15)@21, (10,16)@21, (11,16)@21, (15,16)@21], v7^1 + 1 [11: (4,6)@20, (7,9)@20, (8,10)@20, (2,4)@21, (2,7)@21, (4,7)@21, (5,6)@21, (8,11)@21, (14,14)@21, (14,16)@21, (16,16)@21], v7^2 + 1 [2: (2,14)@21, (4,16)@21], v7^1 + -2 [4: (2,11)@21, (5,16)@21, (6,6)@21, (7,8)@21], v7^2 + (-1)*v7^1 + 1 [5: (2,8)@21, (4,11)@21, (5,14)@21, (6,16)@21, (10,10)@21], v7^2 + v7^1 + -1 [3: (4,5)@21, (11,14)@21, (15,15)@21], (2)*v7^1 + -1 [5: (4,8)@21, (5,5)@21, (6,14)@21, (7,11)@21, (10,16)@21], v7^2 + (-1)*v7^1 + -1 [2: (2,6)@21, (8,16)@21], v7^3 + v7^1 + -1 [1: (10,14)@21]]
	L: {10: 1, 4, 0, 2, 7, 3, 8, 5, 6, 9}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(10,11)@21, (4,15)@21, (2,15)@21, (14,15)@21, (3,15)@21, (2,10)@21, (6,15)@21, (1,15)@21, (8,15)@21, (13,16)@21, (0,10)@21, (6,10)@21, (10,13)@21, (13,13)@21, (8,13)@21, (6,13)@21, (0,15)@21, (5,15)@21, (6,17)@21, (7,7)@28, (4,17)@21, (15,17)@21, (7,10)@21, (8,10)@21, (4,10)@21, (9,11)@21, (17,17)@21, (5,12)@21, (9,10)@21, (1,13)@21, (5,13)@21, (4,13)@21, (1,17)@21, (12,16)@21, (7,15)@21, (11,15)@21, (3,17)@21, (12,13)@21, (8,17)@21, (2,7)@28, (3,7)@28, (2,3)@28, (11,17)@21, (13,17)@21, (10,17)@21, (5,9)@21, (6,9)@21, (3,10)@21, (5,10)@21, (7,17)@21, (12,15)@21, (1,9)@21, (0,4)@28, (13,15)@21, (0,12)@21, (3,12)@21, (11,12)@21, (2,9)@21, (2,12)@21, (7,13)@21, (0,13)@21, (11,13)@21, (12,14)@21, (3,3)@28, (0,1)@28, (9,15)@21, (9,17)@21, (6,7)@28, (9,13)@21, (13,14)@21, (3,9)@21, (2,8)@28, (1,7)@28, (0,17)@21, (0,0)@26, (0,9)@21, (0,0)@23, (7,9)@21, (5,17)@21, (4,7)@28, (5,7)@28, (7,8)@28, (5,5)@28, (3,8)@28, (0,8)@28, (2,4)@28, (1,3)@28, (2,17)@21, (16,17)@21, (12,17)@21, (14,17)@21, (0,0)@28, (0,0)@22, (4,9)@21, (0,5)@28, (9,9)@21, (1,10)@21, (4,6)@28, (2,13)@21, (1,5)@28, (8,9)@21, (3,6)@28, (0,7)@28, (3,4)@28, (0,3)@28, (1,2)@28, (6,8)@28, (1,4)@28, (9,14)@21, (7,12)@21, (4,5)@28, (1,12)@21, (0,0)@25, (0,2)@28, (5,6)@28, (8,12)@21, (4,12)@21, (0,0)@27, (6,12)@21, (1,1)@28, (12,12)@21, (10,12)@21, (9,12)@21, (2,2)@28, (3,13)@21, (5,8)@28, (9,16)@21, (1,8)@28, (2,6)@28, (6,6)@28, (4,8)@28, (4,4)@28, (8,8)@28, (0,6)@28, (3,5)@28, (2,5)@28, (1,6)@28, (1,9)@28, (4,9)@28, (0,9)@28, (2,9)@28, (7,9)@28, (3,9)@28, (8,9)@28, (5,9)@28, (6,9)@28, (9,9)@28]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [18: (-1)*v5^1 + v3 [23: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (7,7)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,8)@20, (8,9)@20, (8,10)@20, (9,9)@20, (9,10)@20], v5^1 + 0 [22: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (4,8)@20, (6,10)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [3: (1,1)@20, (3,3)@20, (10,10)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [5: (2,9)@20, (2,10)@20, (5,9)@20, (5,10)@20, (9,10)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [5: (2,7)@20, (2,8)@20, (5,7)@20, (5,8)@20, (7,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20], (1 + -1*v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (4,10)@20], (-1 + -1*v7)*v5^1 + v3*v7 [1: (0,10)@20], (-1 + v7 + v7^2)*v5^1 + v3 + -1*v3*v7 [1: (8,9)@20], (1 + v7)*v5^1 + -1*v3 [1: (0,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (6,8)@20]]
	L: {18: 7, 0, 1, 3, 11, 5, 8, 14, 4, 6, 2, 16, 13, 9, 17, 12, 10, 15}
22 / v3
	P: [1: v3^1 + 0 [80: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20, (0,1)@21, (0,2)@21, (0,4)@21, (0,5)@21, (0,6)@21, (0,7)@21, (0,8)@21, (0,11)@21, (0,14)@21, (0,16)@21, (1,2)@21, (1,3)@21, (1,4)@21, (1,5)@21, (1,6)@21, (1,7)@21, (1,8)@21, (1,11)@21, (1,14)@21, (1,16)@21, (2,3)@21, (2,4)@21, (2,5)@21, (2,6)@21, (2,7)@21, (2,8)@21, (2,10)@21, (2,11)@21, (2,14)@21, (2,15)@21, (2,16)@21, (3,4)@21, (3,5)@21, (3,6)@21, (3,7)@21, (3,8)@21, (3,11)@21, (3,14)@21, (3,16)@21, (4,5)@21, (4,6)@21, (4,7)@21, (4,8)@21, (4,10)@21, (4,11)@21, (4,14)@21, (4,15)@21, (4,16)@21, (5,6)@21, (5,7)@21, (5,8)@21, (5,11)@21, (5,14)@21, (5,16)@21, (6,7)@21, (6,8)@21, (6,10)@21, (6,11)@21, (6,14)@21, (6,15)@21, (6,16)@21, (7,8)@21, (7,11)@21, (7,14)@21, (7,16)@21, (8,11)@21, (8,14)@21, (8,16)@21, (10,11)@21, (10,14)@21, (10,15)@21, (10,16)@21, (11,14)@21, (11,16)@21, (14,16)@21, (15,16)@21]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [68: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,8)@20, (0,9)@20, (0,10)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,8)@20, (2,9)@20, (2,10)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,8)@20, (4,9)@20, (4,10)@20, (5,6)@20, (5,7)@20, (5,8)@20, (5,9)@20, (5,10)@20, (6,7)@20, (6,8)@20, (6,9)@20, (6,10)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,9)@20, (8,10)@20, (9,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [11: v7^1 + -1 [38: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (3,8)@20, (3,10)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (8,10)@20, (9,9)@20, (1,5)@21, (1,6)@21, (1,8)@21, (1,11)@21, (2,2)@21, (2,4)@21, (4,4)@21, (5,6)@21, (5,8)@21, (5,11)@21, (6,8)@21, (6,10)@21, (6,11)@21, (6,15)@21, (7,14)@21, (7,16)@21, (8,11)@21, (10,11)@21, (10,15)@21, (14,16)@21], v7^1 + 0 [45: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (1,10)@20, (4,4)@20, (4,8)@20, (6,7)@20, (8,8)@20, (9,10)@20, (0,2)@21, (0,5)@21, (0,11)@21, (0,16)@21, (1,4)@21, (1,14)@21, (2,3)@21, (2,5)@21, (2,10)@21, (2,11)@21, (2,15)@21, (2,16)@21, (3,5)@21, (3,11)@21, (3,16)@21, (4,14)@21, (5,11)@21, (5,16)@21, (6,7)@21, (8,8)@21, (10,11)@21, (10,15)@21, (10,16)@21, (11,16)@21, (15,16)@21], v7^1 + 1 [12: (4,6)@20, (7,9)@20, (8,10)@20, (2,4)@21, (2,7)@21, (4,7)@21, (5,6)@21, (6,10)@21, (8,11)@21, (14,14)@21, (14,16)@21, (16,16)@21], v7^2 + 1 [3: (2,14)@21, (4,16)@21, (6,15)@21], v7^1 + -2 [4: (2,11)@21, (5,16)@21, (6,6)@21, (7,8)@21], v7^2 + (-1)*v7^1 + 1 [5: (2,8)@21, (4,11)@21, (5,14)@21, (6,16)@21, (10,10)@21], v7^2 + v7^1 + -1 [3: (4,5)@21, (11,14)@21, (15,15)@21], (2)*v7^1 + -1 [6: (2,15)@21, (4,8)@21, (5,5)@21, (6,14)@21, (7,11)@21, (10,16)@21], v7^2 + (-1)*v7^1 + -1 [2: (2,6)@21, (8,16)@21], v7^3 + v7^1 + -1 [2: (4,15)@21, (10,14)@21], v7^3 + (-1)*v7^1 + 1 [1: (4,10)@21]]
	L: {11: 1, 4, 0, 2, 7, 3, 8, 5, 6, 10, 9}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(14,15)@21, (8,15)@21, (8,10)@21, (5,15)@21, (3,15)@21, (5,10)@21, (13,13)@21, (1,15)@21, (11,15)@21, (13,16)@21, (0,10)@21, (3,10)@21, (10,13)@21, (9,10)@21, (8,13)@21, (6,13)@21, (0,15)@21, (3,17)@21, (6,17)@21, (7,7)@28, (4,17)@21, (15,17)@21, (7,10)@21, (1,10)@21, (7,17)@21, (9,11)@21, (17,17)@21, (5,12)@21, (2,12)@21, (1,13)@21, (5,13)@21, (4,13)@21, (1,17)@21, (12,16)@21, (7,15)@21, (1,7)@28, (0,17)@21, (12,13)@21, (8,17)@21, (2,7)@28, (3,7)@28, (2,3)@28, (11,17)@21, (13,17)@21, (10,17)@21, (5,9)@21, (6,9)@21, (9,9)@21, (2,13)@21, (8,9)@21, (12,15)@21, (1,9)@21, (0,4)@28, (13,15)@21, (0,12)@21, (3,12)@21, (11,12)@21, (2,9)@21, (6,12)@21, (7,13)@21, (0,13)@21, (11,13)@21, (12,14)@21, (3,3)@28, (0,1)@28, (9,15)@21, (9,17)@21, (6,7)@28, (9,13)@21, (13,14)@21, (3,9)@21, (2,8)@28, (8,10)@28, (6,10)@28, (0,0)@26, (0,9)@21, (0,0)@23, (7,9)@21, (5,17)@21, (4,7)@28, (5,7)@28, (7,8)@28, (5,5)@28, (3,8)@28, (0,8)@28, (2,4)@28, (1,3)@28, (2,17)@21, (16,17)@21, (12,17)@21, (14,17)@21, (0,0)@28, (0,0)@22, (4,9)@21, (0,5)@28, (7,9)@28, (8,9)@28, (4,6)@28, (5,9)@28, (1,5)@28, (9,9)@28, (3,6)@28, (0,7)@28, (3,4)@28, (0,3)@28, (1,2)@28, (6,8)@28, (1,4)@28, (9,14)@21, (7,12)@21, (4,5)@28, (1,12)@21, (0,0)@25, (0,2)@28, (5,6)@28, (8,12)@21, (4,12)@21, (0,0)@27, (6,9)@28, (1,1)@28, (12,12)@21, (10,12)@21, (9,12)@21, (2,2)@28, (3,13)@21, (5,8)@28, (9,16)@21, (1,8)@28, (2,6)@28, (6,6)@28, (4,8)@28, (4,4)@28, (8,8)@28, (0,6)@28, (3,5)@28, (2,5)@28, (1,6)@28, (1,9)@28, (4,9)@28, (0,9)@28, (1,10)@28, (4,10)@28, (0,10)@28, (2,10)@28, (7,10)@28, (3,10)@28, (3,9)@28, (2,9)@28, (5,10)@28, (10,10)@28, (9,10)@28]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [18: (-1)*v5^1 + v3 [23: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (7,7)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,8)@20, (8,9)@20, (8,10)@20, (9,9)@20, (9,10)@20], v5^1 + 0 [22: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (4,8)@20, (6,10)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [3: (1,1)@20, (3,3)@20, (10,10)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [5: (2,9)@20, (2,10)@20, (5,9)@20, (5,10)@20, (9,10)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [5: (2,7)@20, (2,8)@20, (5,7)@20, (5,8)@20, (7,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20], (1 + -1*v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (4,10)@20], (-1 + -1*v7)*v5^1 + v3*v7 [1: (0,10)@20], (-1 + v7 + v7^2)*v5^1 + v3 + -1*v3*v7 [1: (8,9)@20], (1 + v7)*v5^1 + -1*v3 [1: (0,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (6,8)@20]]
	L: {18: 7, 0, 1, 3, 11, 5, 8, 14, 4, 6, 2, 16, 13, 9, 17, 12, 10, 15}
22 / v3
	P: [1: v3^1 + 0 [95: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20, (0,1)@21, (0,2)@21, (0,4)@21, (0,5)@21, (0,6)@21, (0,7)@21, (0,8)@21, (0,10)@21, (0,11)@21, (0,14)@21, (0,15)@21, (0,16)@21, (1,2)@21, (1,3)@21, (1,4)@21, (1,5)@21, (1,6)@21, (1,7)@21, (1,8)@21, (1,10)@21, (1,11)@21, (1,14)@21, (1,15)@21, (1,16)@21, (2,3)@21, (2,4)@21, (2,5)@21, (2,6)@21, (2,7)@21, (2,8)@21, (2,10)@21, (2,11)@21, (2,14)@21, (2,15)@21, (2,16)@21, (3,4)@21, (3,5)@21, (3,6)@21, (3,7)@21, (3,8)@21, (3,10)@21, (3,11)@21, (3,14)@21, (3,15)@21, (3,16)@21, (4,5)@21, (4,6)@21, (4,7)@21, (4,8)@21, (4,10)@21, (4,11)@21, (4,14)@21, (4,15)@21, (4,16)@21, (5,6)@21, (5,7)@21, (5,8)@21, (5,10)@21, (5,11)@21, (5,14)@21, (5,15)@21, (5,16)@21, (6,7)@21, (6,8)@21, (6,10)@21, (6,11)@21, (6,14)@21, (6,15)@21, (6,16)@21, (7,8)@21, (7,10)@21, (7,11)@21, (7,14)@21, (7,15)@21, (7,16)@21, (8,10)@21, (8,11)@21, (8,14)@21, (8,15)@21, (8,16)@21, (10,11)@21, (10,14)@21, (10,15)@21, (10,16)@21, (11,14)@21, (11,15)@21, (11,16)@21, (14,15)@21, (14,16)@21, (15,16)@21, (15,17)@21]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [68: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,8)@20, (0,9)@20, (0,10)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,8)@20, (2,9)@20, (2,10)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,8)@20, (4,9)@20, (4,10)@20, (5,6)@20, (5,7)@20, (5,8)@20, (5,9)@20, (5,10)@20, (6,7)@20, (6,8)@20, (6,9)@20, (6,10)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,9)@20, (8,10)@20, (9,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [12: v7^1 + -1 [46: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (3,8)@20, (3,10)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (8,10)@20, (9,9)@20, (1,5)@21, (1,6)@21, (1,8)@21, (1,10)@21, (1,11)@21, (1,15)@21, (2,2)@21, (2,4)@21, (4,4)@21, (5,6)@21, (5,8)@21, (5,10)@21, (5,11)@21, (5,15)@21, (6,8)@21, (6,10)@21, (6,11)@21, (6,15)@21, (7,14)@21, (7,16)@21, (8,10)@21, (8,11)@21, (8,15)@21, (10,11)@21, (10,15)@21, (11,15)@21, (14,16)@21, (15,17)@21], v7^1 + 0 [53: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (1,10)@20, (4,4)@20, (4,8)@20, (6,7)@20, (8,8)@20, (9,10)@20, (0,2)@21, (0,5)@21, (0,10)@21, (0,11)@21, (0,15)@21, (0,16)@21, (1,4)@21, (1,14)@21, (2,3)@21, (2,5)@21, (2,10)@21, (2,11)@21, (2,15)@21, (2,16)@21, (3,5)@21, (3,10)@21, (3,11)@21, (3,15)@21, (3,16)@21, (4,14)@21, (5,10)@21, (5,11)@21, (5,15)@21, (5,16)@21, (6,7)@21, (8,8)@21, (10,11)@21, (10,15)@21, (10,16)@21, (11,15)@21, (11,16)@21, (15,16)@21, (15,17)@21], v7^1 + 1 [15: (4,6)@20, (7,9)@20, (8,10)@20, (2,4)@21, (2,7)@21, (4,7)@21, (5,6)@21, (5,10)@21, (6,10)@21, (8,11)@21, (8,15)@21, (11,15)@21, (14,14)@21, (14,16)@21, (16,16)@21], v7^2 + 1 [4: (2,14)@21, (4,16)@21, (6,15)@21, (8,10)@21], v7^1 + -2 [4: (2,11)@21, (5,16)@21, (6,6)@21, (7,8)@21], v7^2 + (-1)*v7^1 + 1 [6: (2,8)@21, (4,11)@21, (5,14)@21, (6,16)@21, (7,15)@21, (10,10)@21], v7^2 + v7^1 + -1 [4: (4,5)@21, (7,10)@21, (11,14)@21, (15,15)@21], (2)*v7^1 + -1 [6: (2,15)@21, (4,8)@21, (5,5)@21, (6,14)@21, (7,11)@21, (10,16)@21], v7^2 + (-1)*v7^1 + -1 [2: (2,6)@21, (8,16)@21], v7^3 + v7^1 + -1 [2: (4,15)@21, (10,14)@21], v7^3 + (-1)*v7^1 + 1 [2: (4,10)@21, (14,15)@21], v7^2 + v7^1 + 1 [1: (15,17)@21]]
	L: {12: 1, 4, 0, 2, 7, 3, 8, 5, 6, 11, 10, 9}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(10,17)@21, (13,17)@21, (10,13)@21, (13,14)@21, (13,16)@21, (17,17)@21, (13,13)@21, (6,13)@21, (6,17)@21, (4,17)@21, (16,17)@21, (2,13)@21, (13,15)@21, (9,10)@21, (8,13)@21, (4,13)@21, (12,16)@21, (3,17)@21, (8,17)@21, (7,7)@28, (11,17)@21, (2,17)@21, (6,9)@21, (9,9)@21, (7,17)@21, (9,11)@21, (9,14)@21, (5,12)@21, (2,12)@21, (1,13)@21, (5,13)@21, (0,1)@28, (1,17)@21, (9,13)@21, (3,9)@21, (1,7)@28, (0,17)@21, (12,13)@21, (5,17)@21, (2,7)@28, (3,7)@28, (2,3)@28, (2,4)@28, (0,9)@28, (14,17)@21, (5,9)@21, (4,9)@21, (8,9)@28, (4,6)@28, (8,9)@21, (12,15)@21, (1,9)@21, (0,4)@28, (1,4)@28, (0,12)@21, (3,12)@21, (11,12)@21, (2,9)@21, (6,12)@21, (7,13)@21, (0,13)@21, (11,13)@21, (12,14)@21, (3,3)@28, (6,6)@28, (9,15)@21, (9,17)@21, (6,7)@28, (0,11)@28, (7,11)@28, (8,11)@28, (6,11)@28, (11,11)@28, (9,11)@28, (0,0)@26, (0,9)@21, (0,0)@23, (7,9)@21, (9,10)@28, (4,7)@28, (5,7)@28, (7,8)@28, (5,5)@28, (3,8)@28, (0,8)@28, (1,6)@28, (1,3)@28, (4,9)@28, (1,9)@28, (12,17)@21, (4,10)@28, (0,0)@28, (0,0)@22, (3,9)@28, (0,5)@28, (7,9)@28, (2,9)@28, (10,10)@28, (5,9)@28, (1,5)@28, (9,9)@28, (3,6)@28, (0,7)@28, (3,4)@28, (0,3)@28, (1,2)@28, (6,8)@28, (0,10)@28, (7,10)@28, (7,12)@21, (4,5)@28, (1,12)@21, (0,0)@25, (0,2)@28, (5,6)@28, (8,12)@21, (4,12)@21, (0,0)@27, (6,9)@28, (1,1)@28, (12,12)@21, (10,12)@21, (9,12)@21, (2,2)@28, (3,13)@21, (5,8)@28, (9,16)@21, (1,8)@28, (2,6)@28, (1,10)@28, (4,8)@28, (4,4)@28, (8,8)@28, (0,6)@28, (3,5)@28, (2,5)@28, (1,11)@28, (2,10)@28, (4,11)@28, (5,10)@28, (2,11)@28, (3,10)@28, (3,11)@28, (2,8)@28, (5,11)@28, (8,10)@28, (10,11)@28, (6,10)@28]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [18: (-1)*v5^1 + v3 [23: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (7,7)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,8)@20, (8,9)@20, (8,10)@20, (9,9)@20, (9,10)@20], v5^1 + 0 [22: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (4,8)@20, (6,10)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [3: (1,1)@20, (3,3)@20, (10,10)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [5: (2,9)@20, (2,10)@20, (5,9)@20, (5,10)@20, (9,10)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [5: (2,7)@20, (2,8)@20, (5,7)@20, (5,8)@20, (7,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20], (1 + -1*v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (4,10)@20], (-1 + -1*v7)*v5^1 + v3*v7 [1: (0,10)@20], (-1 + v7 + v7^2)*v5^1 + v3 + -1*v3*v7 [1: (8,9)@20], (1 + v7)*v5^1 + -1*v3 [1: (0,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (6,8)@20]]
	L: {18: 7, 0, 1, 3, 11, 5, 8, 14, 4, 6, 2, 16, 13, 9, 17, 12, 10, 15}
22 / v3
	P: [1: v3^1 + 0 [100: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20, (0,1)@21, (0,2)@21, (0,4)@21, (0,5)@21, (0,6)@21, (0,7)@21, (0,8)@21, (0,10)@21, (0,11)@21, (0,14)@21, (0,15)@21, (0,16)@21, (1,2)@21, (1,3)@21, (1,4)@21, (1,5)@21, (1,6)@21, (1,7)@21, (1,8)@21, (1,10)@21, (1,11)@21, (1,14)@21, (1,15)@21, (1,16)@21, (2,3)@21, (2,4)@21, (2,5)@21, (2,6)@21, (2,7)@21, (2,8)@21, (2,10)@21, (2,11)@21, (2,14)@21, (2,15)@21, (2,16)@21, (3,4)@21, (3,5)@21, (3,6)@21, (3,7)@21, (3,8)@21, (3,10)@21, (3,11)@21, (3,14)@21, (3,15)@21, (3,16)@21, (4,5)@21, (4,6)@21, (4,7)@21, (4,8)@21, (4,10)@21, (4,11)@21, (4,14)@21, (4,15)@21, (4,16)@21, (5,6)@21, (5,7)@21, (5,8)@21, (5,10)@21, (5,11)@21, (5,14)@21, (5,15)@21, (5,16)@21, (6,7)@21, (6,8)@21, (6,10)@21, (6,11)@21, (6,14)@21, (6,15)@21, (6,16)@21, (7,8)@21, (7,10)@21, (7,11)@21, (7,14)@21, (7,15)@21, (7,16)@21, (8,10)@21, (8,11)@21, (8,14)@21, (8,15)@21, (8,16)@21, (10,11)@21, (10,13)@21, (10,14)@21, (10,15)@21, (10,16)@21, (10,17)@21, (11,14)@21, (11,15)@21, (11,16)@21, (13,15)@21, (13,16)@21, (13,17)@21, (14,15)@21, (14,16)@21, (15,16)@21, (15,17)@21]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [68: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,8)@20, (0,9)@20, (0,10)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,8)@20, (2,9)@20, (2,10)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,8)@20, (4,9)@20, (4,10)@20, (5,6)@20, (5,7)@20, (5,8)@20, (5,9)@20, (5,10)@20, (6,7)@20, (6,8)@20, (6,9)@20, (6,10)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,9)@20, (8,10)@20, (9,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [13: v7^1 + -1 [50: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (3,8)@20, (3,10)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (8,10)@20, (9,9)@20, (1,5)@21, (1,6)@21, (1,8)@21, (1,10)@21, (1,11)@21, (1,15)@21, (2,2)@21, (2,4)@21, (4,4)@21, (5,6)@21, (5,8)@21, (5,10)@21, (5,11)@21, (5,15)@21, (6,8)@21, (6,10)@21, (6,11)@21, (6,15)@21, (7,14)@21, (7,16)@21, (8,10)@21, (8,11)@21, (8,15)@21, (10,11)@21, (10,13)@21, (10,15)@21, (10,17)@21, (11,15)@21, (13,15)@21, (13,17)@21, (14,16)@21, (15,17)@21], v7^1 + 0 [58: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (1,10)@20, (4,4)@20, (4,8)@20, (6,7)@20, (8,8)@20, (9,10)@20, (0,2)@21, (0,5)@21, (0,10)@21, (0,11)@21, (0,15)@21, (0,16)@21, (1,4)@21, (1,14)@21, (2,3)@21, (2,5)@21, (2,10)@21, (2,11)@21, (2,15)@21, (2,16)@21, (3,5)@21, (3,10)@21, (3,11)@21, (3,15)@21, (3,16)@21, (4,14)@21, (5,10)@21, (5,11)@21, (5,15)@21, (5,16)@21, (6,7)@21, (8,8)@21, (10,11)@21, (10,13)@21, (10,15)@21, (10,16)@21, (10,17)@21, (11,15)@21, (11,16)@21, (13,15)@21, (13,16)@21, (13,17)@21, (15,16)@21, (15,17)@21], v7^1 + 1 [16: (4,6)@20, (7,9)@20, (8,10)@20, (2,4)@21, (2,7)@21, (4,7)@21, (5,6)@21, (5,10)@21, (6,10)@21, (8,11)@21, (8,15)@21, (11,15)@21, (13,17)@21, (14,14)@21, (14,16)@21, (16,16)@21], v7^2 + 1 [4: (2,14)@21, (4,16)@21, (6,15)@21, (8,10)@21], v7^1 + -2 [4: (2,11)@21, (5,16)@21, (6,6)@21, (7,8)@21], v7^2 + (-1)*v7^1 + 1 [6: (2,8)@21, (4,11)@21, (5,14)@21, (6,16)@21, (7,15)@21, (10,10)@21], v7^2 + v7^1 + -1 [7: (4,5)@21, (7,10)@21, (10,17)@21, (11,14)@21, (13,13)@21, (13,15)@21, (15,15)@21], (2)*v7^1 + -1 [6: (2,15)@21, (4,8)@21, (5,5)@21, (6,14)@21, (7,11)@21, (10,16)@21], v7^2 + (-1)*v7^1 + -1 [3: (2,6)@21, (8,16)@21, (17,17)@21], v7^3 + v7^1 + -1 [2: (4,15)@21, (10,14)@21], v7^3 + (-1)*v7^1 + 1 [2: (4,10)@21, (14,15)@21], v7^2 + v7^1 + 1 [2: (10,13)@21, (15,17)@21], v7^2 + -2 [1: (13,16)@21]]
	L: {13: 1, 4, 0, 2, 7, 12, 3, 8, 5, 6, 11, 10, 9}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(13,14)@21, (16,17)@21, (2,13)@21, (6,17)@21, (2,17)@21, (7,17)@21, (8,13)@21, (6,13)@21, (8,17)@21, (4,17)@21, (14,17)@21, (12,15)@21, (9,14)@21, (9,10)@21, (5,13)@21, (4,13)@21, (12,16)@21, (3,17)@21, (5,17)@21, (7,7)@28, (11,17)@21, (12,17)@21, (6,9)@21, (9,9)@21, (8,9)@21, (9,11)@21, (0,12)@21, (5,12)@21, (2,12)@21, (1,13)@21, (11,13)@21, (0,1)@28, (1,17)@21, (9,13)@21, (3,9)@21, (1,7)@28, (0,17)@21, (12,13)@21, (7,9)@21, (2,7)@28, (3,7)@28, (2,3)@28, (2,4)@28, (0,9)@28, (5,11)@28, (5,9)@21, (4,9)@21, (8,9)@28, (4,6)@28, (2,8)@28, (0,7)@28, (1,9)@21, (0,4)@28, (1,4)@28, (7,12)@21, (3,12)@21, (11,12)@21, (2,9)@21, (6,12)@21, (7,13)@21, (0,13)@21, (3,13)@21, (12,14)@21, (3,3)@28, (6,6)@28, (9,15)@21, (9,17)@21, (6,7)@28, (0,11)@28, (7,11)@28, (4,12)@28, (2,12)@28, (12,12)@28, (3,12)@28, (0,0)@26, (0,9)@21, (0,0)@23, (3,11)@28, (9,10)@28, (4,7)@28, (5,7)@28, (7,8)@28, (5,5)@28, (3,8)@28, (0,8)@28, (1,6)@28, (1,3)@28, (4,9)@28, (1,9)@28, (3,10)@28, (4,10)@28, (0,0)@28, (0,0)@22, (3,9)@28, (0,5)@28, (7,9)@28, (2,9)@28, (10,10)@28, (5,9)@28, (1,5)@28, (9,9)@28, (3,6)@28, (10,11)@28, (3,4)@28, (0,3)@28, (1,2)@28, (6,8)@28, (0,10)@28, (7,10)@28, (6,10)@28, (4,5)@28, (1,12)@21, (0,0)@25, (0,2)@28, (5,6)@28, (8,12)@21, (4,12)@21, (0,0)@27, (6,9)@28, (1,1)@28, (12,12)@21, (10,12)@21, (9,12)@21, (2,2)@28, (8,10)@28, (5,8)@28, (9,16)@21, (1,8)@28, (2,6)@28, (1,10)@28, (4,8)@28, (4,4)@28, (8,8)@28, (0,6)@28, (3,5)@28, (2,5)@28, (1,11)@28, (2,10)@28, (4,11)@28, (5,10)@28, (2,11)@28, (8,11)@28, (1,12)@28, (6,11)@28, (0,12)@28, (11,11)@28, (7,12)@28, (9,11)@28, (8,12)@28, (5,12)@28, (6,12)@28, (11,12)@28, (10,12)@28, (9,12)@28]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [18: (-1)*v5^1 + v3 [23: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (7,7)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,8)@20, (8,9)@20, (8,10)@20, (9,9)@20, (9,10)@20], v5^1 + 0 [22: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (4,8)@20, (6,10)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [3: (1,1)@20, (3,3)@20, (10,10)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [5: (2,9)@20, (2,10)@20, (5,9)@20, (5,10)@20, (9,10)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [5: (2,7)@20, (2,8)@20, (5,7)@20, (5,8)@20, (7,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20], (1 + -1*v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (4,10)@20], (-1 + -1*v7)*v5^1 + v3*v7 [1: (0,10)@20], (-1 + v7 + v7^2)*v5^1 + v3 + -1*v3*v7 [1: (8,9)@20], (1 + v7)*v5^1 + -1*v3 [1: (0,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (6,8)@20]]
	L: {18: 7, 0, 1, 3, 11, 5, 8, 14, 4, 6, 2, 16, 13, 9, 17, 12, 10, 15}
22 / v3
	P: [1: v3^1 + 0 [106: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20, (0,1)@21, (0,2)@21, (0,4)@21, (0,5)@21, (0,6)@21, (0,7)@21, (0,8)@21, (0,10)@21, (0,11)@21, (0,14)@21, (0,15)@21, (0,16)@21, (1,2)@21, (1,3)@21, (1,4)@21, (1,5)@21, (1,6)@21, (1,7)@21, (1,8)@21, (1,10)@21, (1,11)@21, (1,14)@21, (1,15)@21, (1,16)@21, (2,3)@21, (2,4)@21, (2,5)@21, (2,6)@21, (2,7)@21, (2,8)@21, (2,10)@21, (2,11)@21, (2,13)@21, (2,14)@21, (2,15)@21, (2,16)@21, (2,17)@21, (3,4)@21, (3,5)@21, (3,6)@21, (3,7)@21, (3,8)@21, (3,10)@21, (3,11)@21, (3,14)@21, (3,15)@21, (3,16)@21, (4,5)@21, (4,6)@21, (4,7)@21, (4,8)@21, (4,10)@21, (4,11)@21, (4,14)@21, (4,15)@21, (4,16)@21, (5,6)@21, (5,7)@21, (5,8)@21, (5,10)@21, (5,11)@21, (5,14)@21, (5,15)@21, (5,16)@21, (6,7)@21, (6,8)@21, (6,10)@21, (6,11)@21, (6,13)@21, (6,14)@21, (6,15)@21, (6,16)@21, (6,17)@21, (7,8)@21, (7,10)@21, (7,11)@21, (7,14)@21, (7,15)@21, (7,16)@21, (8,10)@21, (8,11)@21, (8,14)@21, (8,15)@21, (8,16)@21, (10,11)@21, (10,13)@21, (10,14)@21, (10,15)@21, (10,16)@21, (10,17)@21, (11,14)@21, (11,15)@21, (11,16)@21, (13,14)@21, (13,15)@21, (13,16)@21, (13,17)@21, (14,15)@21, (14,16)@21, (15,16)@21, (15,17)@21, (16,17)@21]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [68: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,8)@20, (0,9)@20, (0,10)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,8)@20, (2,9)@20, (2,10)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,8)@20, (4,9)@20, (4,10)@20, (5,6)@20, (5,7)@20, (5,8)@20, (5,9)@20, (5,10)@20, (6,7)@20, (6,8)@20, (6,9)@20, (6,10)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,9)@20, (8,10)@20, (9,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [14: v7^1 + -1 [52: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (3,8)@20, (3,10)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (8,10)@20, (9,9)@20, (1,5)@21, (1,6)@21, (1,8)@21, (1,10)@21, (1,11)@21, (1,15)@21, (2,2)@21, (2,4)@21, (4,4)@21, (5,6)@21, (5,8)@21, (5,10)@21, (5,11)@21, (5,15)@21, (6,8)@21, (6,10)@21, (6,11)@21, (6,13)@21, (6,15)@21, (6,17)@21, (7,14)@21, (7,16)@21, (8,10)@21, (8,11)@21, (8,15)@21, (10,11)@21, (10,13)@21, (10,15)@21, (10,17)@21, (11,15)@21, (13,15)@21, (13,17)@21, (14,16)@21, (15,17)@21], v7^1 + 0 [61: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (1,10)@20, (4,4)@20, (4,8)@20, (6,7)@20, (8,8)@20, (9,10)@20, (0,2)@21, (0,5)@21, (0,10)@21, (0,11)@21, (0,15)@21, (0,16)@21, (1,4)@21, (1,14)@21, (2,3)@21, (2,5)@21, (2,10)@21, (2,11)@21, (2,13)@21, (2,15)@21, (2,16)@21, (2,17)@21, (3,5)@21, (3,10)@21, (3,11)@21, (3,15)@21, (3,16)@21, (4,14)@21, (5,10)@21, (5,11)@21, (5,15)@21, (5,16)@21, (6,7)@21, (8,8)@21, (10,11)@21, (10,13)@21, (10,15)@21, (10,16)@21, (10,17)@21, (11,15)@21, (11,16)@21, (13,15)@21, (13,16)@21, (13,17)@21, (15,16)@21, (15,17)@21, (16,17)@21], v7^1 + 1 [16: (4,6)@20, (7,9)@20, (8,10)@20, (2,4)@21, (2,7)@21, (4,7)@21, (5,6)@21, (5,10)@21, (6,10)@21, (8,11)@21, (8,15)@21, (11,15)@21, (13,17)@21, (14,14)@21, (14,16)@21, (16,16)@21], v7^2 + 1 [4: (2,14)@21, (4,16)@21, (6,15)@21, (8,10)@21], v7^1 + -2 [4: (2,11)@21, (5,16)@21, (6,6)@21, (7,8)@21], v7^2 + (-1)*v7^1 + 1 [6: (2,8)@21, (4,11)@21, (5,14)@21, (6,16)@21, (7,15)@21, (10,10)@21], v7^2 + v7^1 + -1 [7: (4,5)@21, (7,10)@21, (10,17)@21, (11,14)@21, (13,13)@21, (13,15)@21, (15,15)@21], (2)*v7^1 + -1 [6: (2,15)@21, (4,8)@21, (5,5)@21, (6,14)@21, (7,11)@21, (10,16)@21], v7^2 + (-1)*v7^1 + -1 [3: (2,6)@21, (8,16)@21, (17,17)@21], v7^3 + v7^1 + -1 [2: (4,15)@21, (10,14)@21], v7^3 + (-1)*v7^1 + 1 [2: (4,10)@21, (14,15)@21], v7^2 + v7^1 + 1 [2: (10,13)@21, (15,17)@21], v7^2 + -2 [2: (2,17)@21, (13,16)@21], (2)*v7^1 + 1 [1: (6,13)@21]]
	L: {14: 1, 4, 0, 2, 7, 13, 12, 3, 8, 5, 6, 11, 10, 9}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(4,17)@21, (4,13)@21, (8,13)@21, (8,17)@21, (14,17)@21, (7,17)@21, (5,13)@21, (1,17)@21, (5,17)@21, (11,17)@21, (12,17)@21, (12,15)@21, (9,14)@21, (9,10)@21, (11,13)@21, (9,15)@21, (12,16)@21, (3,17)@21, (12,13)@21, (7,7)@28, (2,4)@28, (5,11)@28, (6,9)@21, (9,9)@21, (8,9)@21, (9,11)@21, (0,12)@21, (5,12)@21, (2,12)@21, (1,13)@21, (3,13)@21, (0,1)@28, (9,17)@21, (9,13)@21, (3,9)@21, (1,7)@28, (0,17)@21, (0,9)@21, (7,9)@21, (2,7)@28, (3,7)@28, (2,3)@28, (1,3)@28, (0,9)@28, (5,12)@28, (5,9)@21, (4,9)@21, (8,9)@28, (4,6)@28, (2,8)@28, (0,7)@28, (1,9)@21, (0,4)@28, (1,4)@28, (7,12)@21, (3,12)@21, (11,12)@21, (2,9)@21, (6,12)@21, (7,13)@21, (0,13)@21, (2,2)@28, (12,14)@21, (3,3)@28, (6,6)@28, (4,4)@28, (6,12)@28, (6,7)@28, (0,11)@28, (7,11)@28, (4,12)@28, (2,12)@28, (12,12)@28, (1,13)@28, (0,0)@26, (7,13)@28, (0,0)@23, (3,13)@28, (6,13)@28, (4,7)@28, (5,7)@28, (7,8)@28, (5,5)@28, (3,8)@28, (0,8)@28, (1,6)@28, (9,12)@28, (4,9)@28, (1,9)@28, (3,10)@28, (4,10)@28, (0,0)@28, (0,0)@22, (3,9)@28, (0,5)@28, (7,9)@28, (2,9)@28, (10,10)@28, (5,9)@28, (1,5)@28, (9,9)@28, (3,6)@28, (10,11)@28, (3,4)@28, (0,3)@28, (1,2)@28, (6,8)@28, (0,10)@28, (7,10)@28, (6,10)@28, (4,5)@28, (1,12)@21, (0,0)@25, (0,2)@28, (5,6)@28, (8,12)@21, (4,12)@21, (0,0)@27, (6,9)@28, (1,1)@28, (12,12)@21, (10,12)@21, (9,12)@21, (11,12)@28, (8,10)@28, (5,8)@28, (9,16)@21, (1,8)@28, (2,6)@28, (1,10)@28, (4,8)@28, (10,12)@28, (8,8)@28, (0,6)@28, (3,5)@28, (2,5)@28, (1,11)@28, (2,10)@28, (4,11)@28, (5,10)@28, (2,11)@28, (8,11)@28, (1,12)@28, (6,11)@28, (0,12)@28, (11,11)@28, (7,12)@28, (9,11)@28, (3,12)@28, (4,13)@28, (0,13)@28, (8,12)@28, (2,13)@28, (13,13)@28, (12,13)@28, (3,11)@28, (8,13)@28, (9,10)@28, (5,13)@28, (11,13)@28, (10,13)@28, (9,13)@28]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [18: (-1)*v5^1 + v3 [23: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (7,7)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,8)@20, (8,9)@20, (8,10)@20, (9,9)@20, (9,10)@20], v5^1 + 0 [22: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (4,8)@20, (6,10)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [3: (1,1)@20, (3,3)@20, (10,10)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [5: (2,9)@20, (2,10)@20, (5,9)@20, (5,10)@20, (9,10)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [5: (2,7)@20, (2,8)@20, (5,7)@20, (5,8)@20, (7,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20], (1 + -1*v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (4,10)@20], (-1 + -1*v7)*v5^1 + v3*v7 [1: (0,10)@20], (-1 + v7 + v7^2)*v5^1 + v3 + -1*v3*v7 [1: (8,9)@20], (1 + v7)*v5^1 + -1*v3 [1: (0,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (6,8)@20]]
	L: {18: 7, 0, 1, 3, 11, 5, 8, 14, 4, 6, 2, 16, 13, 9, 17, 12, 10, 15}
22 / v3
	P: [1: v3^1 + 0 [108: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20, (0,1)@21, (0,2)@21, (0,4)@21, (0,5)@21, (0,6)@21, (0,7)@21, (0,8)@21, (0,10)@21, (0,11)@21, (0,14)@21, (0,15)@21, (0,16)@21, (1,2)@21, (1,3)@21, (1,4)@21, (1,5)@21, (1,6)@21, (1,7)@21, (1,8)@21, (1,10)@21, (1,11)@21, (1,14)@21, (1,15)@21, (1,16)@21, (2,3)@21, (2,4)@21, (2,5)@21, (2,6)@21, (2,7)@21, (2,8)@21, (2,10)@21, (2,11)@21, (2,13)@21, (2,14)@21, (2,15)@21, (2,16)@21, (2,17)@21, (3,4)@21, (3,5)@21, (3,6)@21, (3,7)@21, (3,8)@21, (3,10)@21, (3,11)@21, (3,14)@21, (3,15)@21, (3,16)@21, (4,5)@21, (4,6)@21, (4,7)@21, (4,8)@21, (4,10)@21, (4,11)@21, (4,13)@21, (4,14)@21, (4,15)@21, (4,16)@21, (4,17)@21, (5,6)@21, (5,7)@21, (5,8)@21, (5,10)@21, (5,11)@21, (5,14)@21, (5,15)@21, (5,16)@21, (6,7)@21, (6,8)@21, (6,10)@21, (6,11)@21, (6,13)@21, (6,14)@21, (6,15)@21, (6,16)@21, (6,17)@21, (7,8)@21, (7,10)@21, (7,11)@21, (7,14)@21, (7,15)@21, (7,16)@21, (8,10)@21, (8,11)@21, (8,14)@21, (8,15)@21, (8,16)@21, (10,11)@21, (10,13)@21, (10,14)@21, (10,15)@21, (10,16)@21, (10,17)@21, (11,14)@21, (11,15)@21, (11,16)@21, (13,14)@21, (13,15)@21, (13,16)@21, (13,17)@21, (14,15)@21, (14,16)@21, (15,16)@21, (15,17)@21, (16,17)@21]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [68: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,8)@20, (0,9)@20, (0,10)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,8)@20, (2,9)@20, (2,10)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,8)@20, (4,9)@20, (4,10)@20, (5,6)@20, (5,7)@20, (5,8)@20, (5,9)@20, (5,10)@20, (6,7)@20, (6,8)@20, (6,9)@20, (6,10)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,9)@20, (8,10)@20, (9,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [15: v7^1 + -1 [52: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (3,8)@20, (3,10)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (8,10)@20, (9,9)@20, (1,5)@21, (1,6)@21, (1,8)@21, (1,10)@21, (1,11)@21, (1,15)@21, (2,2)@21, (2,4)@21, (4,4)@21, (5,6)@21, (5,8)@21, (5,10)@21, (5,11)@21, (5,15)@21, (6,8)@21, (6,10)@21, (6,11)@21, (6,13)@21, (6,15)@21, (6,17)@21, (7,14)@21, (7,16)@21, (8,10)@21, (8,11)@21, (8,15)@21, (10,11)@21, (10,13)@21, (10,15)@21, (10,17)@21, (11,15)@21, (13,15)@21, (13,17)@21, (14,16)@21, (15,17)@21], v7^1 + 0 [61: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (1,10)@20, (4,4)@20, (4,8)@20, (6,7)@20, (8,8)@20, (9,10)@20, (0,2)@21, (0,5)@21, (0,10)@21, (0,11)@21, (0,15)@21, (0,16)@21, (1,4)@21, (1,14)@21, (2,3)@21, (2,5)@21, (2,10)@21, (2,11)@21, (2,13)@21, (2,15)@21, (2,16)@21, (2,17)@21, (3,5)@21, (3,10)@21, (3,11)@21, (3,15)@21, (3,16)@21, (4,14)@21, (5,10)@21, (5,11)@21, (5,15)@21, (5,16)@21, (6,7)@21, (8,8)@21, (10,11)@21, (10,13)@21, (10,15)@21, (10,16)@21, (10,17)@21, (11,15)@21, (11,16)@21, (13,15)@21, (13,16)@21, (13,17)@21, (15,16)@21, (15,17)@21, (16,17)@21], v7^1 + 1 [16: (4,6)@20, (7,9)@20, (8,10)@20, (2,4)@21, (2,7)@21, (4,7)@21, (5,6)@21, (5,10)@21, (6,10)@21, (8,11)@21, (8,15)@21, (11,15)@21, (13,17)@21, (14,14)@21, (14,16)@21, (16,16)@21], v7^2 + 1 [4: (2,14)@21, (4,16)@21, (6,15)@21, (8,10)@21], v7^1 + -2 [4: (2,11)@21, (5,16)@21, (6,6)@21, (7,8)@21], v7^2 + (-1)*v7^1 + 1 [6: (2,8)@21, (4,11)@21, (5,14)@21, (6,16)@21, (7,15)@21, (10,10)@21], v7^2 + v7^1 + -1 [7: (4,5)@21, (7,10)@21, (10,17)@21, (11,14)@21, (13,13)@21, (13,15)@21, (15,15)@21], (2)*v7^1 + -1 [6: (2,15)@21, (4,8)@21, (5,5)@21, (6,14)@21, (7,11)@21, (10,16)@21], v7^2 + (-1)*v7^1 + -1 [3: (2,6)@21, (8,16)@21, (17,17)@21], v7^3 + v7^1 + -1 [2: (4,15)@21, (10,14)@21], v7^3 + (-1)*v7^1 + 1 [2: (4,10)@21, (14,15)@21], v7^2 + v7^1 + 1 [2: (10,13)@21, (15,17)@21], v7^2 + -2 [2: (2,17)@21, (13,16)@21], (2)*v7^1 + 1 [1: (6,13)@21], (2)*v7^2 + -1 [1: (4,13)@21]]
	L: {15: 1, 4, 0, 2, 7, 13, 12, 3, 8, 5, 6, 11, 14, 10, 9}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(14,17)@21, (8,17)@21, (8,13)@21, (5,17)@21, (11,17)@21, (7,17)@21, (5,13)@21, (1,17)@21, (3,17)@21, (7,7)@28, (12,17)@21, (12,15)@21, (9,14)@21, (9,10)@21, (11,13)@21, (9,15)@21, (12,16)@21, (0,17)@21, (12,13)@21, (2,7)@28, (2,4)@28, (5,11)@28, (6,9)@21, (9,9)@21, (8,9)@21, (9,11)@21, (0,12)@21, (5,12)@21, (2,12)@21, (1,13)@21, (3,13)@21, (0,1)@28, (9,17)@21, (9,13)@21, (3,9)@21, (1,7)@28, (0,0)@26, (0,9)@21, (7,9)@21, (4,7)@28, (3,7)@28, (3,14)@28, (14,14)@28, (0,9)@28, (5,12)@28, (5,9)@21, (4,9)@21, (8,9)@28, (4,6)@28, (2,8)@28, (0,7)@28, (1,9)@21, (0,4)@28, (1,4)@28, (7,12)@21, (3,12)@21, (11,12)@21, (2,9)@21, (6,12)@21, (7,13)@21, (0,13)@21, (2,2)@28, (12,14)@21, (3,3)@28, (6,6)@28, (4,4)@28, (6,12)@28, (6,7)@28, (0,11)@28, (7,11)@28, (4,12)@28, (2,12)@28, (12,12)@28, (1,13)@28, (0,13)@28, (7,13)@28, (0,0)@23, (3,13)@28, (6,13)@28, (1,14)@28, (0,14)@28, (7,14)@28, (12,14)@28, (2,3)@28, (6,14)@28, (1,3)@28, (9,14)@28, (4,9)@28, (1,9)@28, (3,10)@28, (4,10)@28, (0,0)@28, (0,0)@22, (3,9)@28, (0,5)@28, (7,9)@28, (2,9)@28, (10,10)@28, (5,9)@28, (1,5)@28, (9,9)@28, (3,6)@28, (10,11)@28, (3,4)@28, (0,3)@28, (1,2)@28, (6,8)@28, (0,10)@28, (7,10)@28, (6,10)@28, (4,5)@28, (1,12)@21, (0,0)@25, (0,2)@28, (5,6)@28, (8,12)@21, (4,12)@21, (0,0)@27, (6,9)@28, (1,1)@28, (12,12)@21, (10,12)@21, (9,12)@21, (11,12)@28, (8,10)@28, (5,8)@28, (9,16)@21, (1,8)@28, (2,6)@28, (1,10)@28, (4,8)@28, (10,12)@28, (8,8)@28, (0,6)@28, (3,5)@28, (2,5)@28, (1,11)@28, (2,10)@28, (4,11)@28, (5,10)@28, (2,11)@28, (8,11)@28, (1,12)@28, (6,11)@28, (0,12)@28, (11,11)@28, (7,12)@28, (9,11)@28, (3,12)@28, (4,13)@28, (10,13)@28, (8,12)@28, (2,13)@28, (13,13)@28, (12,13)@28, (3,11)@28, (8,13)@28, (9,10)@28, (5,13)@28, (9,13)@28, (11,13)@28, (5,7)@28, (4,14)@28, (7,8)@28, (2,14)@28, (5,5)@28, (13,14)@28, (3,8)@28, (8,14)@28, (0,8)@28, (5,14)@28, (1,6)@28, (11,14)@28, (10,14)@28, (9,12)@28]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [18: (-1)*v5^1 + v3 [23: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (7,7)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,8)@20, (8,9)@20, (8,10)@20, (9,9)@20, (9,10)@20], v5^1 + 0 [22: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (4,8)@20, (6,10)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [3: (1,1)@20, (3,3)@20, (10,10)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [5: (2,9)@20, (2,10)@20, (5,9)@20, (5,10)@20, (9,10)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [5: (2,7)@20, (2,8)@20, (5,7)@20, (5,8)@20, (7,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20], (1 + -1*v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (4,10)@20], (-1 + -1*v7)*v5^1 + v3*v7 [1: (0,10)@20], (-1 + v7 + v7^2)*v5^1 + v3 + -1*v3*v7 [1: (8,9)@20], (1 + v7)*v5^1 + -1*v3 [1: (0,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (6,8)@20]]
	L: {18: 7, 0, 1, 3, 11, 5, 8, 14, 4, 6, 2, 16, 13, 9, 17, 12, 10, 15}
22 / v3
	P: [1: v3^1 + 0 [112: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20, (0,1)@21, (0,2)@21, (0,4)@21, (0,5)@21, (0,6)@21, (0,7)@21, (0,8)@21, (0,10)@21, (0,11)@21, (0,14)@21, (0,15)@21, (0,16)@21, (1,2)@21, (1,3)@21, (1,4)@21, (1,5)@21, (1,6)@21, (1,7)@21, (1,8)@21, (1,10)@21, (1,11)@21, (1,14)@21, (1,15)@21, (1,16)@21, (2,3)@21, (2,4)@21, (2,5)@21, (2,6)@21, (2,7)@21, (2,8)@21, (2,10)@21, (2,11)@21, (2,13)@21, (2,14)@21, (2,15)@21, (2,16)@21, (2,17)@21, (3,4)@21, (3,5)@21, (3,6)@21, (3,7)@21, (3,8)@21, (3,10)@21, (3,11)@21, (3,14)@21, (3,15)@21, (3,16)@21, (4,5)@21, (4,6)@21, (4,7)@21, (4,8)@21, (4,10)@21, (4,11)@21, (4,13)@21, (4,14)@21, (4,15)@21, (4,16)@21, (4,17)@21, (5,6)@21, (5,7)@21, (5,8)@21, (5,10)@21, (5,11)@21, (5,14)@21, (5,15)@21, (5,16)@21, (5,17)@21, (6,7)@21, (6,8)@21, (6,10)@21, (6,11)@21, (6,13)@21, (6,14)@21, (6,15)@21, (6,16)@21, (6,17)@21, (7,8)@21, (7,10)@21, (7,11)@21, (7,14)@21, (7,15)@21, (7,16)@21, (8,10)@21, (8,11)@21, (8,13)@21, (8,14)@21, (8,15)@21, (8,16)@21, (8,17)@21, (10,11)@21, (10,13)@21, (10,14)@21, (10,15)@21, (10,16)@21, (10,17)@21, (11,14)@21, (11,15)@21, (11,16)@21, (13,14)@21, (13,15)@21, (13,16)@21, (13,17)@21, (14,15)@21, (14,16)@21, (14,17)@21, (15,16)@21, (15,17)@21, (16,17)@21]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [68: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,8)@20, (0,9)@20, (0,10)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,8)@20, (2,9)@20, (2,10)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,8)@20, (4,9)@20, (4,10)@20, (5,6)@20, (5,7)@20, (5,8)@20, (5,9)@20, (5,10)@20, (6,7)@20, (6,8)@20, (6,9)@20, (6,10)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,9)@20, (8,10)@20, (9,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [16: v7^1 + -1 [55: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (3,8)@20, (3,10)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (8,10)@20, (9,9)@20, (1,5)@21, (1,6)@21, (1,8)@21, (1,10)@21, (1,11)@21, (1,15)@21, (2,2)@21, (2,4)@21, (4,4)@21, (5,6)@21, (5,8)@21, (5,10)@21, (5,11)@21, (5,15)@21, (5,17)@21, (6,8)@21, (6,10)@21, (6,11)@21, (6,13)@21, (6,15)@21, (6,17)@21, (7,14)@21, (7,16)@21, (8,10)@21, (8,11)@21, (8,13)@21, (8,15)@21, (8,17)@21, (10,11)@21, (10,13)@21, (10,15)@21, (10,17)@21, (11,15)@21, (13,15)@21, (13,17)@21, (14,16)@21, (15,17)@21], v7^1 + 0 [62: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (1,10)@20, (4,4)@20, (4,8)@20, (6,7)@20, (8,8)@20, (9,10)@20, (0,2)@21, (0,5)@21, (0,10)@21, (0,11)@21, (0,15)@21, (0,16)@21, (1,4)@21, (1,14)@21, (2,3)@21, (2,5)@21, (2,10)@21, (2,11)@21, (2,13)@21, (2,15)@21, (2,16)@21, (2,17)@21, (3,5)@21, (3,10)@21, (3,11)@21, (3,15)@21, (3,16)@21, (4,14)@21, (5,10)@21, (5,11)@21, (5,15)@21, (5,16)@21, (5,17)@21, (6,7)@21, (8,8)@21, (10,11)@21, (10,13)@21, (10,15)@21, (10,16)@21, (10,17)@21, (11,15)@21, (11,16)@21, (13,15)@21, (13,16)@21, (13,17)@21, (15,16)@21, (15,17)@21, (16,17)@21], v7^1 + 1 [16: (4,6)@20, (7,9)@20, (8,10)@20, (2,4)@21, (2,7)@21, (4,7)@21, (5,6)@21, (5,10)@21, (6,10)@21, (8,11)@21, (8,15)@21, (11,15)@21, (13,17)@21, (14,14)@21, (14,16)@21, (16,16)@21], v7^2 + 1 [4: (2,14)@21, (4,16)@21, (6,15)@21, (8,10)@21], v7^1 + -2 [4: (2,11)@21, (5,16)@21, (6,6)@21, (7,8)@21], v7^2 + (-1)*v7^1 + 1 [6: (2,8)@21, (4,11)@21, (5,14)@21, (6,16)@21, (7,15)@21, (10,10)@21], v7^2 + v7^1 + -1 [7: (4,5)@21, (7,10)@21, (10,17)@21, (11,14)@21, (13,13)@21, (13,15)@21, (15,15)@21], (2)*v7^1 + -1 [6: (2,15)@21, (4,8)@21, (5,5)@21, (6,14)@21, (7,11)@21, (10,16)@21], v7^2 + (-1)*v7^1 + -1 [3: (2,6)@21, (8,16)@21, (17,17)@21], v7^3 + v7^1 + -1 [2: (4,15)@21, (10,14)@21], v7^3 + (-1)*v7^1 + 1 [2: (4,10)@21, (14,15)@21], v7^2 + v7^1 + 1 [2: (10,13)@21, (15,17)@21], v7^2 + -2 [2: (2,17)@21, (13,16)@21], (2)*v7^1 + 1 [2: (6,13)@21, (8,17)@21], (2)*v7^2 + -1 [2: (4,13)@21, (14,17)@21], v7^1 + 2 [1: (5,17)@21]]
	L: {16: 1, 4, 0, 2, 15, 7, 13, 12, 3, 8, 5, 6, 11, 14, 10, 9}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(5,13)@21, (11,17)@21, (11,13)@21, (3,17)@21, (12,17)@21, (7,17)@21, (3,13)@21, (1,17)@21, (0,17)@21, (7,7)@28, (6,9)@21, (12,15)@21, (9,14)@21, (9,10)@21, (1,13)@21, (9,15)@21, (12,16)@21, (0,0)@26, (12,13)@21, (2,7)@28, (2,15)@28, (13,15)@28, (4,9)@21, (9,9)@21, (8,9)@21, (9,11)@21, (0,12)@21, (5,12)@21, (2,12)@21, (0,13)@21, (12,14)@21, (0,1)@28, (9,17)@21, (9,13)@21, (3,9)@21, (1,7)@28, (0,13)@28, (0,9)@21, (7,9)@21, (4,7)@28, (3,7)@28, (3,14)@28, (2,4)@28, (7,15)@28, (3,15)@28, (5,9)@21, (11,14)@28, (8,9)@28, (4,6)@28, (2,8)@28, (0,7)@28, (1,9)@21, (0,4)@28, (1,4)@28, (7,12)@21, (3,12)@21, (11,12)@21, (2,9)@21, (6,12)@21, (7,13)@21, (10,12)@21, (2,2)@28, (9,16)@21, (3,3)@28, (6,6)@28, (4,4)@28, (6,12)@28, (6,7)@28, (0,11)@28, (7,11)@28, (4,12)@28, (2,12)@28, (12,12)@28, (1,13)@28, (4,13)@28, (7,13)@28, (0,0)@23, (3,13)@28, (6,13)@28, (1,14)@28, (0,14)@28, (7,14)@28, (12,14)@28, (2,3)@28, (6,14)@28, (1,15)@28, (0,15)@28, (5,11)@28, (15,15)@28, (5,12)@28, (6,15)@28, (0,0)@28, (0,0)@22, (3,9)@28, (0,5)@28, (7,9)@28, (2,9)@28, (10,10)@28, (5,9)@28, (1,5)@28, (9,9)@28, (3,6)@28, (10,11)@28, (3,4)@28, (0,3)@28, (1,2)@28, (6,8)@28, (0,10)@28, (7,10)@28, (6,10)@28, (4,5)@28, (1,12)@21, (0,0)@25, (0,2)@28, (5,6)@28, (8,12)@21, (4,12)@21, (0,0)@27, (6,9)@28, (1,1)@28, (12,12)@21, (1,6)@28, (9,12)@21, (11,12)@28, (8,10)@28, (5,8)@28, (10,14)@28, (1,8)@28, (2,6)@28, (1,10)@28, (4,8)@28, (10,12)@28, (8,8)@28, (0,6)@28, (3,5)@28, (2,5)@28, (1,11)@28, (2,10)@28, (4,11)@28, (5,10)@28, (2,11)@28, (8,11)@28, (1,12)@28, (6,11)@28, (0,12)@28, (11,11)@28, (7,12)@28, (9,11)@28, (3,12)@28, (9,12)@28, (10,13)@28, (8,12)@28, (2,13)@28, (13,13)@28, (12,13)@28, (3,11)@28, (8,13)@28, (9,10)@28, (5,13)@28, (9,13)@28, (11,13)@28, (5,7)@28, (4,14)@28, (7,8)@28, (2,14)@28, (5,5)@28, (13,14)@28, (3,8)@28, (8,14)@28, (0,8)@28, (5,14)@28, (1,3)@28, (14,14)@28, (9,14)@28, (4,15)@28, (4,9)@28, (0,9)@28, (1,9)@28, (12,15)@28, (3,10)@28, (8,15)@28, (4,10)@28, (5,15)@28, (11,15)@28, (14,15)@28, (10,15)@28, (9,15)@28]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [18: (-1)*v5^1 + v3 [23: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (7,7)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,8)@20, (8,9)@20, (8,10)@20, (9,9)@20, (9,10)@20], v5^1 + 0 [22: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (4,8)@20, (6,10)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [3: (1,1)@20, (3,3)@20, (10,10)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [5: (2,9)@20, (2,10)@20, (5,9)@20, (5,10)@20, (9,10)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [5: (2,7)@20, (2,8)@20, (5,7)@20, (5,8)@20, (7,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20], (1 + -1*v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (4,10)@20], (-1 + -1*v7)*v5^1 + v3*v7 [1: (0,10)@20], (-1 + v7 + v7^2)*v5^1 + v3 + -1*v3*v7 [1: (8,9)@20], (1 + v7)*v5^1 + -1*v3 [1: (0,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (6,8)@20]]
	L: {18: 7, 0, 1, 3, 11, 5, 8, 14, 4, 6, 2, 16, 13, 9, 17, 12, 10, 15}
22 / v3
	P: [1: v3^1 + 0 [128: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20, (0,1)@21, (0,2)@21, (0,4)@21, (0,5)@21, (0,6)@21, (0,7)@21, (0,8)@21, (0,10)@21, (0,11)@21, (0,13)@21, (0,14)@21, (0,15)@21, (0,16)@21, (0,17)@21, (1,2)@21, (1,3)@21, (1,4)@21, (1,5)@21, (1,6)@21, (1,7)@21, (1,8)@21, (1,10)@21, (1,11)@21, (1,13)@21, (1,14)@21, (1,15)@21, (1,16)@21, (1,17)@21, (2,3)@21, (2,4)@21, (2,5)@21, (2,6)@21, (2,7)@21, (2,8)@21, (2,10)@21, (2,11)@21, (2,13)@21, (2,14)@21, (2,15)@21, (2,16)@21, (2,17)@21, (3,4)@21, (3,5)@21, (3,6)@21, (3,7)@21, (3,8)@21, (3,10)@21, (3,11)@21, (3,13)@21, (3,14)@21, (3,15)@21, (3,16)@21, (3,17)@21, (4,5)@21, (4,6)@21, (4,7)@21, (4,8)@21, (4,10)@21, (4,11)@21, (4,13)@21, (4,14)@21, (4,15)@21, (4,16)@21, (4,17)@21, (5,6)@21, (5,7)@21, (5,8)@21, (5,10)@21, (5,11)@21, (5,13)@21, (5,14)@21, (5,15)@21, (5,16)@21, (5,17)@21, (6,7)@21, (6,8)@21, (6,10)@21, (6,11)@21, (6,13)@21, (6,14)@21, (6,15)@21, (6,16)@21, (6,17)@21, (7,8)@21, (7,10)@21, (7,11)@21, (7,13)@21, (7,14)@21, (7,15)@21, (7,16)@21, (7,17)@21, (8,10)@21, (8,11)@21, (8,13)@21, (8,14)@21, (8,15)@21, (8,16)@21, (8,17)@21, (10,11)@21, (10,12)@21, (10,13)@21, (10,14)@21, (10,15)@21, (10,16)@21, (10,17)@21, (11,13)@21, (11,14)@21, (11,15)@21, (11,16)@21, (11,17)@21, (12,13)@21, (12,15)@21, (12,16)@21, (12,17)@21, (13,14)@21, (13,15)@21, (13,16)@21, (13,17)@21, (14,15)@21, (14,16)@21, (14,17)@21, (15,16)@21, (15,17)@21, (16,17)@21]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [68: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,8)@20, (0,9)@20, (0,10)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,8)@20, (2,9)@20, (2,10)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,8)@20, (4,9)@20, (4,10)@20, (5,6)@20, (5,7)@20, (5,8)@20, (5,9)@20, (5,10)@20, (6,7)@20, (6,8)@20, (6,9)@20, (6,10)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,9)@20, (8,10)@20, (9,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [17: v7^1 + -1 [64: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (3,8)@20, (3,10)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (8,10)@20, (9,9)@20, (1,5)@21, (1,6)@21, (1,8)@21, (1,10)@21, (1,11)@21, (1,13)@21, (1,15)@21, (1,17)@21, (2,2)@21, (2,4)@21, (4,4)@21, (5,6)@21, (5,8)@21, (5,10)@21, (5,11)@21, (5,13)@21, (5,15)@21, (5,17)@21, (6,8)@21, (6,10)@21, (6,11)@21, (6,13)@21, (6,15)@21, (6,17)@21, (7,14)@21, (7,16)@21, (8,10)@21, (8,11)@21, (8,13)@21, (8,15)@21, (8,17)@21, (10,11)@21, (10,12)@21, (10,13)@21, (10,15)@21, (10,17)@21, (11,13)@21, (11,15)@21, (11,17)@21, (12,13)@21, (12,15)@21, (12,17)@21, (13,15)@21, (13,17)@21, (14,16)@21, (15,17)@21], v7^1 + 0 [69: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (1,10)@20, (4,4)@20, (4,8)@20, (6,7)@20, (8,8)@20, (9,10)@20, (0,2)@21, (0,5)@21, (0,10)@21, (0,11)@21, (0,13)@21, (0,15)@21, (0,16)@21, (0,17)@21, (1,4)@21, (1,14)@21, (2,3)@21, (2,5)@21, (2,10)@21, (2,11)@21, (2,13)@21, (2,15)@21, (2,16)@21, (2,17)@21, (3,5)@21, (3,10)@21, (3,11)@21, (3,13)@21, (3,15)@21, (3,16)@21, (3,17)@21, (4,14)@21, (5,10)@21, (5,11)@21, (5,13)@21, (5,15)@21, (5,16)@21, (5,17)@21, (6,7)@21, (8,8)@21, (10,11)@21, (10,13)@21, (10,15)@21, (10,16)@21, (10,17)@21, (11,13)@21, (11,15)@21, (11,16)@21, (11,17)@21, (13,15)@21, (13,16)@21, (13,17)@21, (15,16)@21, (15,17)@21, (16,17)@21], v7^1 + 1 [19: (4,6)@20, (7,9)@20, (8,10)@20, (1,13)@21, (1,17)@21, (2,4)@21, (2,7)@21, (4,7)@21, (5,6)@21, (5,10)@21, (6,10)@21, (8,11)@21, (8,15)@21, (11,15)@21, (12,15)@21, (13,17)@21, (14,14)@21, (14,16)@21, (16,16)@21], v7^2 + 1 [4: (2,14)@21, (4,16)@21, (6,15)@21, (8,10)@21], v7^1 + -2 [4: (2,11)@21, (5,16)@21, (6,6)@21, (7,8)@21], v7^2 + (-1)*v7^1 + 1 [7: (2,8)@21, (4,11)@21, (5,14)@21, (6,16)@21, (7,15)@21, (10,10)@21, (12,15)@21], v7^2 + v7^1 + -1 [8: (4,5)@21, (7,10)@21, (7,17)@21, (10,17)@21, (11,14)@21, (13,13)@21, (13,15)@21, (15,15)@21], (2)*v7^1 + -1 [6: (2,15)@21, (4,8)@21, (5,5)@21, (6,14)@21, (7,11)@21, (10,16)@21], v7^2 + (-1)*v7^1 + -1 [6: (2,6)@21, (7,13)@21, (8,16)@21, (12,12)@21, (12,17)@21, (17,17)@21], v7^3 + v7^1 + -1 [2: (4,15)@21, (10,14)@21], v7^3 + (-1)*v7^1 + 1 [2: (4,10)@21, (14,15)@21], v7^2 + v7^1 + 1 [4: (10,12)@21, (10,13)@21, (12,13)@21, (15,17)@21], v7^2 + -2 [2: (2,17)@21, (13,16)@21], (2)*v7^1 + 1 [2: (6,13)@21, (8,17)@21], (2)*v7^2 + -1 [2: (4,13)@21, (14,17)@21], v7^1 + 2 [2: (5,17)@21, (11,13)@21], v7^3 + (-1)*v7^2 + 1 [1: (12,16)@21]]
	L: {17: 1, 4, 0, 2, 15, 7, 13, 12, 3, 8, 5, 6, 11, 14, 10, 9, 16}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(12,14)@21, (9,15)@21, (9,10)@21, (9,17)@21, (6,9)@21, (9,9)@21, (9,12)@21, (9,13)@21, (0,9)@21, (7,7)@28, (4,9)@21, (8,9)@21, (9,14)@21, (2,12)@21, (9,16)@21, (0,1)@28, (3,9)@21, (0,0)@26, (7,9)@21, (2,7)@28, (2,15)@28, (13,15)@28, (5,9)@21, (4,6)@28, (0,7)@28, (9,11)@21, (0,12)@21, (5,12)@21, (2,9)@21, (1,1)@28, (2,2)@28, (14,14)@28, (4,4)@28, (6,7)@28, (4,12)@28, (1,7)@28, (0,13)@28, (0,0)@23, (3,13)@28, (4,7)@28, (3,7)@28, (3,14)@28, (2,4)@28, (7,15)@28, (3,15)@28, (0,0)@22, (11,14)@28, (8,9)@28, (10,10)@28, (2,8)@28, (3,6)@28, (1,9)@21, (0,4)@28, (1,4)@28, (7,12)@21, (3,12)@21, (11,12)@21, (4,12)@21, (6,12)@21, (10,15)@28, (12,15)@28, (11,12)@28, (5,8)@28, (3,3)@28, (6,6)@28, (8,8)@28, (6,12)@28, (2,5)@28, (0,11)@28, (7,11)@28, (1,3)@28, (2,12)@28, (12,12)@28, (1,13)@28, (4,13)@28, (7,13)@28, (13,13)@28, (5,15)@28, (6,13)@28, (1,14)@28, (0,14)@28, (7,14)@28, (12,14)@28, (2,3)@28, (6,14)@28, (1,15)@28, (0,15)@28, (5,11)@28, (15,15)@28, (5,12)@28, (6,15)@28, (0,0)@28, (8,15)@28, (3,9)@28, (0,5)@28, (7,9)@28, (2,9)@28, (3,10)@28, (5,9)@28, (1,5)@28, (9,9)@28, (0,9)@28, (10,11)@28, (3,4)@28, (0,3)@28, (1,2)@28, (6,8)@28, (0,10)@28, (7,10)@28, (6,10)@28, (4,5)@28, (1,12)@21, (0,0)@25, (0,2)@28, (5,6)@28, (8,12)@21, (4,15)@28, (0,0)@27, (6,9)@28, (4,10)@28, (4,9)@28, (1,6)@28, (11,15)@28, (5,14)@28, (8,10)@28, (1,9)@28, (10,14)@28, (1,8)@28, (2,6)@28, (1,10)@28, (4,8)@28, (10,12)@28, (9,14)@28, (0,6)@28, (3,5)@28, (9,15)@28, (1,11)@28, (2,10)@28, (4,11)@28, (5,10)@28, (2,11)@28, (8,11)@28, (1,12)@28, (6,11)@28, (0,12)@28, (11,11)@28, (7,12)@28, (9,11)@28, (3,12)@28, (9,12)@28, (10,13)@28, (8,12)@28, (2,13)@28, (14,15)@28, (12,13)@28, (3,11)@28, (8,13)@28, (9,10)@28, (5,13)@28, (9,13)@28, (11,13)@28, (5,7)@28, (4,14)@28, (7,8)@28, (2,14)@28, (5,5)@28, (13,14)@28, (3,8)@28, (8,14)@28, (0,8)@28, (1,16)@28, (4,16)@28, (0,16)@28, (2,16)@28, (15,16)@28, (7,16)@28, (13,16)@28, (12,16)@28, (3,16)@28, (8,16)@28, (5,16)@28, (6,16)@28, (11,16)@28, (14,16)@28, (10,16)@28, (9,16)@28, (16,16)@28]

INFO  smtrat.cad      CADCore.h:164  operator()(): Projected into 10000000000000000000000000000|0, new projection is
0
	P: [22: v16 [0: ], v13 [0: ], v19 [0: ], v14 [0: ], v17 [0: ], -1*v14*v19 + v17^2 [0: ], -1 + v1 [0: ], -1 + v2 [0: ], -1 + v7 [0: ], 1 + -1*v2 + -1*v9 + v1*v9 [0: ], v6 [0: ], v8 [0: ], v11 [0: ], v12 [0: ], -1*v3*v13 + v3*v27 + v7*v24 + -1*v5*v16 + v5*v13 + v9*v22 [0: ], -1*v4*v5*v19 + 2*v4*v5*v17 + -1*v4*v5*v14 + v3*v4*v14 + -1*v3*v4*v17 + v10*v13 + -1*v3*v14 + v5*v14 + -1*v10*v16 + -1*v5*v17 + v3*v30 + v7*v29 + v9*v28 + v11*v24 + v12*v22 + v3*v6*v29 + v3*v8*v28 + v6*v7*v26 + v6*v9*v25 + v7*v8*v25 + v8*v9*v23 [0: ], -1*v13 + v16 + -1*v1*v16 + v2*v13 [0: ], -1*v1*v3*v17 + v1*v5*v17 + -1*v3*v14 + v5*v14 + v3*v17 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 [0: ], (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [0: ], -1*v1 + v2 [0: ], -1*v7 + v9 [0: ], v3 [0: ]]
1 / v15
	P: [1: (-1*v3 + v5 + -1*v2*v3*v4 + -1*v4*v5 + v3*v4 + -1*v2*v5 + v2*v3 + v2*v4*v5)*v15^1 + v3*v18 + -2*v5*v18 + -2*v2*v4*v5*v18 + v2*v3*v4*v18 + -1*v1*v4*v5*v21 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v18 + -1*v1*v3*v4*v20 + v1*v3*v4*v18 + v5*v8*v17 + -1*v5*v8*v14 + -1*v5*v6*v19 + v5*v6*v17 + v4*v9*v17 + -1*v4*v9*v14 + -1*v4*v7*v19 + v4*v7*v17 + v4*v5*v21 + -3*v4*v5*v20 + 3*v4*v5*v18 + v3*v8*v14 + -1*v3*v6*v17 + v3*v4*v20 + -2*v3*v4*v18 + v2*v10*v17 + -1*v2*v10*v14 + v2*v5*v18 + -1*v1*v10*v19 + v1*v10*v17 + -1*v1*v5*v20 + v1*v5*v18 + -1*v1*v3*v18 + v12*v13 + -1*v11*v16 + v10*v19 + -2*v10*v17 + v10*v14 + v9*v14 + -1*v7*v17 + v5*v20 + v2*v4*v5*v20 [1: (18,18)@0]]
	L: {1: 0}
2 / v23
	P: [1: (v8*v9)*v23^1 + v6*v9*v25 + v6*v7*v26 + v3*v8*v28 + v3*v6*v29 + v12*v22 + v11*v24 + v9*v28 + v7*v29 + v3*v30 + -1*v5*v17 + -1*v10*v16 + v5*v14 + -1*v3*v14 + v10*v13 + -1*v3*v4*v17 + v3*v4*v14 + -1*v4*v5*v14 + 2*v4*v5*v17 + -1*v4*v5*v19 + v7*v8*v25 [1: (15,15)@0]]
	L: {1: 0}
3 / v27
	P: [1: (v3)*v27^1 + v5*v13 + -1*v3*v13 + -1*v5*v16 + v7*v24 + v9*v22 [1: (14,14)@0]]
	L: {1: 0}
4 / v20
	P: [0: ]
	L: {0: }
5 / v22
	P: [0: ]
	L: {0: }
6 / v2
	P: [5: v2^1 + -1 [2: (7,7)@0, (0,0)@1], v2^1 + -1*v1 [1: (19,19)@0], (-1)*v2^1 + 1 + -1*v9 + v1*v9 [1: (9,9)@0], (v13)*v2^1 + v16 + -1*v13 + -1*v1*v16 [1: (16,16)@0], (v3*v14 + -1*v5*v14 + v5*v17)*v2^1 + v9*v13 + -1*v7*v16 + v5*v19 + -2*v5*v17 + v3*v17 + v5*v14 + -1*v3*v14 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 [1: (17,17)@0]]
	L: {5: 2, 0, 1, 3, 4}
7 / v24
	P: [0: ]
	L: {0: }
8 / v1
	P: [5: v1^1 + -1 [7: (6,6)@0, (0,1)@6, (0,2)@6, (0,3)@6, (1,2)@6, (1,3)@6, (2,3)@6], (-1*v5*v13*v19 + v5*v13*v17 + -1*v3*v13*v17 + v3*v14*v16 + -1*v5*v14*v16 + v5*v16*v17)*v1^1 + v5*v13*v19 + -1*v5*v13*v17 + v3*v13*v17 + -1*v3*v14*v16 + v5*v14*v16 + -1*v5*v16*v17 + -1*v7*v13*v16 + v9*v13^2 [1: (3,4)@6], (-1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 + -1*v5*v19)*v1^1 + v3*v17 + -1*v3*v14 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 [1: (1,4)@6], (v3*v17 + -1*v5*v17 + v5*v19)*v1^1 + -1*v3*v17 + v5*v17 + -1*v5*v19 + v7*v16 + -1*v9*v13 [1: (0,4)@6], (v3*v9*v14 + -1*v5*v19 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17)*v1^1 + v9*v13 + -1*v7*v16 + v5*v19 + -1*v5*v17 + v3*v17 + -1*v3*v9*v14 + v5*v9*v14 + -1*v5*v9*v17 [1: (2,4)@6]]
	L: {5: 0, 2, 3, 4, 1}
9 / v25
	P: [0: ]
	L: {0: }
10 / v18
	P: [0: ]
	L: {0: }
11 / v26
	P: [0: ]
	L: {0: }
12 / v21
	P: [0: ]
	L: {0: }
13 / v28
	P: [0: ]
	L: {0: }
14 / v6
	P: [1: v6^1 + 0 [1: (10,10)@0]]
	L: {1: 0}
15 / v16
	P: [5: v16^1 + 0 [3: (0,0)@0, (0,3)@6, (1,3)@8], (-1)*v16^1 + v13 [2: (1,3)@6, (1,2)@8], (-1)*v16^1 + v9*v13 [2: (2,3)@6, (1,4)@8], (-1*v7)*v16^1 + v9*v13 [10: (0,1)@8, (0,2)@8, (0,3)@8, (0,4)@8, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8], (v3*v14 + -1*v5*v14 + v5*v17)*v16^1 + -1*v3*v13*v17 + v5*v13*v17 + -1*v5*v13*v19 [1: (1,1)@8]]
	L: {5: 1, 2, 0, 3, 4}
16 / v19
	P: [6: v19^1 + 0 [1: (2,2)@0], (-1*v14)*v19^1 + v17^2 [1: (5,5)@0], (v5)*v19^1 + v3*v17 + -1*v5*v17 [2: (3,3)@8, (0,4)@15], (-1*v5)*v19^1 + -1*v5*v14 + -1*v3*v17 + v3*v14 + 2*v5*v17 [2: (2,2)@8, (1,4)@15], (-1*v5)*v19^1 + v3*v9*v14 + v5*v17 + -1*v3*v17 + -1*v5*v9*v14 + v5*v9*v17 [2: (4,4)@8, (2,4)@15], (-1*v5*v7)*v19^1 + v3*v9*v14 + -1*v3*v7*v17 + v5*v7*v17 + -1*v5*v9*v14 + v5*v9*v17 [1: (3,4)@15]]
	L: {6: 0, 3, 4, 2, 1, 5}
17 / v9
	P: [8: v9^1 + -1*v7 [1: (20,20)@0], v9^1 + 0 [9: (0,0)@2, (0,2)@6, (3,4)@8, (0,2)@15, (0,3)@15, (2,3)@15, (2,4)@16, (2,5)@16, (4,5)@16], v9^1 + -1 [4: (1,2)@6, (2,4)@8, (1,2)@15, (3,4)@16], (-1)*v9^1 + v7 [2: (1,3)@15, (3,5)@16], (v14)*v9^1 + -1*v17 [1: (1,4)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v17 + v5*v17 [1: (0,4)@16], (v14)*v9^1 + -1*v7*v17 [1: (1,5)@16], (v3*v14 + -1*v5*v14 + v5*v17)*v9^1 + -1*v3*v7*v17 + v5*v7*v17 [1: (0,5)@16]]
	L: {8: 3, 1, 2, 0, 4, 6, 5, 7}
18 / v8
	P: [1: v8^1 + 0 [2: (11,11)@0, (0,0)@2]]
	L: {1: 0}
19 / v13
	P: [1: v13^1 + 0 [13: (1,1)@0, (3,3)@6, (0,1)@8, (0,1)@15, (0,2)@15, (0,3)@15, (0,4)@15, (1,2)@15, (1,3)@15, (1,4)@15, (2,3)@15, (2,4)@15, (3,4)@15]]
	L: {1: 0}
20 / v14
	P: [11: v14^1 + 0 [5: (3,3)@0, (1,1)@16, (4,4)@17, (4,6)@17, (6,6)@17], (v3 + -1*v5)*v14^1 + v5*v17 [21: (4,4)@6, (1,2)@8, (1,3)@8, (1,4)@8, (2,3)@8, (2,4)@8, (3,4)@8, (4,4)@15, (1,2)@16, (1,3)@16, (1,4)@16, (1,5)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,4)@16, (3,5)@16, (4,5)@16, (5,5)@17, (5,7)@17, (7,7)@17], v14^1 + -1*v17 [3: (1,3)@16, (0,6)@17, (3,6)@17], (v3 + -1*v5)*v14^1 + -1*v3*v17 + 2*v5*v17 [4: (0,3)@16, (0,7)@17, (2,5)@17, (3,7)@17], (v7)*v14^1 + -1*v17 [2: (0,4)@17, (3,4)@17], (-1)*v14^1 + v17 [1: (2,4)@17], (-1)*v14^1 + v7*v17 [1: (2,6)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + v5*v7*v17 [1: (5,6)@17], (v3*v7 + -1*v5*v7)*v14^1 + -1*v3*v17 + v5*v17 + v5*v7*v17 [2: (0,5)@17, (3,5)@17], (-1*v3 + v5 + v3*v7 + -1*v5*v7)*v14^1 + -1*v5*v17 [1: (4,7)@17], (-1*v3 + v5)*v14^1 + -1*v5*v17 + v3*v7*v17 + -1*v5*v7*v17 [1: (2,7)@17]]
	L: {11: 5, 6, 0, 2, 1, 3, 10, 4, 8, 9, 7}
21 / v5
	P: [18: (-1)*v5^1 + v3 [23: (0,0)@1, (0,2)@16, (1,5)@17, (1,7)@17, (5,7)@17, (1,3)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (7,7)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,8)@20, (8,9)@20, (8,10)@20, (9,9)@20, (9,10)@20], v5^1 + 0 [22: (2,2)@16, (2,3)@16, (2,4)@16, (2,5)@16, (3,3)@16, (3,4)@16, (3,5)@16, (4,4)@16, (4,5)@16, (5,5)@16, (4,5)@17, (6,7)@17, (0,1)@20, (0,7)@20, (0,9)@20, (1,7)@20, (1,9)@20, (2,3)@20, (3,5)@20, (4,8)@20, (6,10)@20, (7,9)@20], (-1 + v7)*v5^1 + v3 [1: (1,4)@20], v5^1 + -1*v3 [3: (1,1)@20, (3,3)@20, (10,10)@20], (1 + -1*v7)*v5^1 + v3*v7 [1: (1,6)@20], (1 + -2*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,4)@20, (3,9)@20, (4,9)@20], (2 + -1*v7)*v5^1 + -1*v3 + v3*v7 [3: (3,6)@20, (3,7)@20, (6,7)@20], (-2)*v5^1 + v3 [1: (0,3)@20], (-1*v7)*v5^1 + -1*v3 + v3*v7 [5: (2,9)@20, (2,10)@20, (5,9)@20, (5,10)@20, (9,10)@20], (-1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (6,9)@20], (1 + -1*v7 + v7^2)*v5^1 + -1*v3 + v3*v7 [1: (4,7)@20], v5^1 + -1*v3 + v3*v7 [5: (2,7)@20, (2,8)@20, (5,7)@20, (5,8)@20, (7,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3*v7 + v3*v7^2 [1: (7,10)@20], (1 + -1*v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (4,10)@20], (-1 + -1*v7)*v5^1 + v3*v7 [1: (0,10)@20], (-1 + v7 + v7^2)*v5^1 + v3 + -1*v3*v7 [1: (8,9)@20], (1 + v7)*v5^1 + -1*v3 [1: (0,8)@20], (1 + v7 + -1*v7^2)*v5^1 + -1*v3 + v3*v7^2 [1: (6,8)@20]]
	L: {18: 7, 0, 1, 3, 11, 5, 8, 14, 4, 6, 2, 16, 13, 9, 17, 12, 10, 15}
22 / v3
	P: [1: v3^1 + 0 [135: (21,21)@0, (0,0)@3, (1,2)@20, (1,5)@20, (0,1)@21, (0,2)@21, (0,4)@21, (0,5)@21, (0,6)@21, (0,7)@21, (0,8)@21, (0,10)@21, (0,11)@21, (0,13)@21, (0,14)@21, (0,15)@21, (0,16)@21, (0,17)@21, (1,2)@21, (1,3)@21, (1,4)@21, (1,5)@21, (1,6)@21, (1,7)@21, (1,8)@21, (1,10)@21, (1,11)@21, (1,13)@21, (1,14)@21, (1,15)@21, (1,16)@21, (1,17)@21, (2,3)@21, (2,4)@21, (2,5)@21, (2,6)@21, (2,7)@21, (2,8)@21, (2,10)@21, (2,11)@21, (2,13)@21, (2,14)@21, (2,15)@21, (2,16)@21, (2,17)@21, (3,4)@21, (3,5)@21, (3,6)@21, (3,7)@21, (3,8)@21, (3,10)@21, (3,11)@21, (3,13)@21, (3,14)@21, (3,15)@21, (3,16)@21, (3,17)@21, (4,5)@21, (4,6)@21, (4,7)@21, (4,8)@21, (4,10)@21, (4,11)@21, (4,13)@21, (4,14)@21, (4,15)@21, (4,16)@21, (4,17)@21, (5,6)@21, (5,7)@21, (5,8)@21, (5,10)@21, (5,11)@21, (5,13)@21, (5,14)@21, (5,15)@21, (5,16)@21, (5,17)@21, (6,7)@21, (6,8)@21, (6,10)@21, (6,11)@21, (6,13)@21, (6,14)@21, (6,15)@21, (6,16)@21, (6,17)@21, (7,8)@21, (7,10)@21, (7,11)@21, (7,13)@21, (7,14)@21, (7,15)@21, (7,16)@21, (7,17)@21, (8,10)@21, (8,11)@21, (8,13)@21, (8,14)@21, (8,15)@21, (8,16)@21, (8,17)@21, (9,10)@21, (9,12)@21, (9,13)@21, (9,15)@21, (9,16)@21, (9,17)@21, (10,11)@21, (10,12)@21, (10,13)@21, (10,14)@21, (10,15)@21, (10,16)@21, (10,17)@21, (11,13)@21, (11,14)@21, (11,15)@21, (11,16)@21, (11,17)@21, (12,13)@21, (12,14)@21, (12,15)@21, (12,16)@21, (12,17)@21, (13,14)@21, (13,15)@21, (13,16)@21, (13,17)@21, (14,15)@21, (14,16)@21, (14,17)@21, (15,16)@21, (15,17)@21, (16,17)@21]]
	L: {1: 0}
23 / v12
	P: [1: v12^1 + 0 [1: (13,13)@0]]
	L: {1: 0}
24 / v10
	P: [0: ]
	L: {0: }
25 / v4
	P: [1: v4^1 + -1 [1: (0,0)@1]]
	L: {1: 0}
26 / v17
	P: [1: v17^1 + 0 [68: (4,4)@0, (0,1)@16, (0,2)@16, (1,2)@16, (1,4)@17, (1,5)@17, (1,6)@17, (1,7)@17, (4,5)@17, (4,6)@17, (4,7)@17, (5,6)@17, (5,7)@17, (6,7)@17, (0,1)@20, (0,2)@20, (0,3)@20, (0,4)@20, (0,5)@20, (0,6)@20, (0,7)@20, (0,8)@20, (0,9)@20, (0,10)@20, (1,2)@20, (1,3)@20, (1,4)@20, (1,5)@20, (1,6)@20, (1,7)@20, (1,8)@20, (1,9)@20, (1,10)@20, (2,3)@20, (2,4)@20, (2,6)@20, (2,7)@20, (2,8)@20, (2,9)@20, (2,10)@20, (3,4)@20, (3,5)@20, (3,6)@20, (3,7)@20, (3,8)@20, (3,9)@20, (3,10)@20, (4,5)@20, (4,6)@20, (4,7)@20, (4,8)@20, (4,9)@20, (4,10)@20, (5,6)@20, (5,7)@20, (5,8)@20, (5,9)@20, (5,10)@20, (6,7)@20, (6,8)@20, (6,9)@20, (6,10)@20, (7,8)@20, (7,9)@20, (7,10)@20, (8,9)@20, (8,10)@20, (9,10)@20]]
	L: {1: 0}
27 / v11
	P: [1: v11^1 + 0 [1: (12,12)@0]]
	L: {1: 0}
28 / v7
	P: [18: v7^1 + -1 [69: (8,8)@0, (2,3)@15, (4,5)@16, (0,2)@17, (2,3)@17, (4,6)@17, (5,7)@17, (2,4)@20, (2,6)@20, (3,8)@20, (3,10)@20, (4,5)@20, (4,6)@20, (5,6)@20, (7,7)@20, (7,9)@20, (8,10)@20, (9,9)@20, (1,5)@21, (1,6)@21, (1,8)@21, (1,10)@21, (1,11)@21, (1,13)@21, (1,15)@21, (1,17)@21, (2,2)@21, (2,4)@21, (4,4)@21, (5,6)@21, (5,8)@21, (5,10)@21, (5,11)@21, (5,13)@21, (5,15)@21, (5,17)@21, (6,8)@21, (6,10)@21, (6,11)@21, (6,13)@21, (6,15)@21, (6,17)@21, (7,14)@21, (7,16)@21, (8,10)@21, (8,11)@21, (8,13)@21, (8,15)@21, (8,17)@21, (9,10)@21, (9,12)@21, (9,13)@21, (9,15)@21, (9,17)@21, (10,11)@21, (10,12)@21, (10,13)@21, (10,15)@21, (10,17)@21, (11,13)@21, (11,15)@21, (11,17)@21, (12,13)@21, (12,15)@21, (12,17)@21, (13,15)@21, (13,17)@21, (14,16)@21, (15,17)@21], v7^1 + 0 [71: (3,3)@15, (5,5)@16, (0,1)@17, (0,6)@17, (0,7)@17, (1,3)@17, (1,6)@17, (1,7)@17, (3,6)@17, (3,7)@17, (6,7)@17, (0,6)@20, (0,7)@20, (1,9)@20, (1,10)@20, (4,4)@20, (4,8)@20, (6,7)@20, (8,8)@20, (9,10)@20, (0,2)@21, (0,5)@21, (0,10)@21, (0,11)@21, (0,13)@21, (0,15)@21, (0,16)@21, (0,17)@21, (1,4)@21, (1,14)@21, (2,3)@21, (2,5)@21, (2,10)@21, (2,11)@21, (2,13)@21, (2,15)@21, (2,16)@21, (2,17)@21, (3,5)@21, (3,10)@21, (3,11)@21, (3,13)@21, (3,15)@21, (3,16)@21, (3,17)@21, (4,14)@21, (5,10)@21, (5,11)@21, (5,13)@21, (5,15)@21, (5,16)@21, (5,17)@21, (6,7)@21, (8,8)@21, (9,12)@21, (10,11)@21, (10,13)@21, (10,15)@21, (10,16)@21, (10,17)@21, (11,13)@21, (11,15)@21, (11,16)@21, (11,17)@21, (12,14)@21, (13,15)@21, (13,16)@21, (13,17)@21, (15,16)@21, (15,17)@21, (16,17)@21], v7^1 + 1 [20: (4,6)@20, (7,9)@20, (8,10)@20, (1,13)@21, (1,17)@21, (2,4)@21, (2,7)@21, (4,7)@21, (5,6)@21, (5,10)@21, (6,10)@21, (8,11)@21, (8,15)@21, (9,10)@21, (11,15)@21, (12,15)@21, (13,17)@21, (14,14)@21, (14,16)@21, (16,16)@21], v7^2 + 1 [4: (2,14)@21, (4,16)@21, (6,15)@21, (8,10)@21], v7^1 + -2 [4: (2,11)@21, (5,16)@21, (6,6)@21, (7,8)@21], v7^2 + (-1)*v7^1 + 1 [9: (2,8)@21, (4,11)@21, (5,14)@21, (6,16)@21, (7,15)@21, (9,9)@21, (9,10)@21, (10,10)@21, (12,15)@21], v7^2 + v7^1 + -1 [8: (4,5)@21, (7,10)@21, (7,17)@21, (10,17)@21, (11,14)@21, (13,13)@21, (13,15)@21, (15,15)@21], (2)*v7^1 + -1 [6: (2,15)@21, (4,8)@21, (5,5)@21, (6,14)@21, (7,11)@21, (10,16)@21], v7^2 + (-1)*v7^1 + -1 [7: (2,6)@21, (7,13)@21, (8,16)@21, (9,13)@21, (12,12)@21, (12,17)@21, (17,17)@21], v7^3 + v7^1 + -1 [2: (4,15)@21, (10,14)@21], v7^3 + (-1)*v7^1 + 1 [2: (4,10)@21, (14,15)@21], v7^2 + v7^1 + 1 [6: (9,15)@21, (9,17)@21, (10,12)@21, (10,13)@21, (12,13)@21, (15,17)@21], v7^2 + -2 [2: (2,17)@21, (13,16)@21], (2)*v7^1 + 1 [2: (6,13)@21, (8,17)@21], (2)*v7^2 + -1 [2: (4,13)@21, (14,17)@21], v7^1 + 2 [2: (5,17)@21, (11,13)@21], v7^3 + (-1)*v7^2 + 1 [1: (12,16)@21], v7^3 + (-1)*v7^2 + -1 [1: (9,16)@21]]
	L: {18: 1, 4, 0, 2, 15, 7, 13, 12, 3, 8, 5, 6, 11, 14, 10, 9, 17, 16}
29 / v29
	P: [0: ]
	L: {0: }
30 / v30
	P: [0: ]
	L: {0: }
Q: [(9,14)@21, (6,9)@21, (9,11)@21, (3,9)@21, (4,9)@21, (8,9)@21, (2,12)@21, (0,1)@28, (0,9)@21, (7,7)@28, (5,9)@21, (0,7)@28, (1,9)@21, (2,9)@21, (1,1)@28, (4,4)@28, (4,12)@28, (0,0)@26, (7,9)@21, (2,7)@28, (2,15)@28, (13,15)@28, (0,0)@22, (4,6)@28, (3,6)@28, (0,4)@28, (0,12)@21, (5,12)@21, (6,12)@21, (12,15)@28, (2,2)@28, (14,14)@28, (6,12)@28, (6,7)@28, (1,3)@28, (1,7)@28, (0,13)@28, (0,0)@23, (3,13)@28, (4,7)@28, (3,7)@28, (3,14)@28, (2,4)@28, (7,15)@28, (3,15)@28, (0,0)@28, (11,14)@28, (8,9)@28, (10,10)@28, (2,8)@28, (10,11)@28, (3,4)@28, (1,2)@28, (1,4)@28, (7,12)@21, (3,12)@21, (11,12)@21, (4,12)@21, (0,0)@27, (10,15)@28, (11,15)@28, (11,12)@28, (5,8)@28, (3,3)@28, (6,6)@28, (8,8)@28, (3,5)@28, (2,5)@28, (0,11)@28, (7,11)@28, (1,12)@28, (2,12)@28, (12,12)@28, (1,13)@28, (4,13)@28, (7,13)@28, (13,13)@28, (5,15)@28, (6,13)@28, (1,14)@28, (0,14)@28, (7,14)@28, (12,14)@28, (2,3)@28, (6,14)@28, (1,15)@28, (0,15)@28, (5,11)@28, (15,15)@28, (5,12)@28, (6,15)@28, (6,16)@28, (8,15)@28, (3,9)@28, (0,5)@28, (7,9)@28, (2,9)@28, (3,10)@28, (5,9)@28, (1,5)@28, (9,9)@28, (0,9)@28, (8,16)@28, (10,16)@28, (0,3)@28, (5,16)@28, (6,8)@28, (0,10)@28, (7,10)@28, (6,10)@28, (4,5)@28, (1,12)@21, (0,0)@25, (0,2)@28, (5,6)@28, (8,12)@21, (4,15)@28, (11,16)@28, (6,9)@28, (4,10)@28, (4,9)@28, (1,6)@28, (9,16)@28, (5,14)@28, (8,10)@28, (1,9)@28, (10,14)@28, (1,8)@28, (2,6)@28, (1,10)@28, (4,8)@28, (10,12)@28, (9,14)@28, (0,6)@28, (14,16)@28, (9,15)@28, (1,11)@28, (2,10)@28, (4,11)@28, (5,10)@28, (2,11)@28, (8,11)@28, (16,16)@28, (6,11)@28, (0,12)@28, (11,11)@28, (7,12)@28, (9,11)@28, (3,12)@28, (9,12)@28, (10,13)@28, (8,12)@28, (2,13)@28, (14,15)@28, (12,13)@28, (3,11)@28, (8,13)@28, (9,10)@28, (5,13)@28, (9,13)@28, (11,13)@28, (5,7)@28, (4,14)@28, (7,8)@28, (2,14)@28, (5,5)@28, (13,14)@28, (3,8)@28, (8,14)@28, (0,8)@28, (1,16)@28, (4,16)@28, (0,16)@28, (2,16)@28, (15,16)@28, (7,16)@28, (13,16)@28, (12,16)@28, (3,16)@28, (1,17)@28, (4,17)@28, (0,17)@28, (2,17)@28, (15,17)@28, (7,17)@28, (13,17)@28, (12,17)@28, (3,17)@28, (8,17)@28, (5,17)@28, (6,17)@28, (11,17)@28, (14,17)@28, (10,17)@28, (9,17)@28, (17,17)@28, (16,17)@28]

INFO  smtrat.cad      CADCore.h:161  operator()(): Projection has finished, returning UNSAT
INFO  smtrat.cad NewCADModule.tpp:133  checkCore(): Infeasible subset: [1: {17: -1*v16 < 0, -1*v13 < 0, v14 < 0, -1*v17 < 0, -1*v14*v19 + v17^2 < 0, -1 + v1 < 0, -1 + v7 = 0, 1 + -1*v2 + -1*v9 + v1*v9 = 0, v6 = 0, v8 = 0, v11 = 0, v12 = 0, -1*v13 + v16 + -1*v1*v16 + v2*v13 = 0, -1*v3*v14 + v3*v17 + v5*v14 + -2*v5*v17 + v5*v19 + -1*v7*v16 + v9*v13 + -1*v1*v3*v17 + v1*v5*v17 + -1*v1*v5*v19 + v2*v3*v14 + -1*v2*v5*v14 + v2*v5*v17 = 0, -1*v3*v15 + v3*v18 + v5*v15 + -2*v5*v18 + v5*v20 + -1*v7*v17 + v9*v14 + v10*v14 + -2*v10*v17 + v10*v19 + -1*v11*v16 + v12*v13 + -1*v1*v3*v18 + v1*v5*v18 + -1*v1*v5*v20 + v1*v10*v17 + -1*v1*v10*v19 + v2*v3*v15 + -1*v2*v5*v15 + v2*v5*v18 + -1*v2*v10*v14 + v2*v10*v17 + v3*v4*v15 + -2*v3*v4*v18 + v3*v4*v20 + -1*v3*v6*v17 + v3*v8*v14 + -1*v4*v5*v15 + 3*v4*v5*v18 + -3*v4*v5*v20 + v4*v5*v21 + v4*v7*v17 + -1*v4*v7*v19 + -1*v4*v9*v14 + v4*v9*v17 + v5*v6*v17 + -1*v5*v6*v19 + -1*v5*v8*v14 + v5*v8*v17 + v1*v3*v4*v18 + -1*v1*v3*v4*v20 + -1*v1*v4*v5*v18 + 2*v1*v4*v5*v20 + -1*v1*v4*v5*v21 + -1*v2*v3*v4*v15 + v2*v3*v4*v18 + v2*v4*v5*v15 + -2*v2*v4*v5*v18 + v2*v4*v5*v20 = 0, -1*v7 + v9 = 0, v3 = 0}]
INFO  smtrat.module  Module.cpp:866  foundAnswer(): foundAnswer of NewCADModule<NewCADChordal> (2) is UNSAT
INFO  smtrat.module  Module.cpp:866  foundAnswer(): foundAnswer of SATModule<SATSettings1> (1) is UNSAT
INFO  smtrat.module  Module.cpp:866  foundAnswer(): foundAnswer of Module (0) is UNSAT
